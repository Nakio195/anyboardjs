ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_rawFilterData1,10,4
  18              		.comm	CapSense_rawFilterData2,10,4
  19              		.global	CapSense_sensorBaseline
  20              		.bss
  21              		.align	2
  22              		.type	CapSense_sensorBaseline, %object
  23              		.size	CapSense_sensorBaseline, 10
  24              	CapSense_sensorBaseline:
  25 0000 00000000 		.space	10
  25      00000000 
  25      0000
  26              		.global	CapSense_sensorBaselineLow
  27 000a 0000     		.align	2
  28              		.type	CapSense_sensorBaselineLow, %object
  29              		.size	CapSense_sensorBaselineLow, 5
  30              	CapSense_sensorBaselineLow:
  31 000c 00000000 		.space	5
  31      00
  32              		.global	CapSense_sensorSignal
  33 0011 000000   		.align	2
  34              		.type	CapSense_sensorSignal, %object
  35              		.size	CapSense_sensorSignal, 5
  36              	CapSense_sensorSignal:
  37 0014 00000000 		.space	5
  37      00
  38              		.global	CapSense_sensorOnMask
  39 0019 000000   		.align	2
  40              		.type	CapSense_sensorOnMask, %object
  41              		.size	CapSense_sensorOnMask, 1
  42              	CapSense_sensorOnMask:
  43 001c 00       		.space	1
  44              		.comm	CapSense_lowBaselineResetCnt,5,4
  45              		.global	CapSense_lowBaselineReset
  46              		.data
  47              		.align	2
  48              		.type	CapSense_lowBaselineReset, %object
  49              		.size	CapSense_lowBaselineReset, 5
  50              	CapSense_lowBaselineReset:
  51 0000 1E       		.byte	30
  52 0001 1E       		.byte	30
  53 0002 1E       		.byte	30
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 2


  54 0003 1E       		.byte	30
  55 0004 1E       		.byte	30
  56              		.global	CapSense_enableRawFilters
  57              		.type	CapSense_enableRawFilters, %object
  58              		.size	CapSense_enableRawFilters, 1
  59              	CapSense_enableRawFilters:
  60 0005 01       		.byte	1
  61              		.comm	CapSense_fingerThreshold,1,4
  62              		.comm	CapSense_noiseThreshold,1,4
  63              		.comm	CapSense_negativeNoiseThreshold,1,4
  64              		.comm	CapSense_hysteresis,1,4
  65              		.global	CapSense_debounce
  66 0006 0000     		.align	2
  67              		.type	CapSense_debounce, %object
  68              		.size	CapSense_debounce, 1
  69              	CapSense_debounce:
  70 0008 01       		.byte	1
  71              		.global	CapSense_rawDataIndex
  72              		.section	.rodata
  73              		.align	2
  74              		.type	CapSense_rawDataIndex, %object
  75              		.size	CapSense_rawDataIndex, 1
  76              	CapSense_rawDataIndex:
  77 0000 00       		.space	1
  78              		.global	CapSense_numberOfSensors
  79 0001 000000   		.align	2
  80              		.type	CapSense_numberOfSensors, %object
  81              		.size	CapSense_numberOfSensors, 1
  82              	CapSense_numberOfSensors:
  83 0004 05       		.byte	5
  84 0005 000000   		.align	2
  85              		.type	CapSense_centroidMult, %object
  86              		.size	CapSense_centroidMult, 2
  87              	CapSense_centroidMult:
  88 0008 0019     		.short	6400
  89 000a 0000     		.data
  90 0009 000000   		.align	2
  91              		.type	CapSense_posFiltersMask, %object
  92              		.size	CapSense_posFiltersMask, 1
  93              	CapSense_posFiltersMask:
  94 000c 02       		.byte	2
  95 000d 000000   		.align	2
  96              		.type	CapSense_posFiltersData, %object
  97              		.size	CapSense_posFiltersData, 4
  98              	CapSense_posFiltersData:
  99 0010 01       		.byte	1
 100 0011 00       		.byte	0
 101 0012 00       		.byte	0
 102 0013 00       		.byte	0
 103              		.section	.text.CapSense_BaseInit,"ax",%progbits
 104              		.align	2
 105              		.global	CapSense_BaseInit
 106              		.code	16
 107              		.thumb_func
 108              		.type	CapSense_BaseInit, %function
 109              	CapSense_BaseInit:
 110              	.LFB36:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 3


 111              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.40
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 4


  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_40 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[CapSense_THRESHOLD_TBL_SIZE];
  74:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x2u, 
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 0u, 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 5


 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 112              		.loc 1 143 0
 113              		.cfi_startproc
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 82B0     		sub	sp, sp, #8
 119              		.cfi_def_cfa_offset 16
 120 0004 00AF     		add	r7, sp, #0
 121              		.cfi_def_cfa_register 7
 122 0006 7860     		str	r0, [r7, #4]
 144:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 154:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 6


 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 123              		.loc 1 160 0
 124 0008 124B     		ldr	r3, .L2
 125 000a 7A68     		ldr	r2, [r7, #4]
 126 000c 5200     		lsl	r2, r2, #1
 127 000e D15A     		ldrh	r1, [r2, r3]
 128 0010 114B     		ldr	r3, .L2+4
 129 0012 7A68     		ldr	r2, [r7, #4]
 130 0014 5200     		lsl	r2, r2, #1
 131 0016 D152     		strh	r1, [r2, r3]
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 132              		.loc 1 161 0
 133 0018 104A     		ldr	r2, .L2+8
 134 001a 7B68     		ldr	r3, [r7, #4]
 135 001c D318     		add	r3, r2, r3
 136 001e 0022     		mov	r2, #0
 137 0020 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 138              		.loc 1 162 0
 139 0022 0F4A     		ldr	r2, .L2+12
 140 0024 7B68     		ldr	r3, [r7, #4]
 141 0026 D318     		add	r3, r2, r3
 142 0028 0022     		mov	r2, #0
 143 002a 1A70     		strb	r2, [r3]
 163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 144              		.loc 1 169 0
 145 002c 094B     		ldr	r3, .L2
 146 002e 7A68     		ldr	r2, [r7, #4]
 147 0030 5200     		lsl	r2, r2, #1
 148 0032 D15A     		ldrh	r1, [r2, r3]
 149 0034 0B4B     		ldr	r3, .L2+16
 150 0036 7A68     		ldr	r2, [r7, #4]
 151 0038 5200     		lsl	r2, r2, #1
 152 003a D152     		strh	r1, [r2, r3]
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 153              		.loc 1 170 0
 154 003c 054B     		ldr	r3, .L2
 155 003e 7A68     		ldr	r2, [r7, #4]
 156 0040 5200     		lsl	r2, r2, #1
 157 0042 D15A     		ldrh	r1, [r2, r3]
 158 0044 084B     		ldr	r3, .L2+20
 159 0046 7A68     		ldr	r2, [r7, #4]
 160 0048 5200     		lsl	r2, r2, #1
 161 004a D152     		strh	r1, [r2, r3]
 171:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 174:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 7


 178:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 188:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 162              		.loc 1 190 0
 163 004c BD46     		mov	sp, r7
 164 004e 02B0     		add	sp, sp, #8
 165              		@ sp needed
 166 0050 80BD     		pop	{r7, pc}
 167              	.L3:
 168 0052 C046     		.align	2
 169              	.L2:
 170 0054 00000000 		.word	CapSense_sensorRaw
 171 0058 00000000 		.word	CapSense_sensorBaseline
 172 005c 00000000 		.word	CapSense_sensorBaselineLow
 173 0060 00000000 		.word	CapSense_sensorSignal
 174 0064 00000000 		.word	CapSense_rawFilterData1
 175 0068 00000000 		.word	CapSense_rawFilterData2
 176              		.cfi_endproc
 177              	.LFE36:
 178              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 179              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 180              		.align	2
 181              		.global	CapSense_InitializeSensorBaseline
 182              		.code	16
 183              		.thumb_func
 184              		.type	CapSense_InitializeSensorBaseline, %function
 185              	CapSense_InitializeSensorBaseline:
 186              	.LFB37:
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 8


 210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 187              		.loc 1 218 0
 188              		.cfi_startproc
 189 0000 80B5     		push	{r7, lr}
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 82B0     		sub	sp, sp, #8
 194              		.cfi_def_cfa_offset 16
 195 0004 00AF     		add	r7, sp, #0
 196              		.cfi_def_cfa_register 7
 197 0006 7860     		str	r0, [r7, #4]
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 198              		.loc 1 220 0
 199 0008 7B68     		ldr	r3, [r7, #4]
 200 000a 181C     		mov	r0, r3
 201 000c FFF7FEFF 		bl	CapSense_ScanSensor
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 202              		.loc 1 221 0
 203 0010 C046     		mov	r8, r8
 204              	.L5:
 205              		.loc 1 221 0 is_stmt 0 discriminator 1
 206 0012 FFF7FEFF 		bl	CapSense_IsBusy
 207 0016 031E     		sub	r3, r0, #0
 208 0018 FBD1     		bne	.L5
 222:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 224:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 226:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 209              		.loc 1 227 0 is_stmt 1
 210 001a 7B68     		ldr	r3, [r7, #4]
 211 001c 181C     		mov	r0, r3
 212 001e FFF7FEFF 		bl	CapSense_BaseInit
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 213              		.loc 1 228 0
 214 0022 BD46     		mov	sp, r7
 215 0024 02B0     		add	sp, sp, #8
 216              		@ sp needed
 217 0026 80BD     		pop	{r7, pc}
 218              		.cfi_endproc
 219              	.LFE37:
 220              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 221              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 222              		.align	2
 223              		.global	CapSense_InitializeAllBaselines
 224              		.code	16
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 9


 225              		.thumb_func
 226              		.type	CapSense_InitializeAllBaselines, %function
 227              	CapSense_InitializeAllBaselines:
 228              	.LFB38:
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 229              		.loc 1 255 0
 230              		.cfi_startproc
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 239              		.loc 1 258 0
 240 0006 0023     		mov	r3, #0
 241 0008 7B60     		str	r3, [r7, #4]
 242 000a 06E0     		b	.L7
 243              	.L8:
 259:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 260:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 244              		.loc 1 260 0 discriminator 3
 245 000c 7B68     		ldr	r3, [r7, #4]
 246 000e 181C     		mov	r0, r3
 247 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 248              		.loc 1 258 0 discriminator 3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 10


 249 0014 7B68     		ldr	r3, [r7, #4]
 250 0016 0133     		add	r3, r3, #1
 251 0018 7B60     		str	r3, [r7, #4]
 252              	.L7:
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 253              		.loc 1 258 0 is_stmt 0 discriminator 1
 254 001a 7B68     		ldr	r3, [r7, #4]
 255 001c 042B     		cmp	r3, #4
 256 001e F5D9     		bls	.L8
 261:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 257              		.loc 1 262 0 is_stmt 1
 258 0020 BD46     		mov	sp, r7
 259 0022 02B0     		add	sp, sp, #8
 260              		@ sp needed
 261 0024 80BD     		pop	{r7, pc}
 262              		.cfi_endproc
 263              	.LFE38:
 264              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 265 0026 C046     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 266              		.align	2
 267              		.global	CapSense_InitializeEnabledBaselines
 268              		.code	16
 269              		.thumb_func
 270              		.type	CapSense_InitializeEnabledBaselines, %function
 271              	CapSense_InitializeEnabledBaselines:
 272              	.LFB39:
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 273              		.loc 1 290 0
 274              		.cfi_startproc
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 11


 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 283              		.loc 1 294 0
 284 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 285              		.loc 1 295 0
 286 000a C046     		mov	r8, r8
 287              	.L10:
 288              		.loc 1 295 0 is_stmt 0 discriminator 1
 289 000c FFF7FEFF 		bl	CapSense_IsBusy
 290 0010 031E     		sub	r3, r0, #0
 291 0012 FBD1     		bne	.L10
 296:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 292              		.loc 1 300 0 is_stmt 1
 293 0014 0023     		mov	r3, #0
 294 0016 7B60     		str	r3, [r7, #4]
 295 0018 11E0     		b	.L11
 296              	.L13:
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 297              		.loc 1 302 0
 298 001a 0C4A     		ldr	r2, .L14
 299 001c 7B68     		ldr	r3, [r7, #4]
 300 001e 101C     		mov	r0, r2
 301 0020 191C     		mov	r1, r3
 302 0022 FFF7FEFF 		bl	CapSense_GetBitValue
 303 0026 031C     		mov	r3, r0
 304 0028 3B60     		str	r3, [r7]
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 305              		.loc 1 305 0
 306 002a 3B68     		ldr	r3, [r7]
 307 002c 002B     		cmp	r3, #0
 308 002e 03D0     		beq	.L12
 306:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 308:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 309              		.loc 1 308 0
 310 0030 7B68     		ldr	r3, [r7, #4]
 311 0032 181C     		mov	r0, r3
 312 0034 FFF7FEFF 		bl	CapSense_BaseInit
 313              	.L12:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 12


 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 314              		.loc 1 300 0 discriminator 2
 315 0038 7B68     		ldr	r3, [r7, #4]
 316 003a 0133     		add	r3, r3, #1
 317 003c 7B60     		str	r3, [r7, #4]
 318              	.L11:
 300:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 319              		.loc 1 300 0 is_stmt 0 discriminator 1
 320 003e 7B68     		ldr	r3, [r7, #4]
 321 0040 042B     		cmp	r3, #4
 322 0042 EAD9     		bls	.L13
 309:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 310:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 323              		.loc 1 311 0 is_stmt 1
 324 0044 BD46     		mov	sp, r7
 325 0046 02B0     		add	sp, sp, #8
 326              		@ sp needed
 327 0048 80BD     		pop	{r7, pc}
 328              	.L15:
 329 004a C046     		.align	2
 330              	.L14:
 331 004c 00000000 		.word	CapSense_sensorEnableMask
 332              		.cfi_endproc
 333              	.LFE39:
 334              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 335              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_UpdateBaselineNoThreshold
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_UpdateBaselineNoThreshold, %function
 341              	CapSense_UpdateBaselineNoThreshold:
 342              	.LFB40:
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 13


 335:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 343              		.loc 1 355 0
 344              		.cfi_startproc
 345 0000 90B5     		push	{r4, r7, lr}
 346              		.cfi_def_cfa_offset 12
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 87B0     		sub	sp, sp, #28
 351              		.cfi_def_cfa_offset 40
 352 0004 00AF     		add	r7, sp, #0
 353              		.cfi_def_cfa_register 7
 354 0006 7860     		str	r0, [r7, #4]
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 359:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 355              		.loc 1 360 0
 356 0008 0F23     		mov	r3, #15
 357 000a FB18     		add	r3, r7, r3
 358 000c 8649     		ldr	r1, .L29
 359 000e 7A68     		ldr	r2, [r7, #4]
 360 0010 8A18     		add	r2, r1, r2
 361 0012 1278     		ldrb	r2, [r2]
 362 0014 1A70     		strb	r2, [r3]
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 365:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 363              		.loc 1 369 0
 364 0016 0F23     		mov	r3, #15
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 14


 365 0018 FB18     		add	r3, r7, r3
 366 001a 1A78     		ldrb	r2, [r3]
 367 001c 0E23     		mov	r3, #14
 368 001e FB18     		add	r3, r7, r3
 369 0020 8249     		ldr	r1, .L29+4
 370 0022 8A5C     		ldrb	r2, [r1, r2]
 371 0024 1A70     		strb	r2, [r3]
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 372              		.loc 1 370 0
 373 0026 1023     		mov	r3, #16
 374 0028 FB18     		add	r3, r7, r3
 375 002a 814A     		ldr	r2, .L29+8
 376 002c 7968     		ldr	r1, [r7, #4]
 377 002e 4900     		lsl	r1, r1, #1
 378 0030 8A5A     		ldrh	r2, [r1, r2]
 379 0032 1A80     		strh	r2, [r3]
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 380              		.loc 1 373 0
 381 0034 7F4B     		ldr	r3, .L29+12
 382 0036 1B78     		ldrb	r3, [r3]
 383 0038 002B     		cmp	r3, #0
 384 003a 26D0     		beq	.L17
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 381:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 385              		.loc 1 383 0
 386 003c 1223     		mov	r3, #18
 387 003e FB18     		add	r3, r7, r3
 388 0040 1022     		mov	r2, #16
 389 0042 BA18     		add	r2, r7, r2
 390 0044 1288     		ldrh	r2, [r2]
 391 0046 1A80     		strh	r2, [r3]
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 392              		.loc 1 384 0
 393 0048 7B4B     		ldr	r3, .L29+16
 394 004a 7A68     		ldr	r2, [r7, #4]
 395 004c 5200     		lsl	r2, r2, #1
 396 004e D15A     		ldrh	r1, [r2, r3]
 397 0050 7A4B     		ldr	r3, .L29+20
 398 0052 7A68     		ldr	r2, [r7, #4]
 399 0054 5200     		lsl	r2, r2, #1
 400 0056 D25A     		ldrh	r2, [r2, r3]
 401 0058 1023     		mov	r3, #16
 402 005a FC18     		add	r4, r7, r3
 403 005c 1023     		mov	r3, #16
 404 005e FB18     		add	r3, r7, r3
 405 0060 1B88     		ldrh	r3, [r3]
 406 0062 181C     		mov	r0, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 15


 407 0064 FFF7FEFF 		bl	CapSense_AveragingFilter
 408 0068 031C     		mov	r3, r0
 409 006a 2380     		strh	r3, [r4]
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 410              		.loc 1 386 0
 411 006c 724B     		ldr	r3, .L29+16
 412 006e 7A68     		ldr	r2, [r7, #4]
 413 0070 5200     		lsl	r2, r2, #1
 414 0072 D15A     		ldrh	r1, [r2, r3]
 415 0074 714B     		ldr	r3, .L29+20
 416 0076 7A68     		ldr	r2, [r7, #4]
 417 0078 5200     		lsl	r2, r2, #1
 418 007a D152     		strh	r1, [r2, r3]
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 419              		.loc 1 387 0
 420 007c 6E4B     		ldr	r3, .L29+16
 421 007e 7A68     		ldr	r2, [r7, #4]
 422 0080 5200     		lsl	r2, r2, #1
 423 0082 1221     		mov	r1, #18
 424 0084 7918     		add	r1, r7, r1
 425 0086 0988     		ldrh	r1, [r1]
 426 0088 D152     		strh	r1, [r2, r3]
 427              	.L17:
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 396:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 400:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 401:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 428              		.loc 1 416 0
 429 008a 7B68     		ldr	r3, [r7, #4]
 430 008c DAB2     		uxtb	r2, r3
 431 008e 6C49     		ldr	r1, .L29+24
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 16


 432 0090 674B     		ldr	r3, .L29+8
 433 0092 081C     		mov	r0, r1
 434 0094 111C     		mov	r1, r2
 435 0096 1A1C     		mov	r2, r3
 436 0098 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 437              		.loc 1 421 0
 438 009c 694B     		ldr	r3, .L29+28
 439 009e 7A68     		ldr	r2, [r7, #4]
 440 00a0 5200     		lsl	r2, r2, #1
 441 00a2 D35A     		ldrh	r3, [r2, r3]
 442 00a4 1022     		mov	r2, #16
 443 00a6 BA18     		add	r2, r7, r2
 444 00a8 1288     		ldrh	r2, [r2]
 445 00aa 9A42     		cmp	r2, r3
 446 00ac 12D3     		bcc	.L18
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 447              		.loc 1 423 0
 448 00ae 664A     		ldr	r2, .L29+32
 449 00b0 7B68     		ldr	r3, [r7, #4]
 450 00b2 D318     		add	r3, r2, r3
 451 00b4 0022     		mov	r2, #0
 452 00b6 1A70     		strb	r2, [r3]
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 453              		.loc 1 424 0
 454 00b8 624B     		ldr	r3, .L29+28
 455 00ba 7A68     		ldr	r2, [r7, #4]
 456 00bc 5200     		lsl	r2, r2, #1
 457 00be D25A     		ldrh	r2, [r2, r3]
 458 00c0 1223     		mov	r3, #18
 459 00c2 FB18     		add	r3, r7, r3
 460 00c4 1021     		mov	r1, #16
 461 00c6 7918     		add	r1, r7, r1
 462 00c8 0988     		ldrh	r1, [r1]
 463 00ca 8A1A     		sub	r2, r1, r2
 464 00cc 1A80     		strh	r2, [r3]
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 465              		.loc 1 425 0
 466 00ce 0123     		mov	r3, #1
 467 00d0 7B61     		str	r3, [r7, #20]
 468 00d2 0CE0     		b	.L19
 469              	.L18:
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 470              		.loc 1 429 0
 471 00d4 5B4B     		ldr	r3, .L29+28
 472 00d6 7A68     		ldr	r2, [r7, #4]
 473 00d8 5200     		lsl	r2, r2, #1
 474 00da D15A     		ldrh	r1, [r2, r3]
 475 00dc 1223     		mov	r3, #18
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 17


 476 00de FB18     		add	r3, r7, r3
 477 00e0 1022     		mov	r2, #16
 478 00e2 BA18     		add	r2, r7, r2
 479 00e4 1288     		ldrh	r2, [r2]
 480 00e6 8A1A     		sub	r2, r1, r2
 481 00e8 1A80     		strh	r2, [r3]
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 482              		.loc 1 430 0
 483 00ea 0023     		mov	r3, #0
 484 00ec 7B61     		str	r3, [r7, #20]
 485              	.L19:
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 486              		.loc 1 434 0
 487 00ee 7B69     		ldr	r3, [r7, #20]
 488 00f0 002B     		cmp	r3, #0
 489 00f2 2AD1     		bne	.L20
 490              		.loc 1 434 0 is_stmt 0 discriminator 1
 491 00f4 0F23     		mov	r3, #15
 492 00f6 FB18     		add	r3, r7, r3
 493 00f8 1B78     		ldrb	r3, [r3]
 494 00fa 544A     		ldr	r2, .L29+36
 495 00fc D35C     		ldrb	r3, [r2, r3]
 496 00fe 9BB2     		uxth	r3, r3
 497 0100 1222     		mov	r2, #18
 498 0102 BA18     		add	r2, r7, r2
 499 0104 1288     		ldrh	r2, [r2]
 500 0106 9A42     		cmp	r2, r3
 501 0108 1FD9     		bls	.L20
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 502              		.loc 1 439 0 is_stmt 1
 503 010a 4F4A     		ldr	r2, .L29+32
 504 010c 7B68     		ldr	r3, [r7, #4]
 505 010e D318     		add	r3, r2, r3
 506 0110 1A78     		ldrb	r2, [r3]
 507 0112 4F49     		ldr	r1, .L29+40
 508 0114 7B68     		ldr	r3, [r7, #4]
 509 0116 CB18     		add	r3, r1, r3
 510 0118 1B78     		ldrb	r3, [r3]
 511 011a 9A42     		cmp	r2, r3
 512 011c 09D3     		bcc	.L21
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 513              		.loc 1 441 0
 514 011e 7B68     		ldr	r3, [r7, #4]
 515 0120 181C     		mov	r0, r3
 516 0122 FFF7FEFF 		bl	CapSense_BaseInit
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 517              		.loc 1 442 0
 518 0126 484A     		ldr	r2, .L29+32
 519 0128 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 18


 520 012a D318     		add	r3, r2, r3
 521 012c 0022     		mov	r2, #0
 522 012e 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 523              		.loc 1 439 0
 524 0130 51E0     		b	.L23
 525              	.L21:
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 526              		.loc 1 446 0
 527 0132 454A     		ldr	r2, .L29+32
 528 0134 7B68     		ldr	r3, [r7, #4]
 529 0136 D318     		add	r3, r2, r3
 530 0138 1B78     		ldrb	r3, [r3]
 531 013a 0133     		add	r3, r3, #1
 532 013c D9B2     		uxtb	r1, r3
 533 013e 424A     		ldr	r2, .L29+32
 534 0140 7B68     		ldr	r3, [r7, #4]
 535 0142 D318     		add	r3, r2, r3
 536 0144 0A1C     		add	r2, r1, #0
 537 0146 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 538              		.loc 1 439 0
 539 0148 45E0     		b	.L23
 540              	.L20:
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 541              		.loc 1 454 0
 542 014a 0E23     		mov	r3, #14
 543 014c FB18     		add	r3, r7, r3
 544 014e 1B78     		ldrb	r3, [r3]
 545 0150 9BB2     		uxth	r3, r3
 546 0152 1222     		mov	r2, #18
 547 0154 BA18     		add	r2, r7, r2
 548 0156 1288     		ldrh	r2, [r2]
 549 0158 9A42     		cmp	r2, r3
 550 015a 0DD9     		bls	.L24
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 551              		.loc 1 455 0 discriminator 1
 552 015c 0F23     		mov	r3, #15
 553 015e FB18     		add	r3, r7, r3
 554 0160 1B78     		ldrb	r3, [r3]
 555 0162 3A4A     		ldr	r2, .L29+36
 556 0164 D35C     		ldrb	r3, [r2, r3]
 557 0166 9BB2     		uxth	r3, r3
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 558              		.loc 1 454 0 discriminator 1
 559 0168 1222     		mov	r2, #18
 560 016a BA18     		add	r2, r7, r2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 19


 561 016c 1288     		ldrh	r2, [r2]
 562 016e 9A42     		cmp	r2, r3
 563 0170 31D2     		bcs	.L23
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 564              		.loc 1 456 0
 565 0172 7B69     		ldr	r3, [r7, #20]
 566 0174 002B     		cmp	r3, #0
 567 0176 2ED1     		bne	.L23
 568              	.L24:
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 569              		.loc 1 467 0
 570 0178 324B     		ldr	r3, .L29+28
 571 017a 7A68     		ldr	r2, [r7, #4]
 572 017c 5200     		lsl	r2, r2, #1
 573 017e D35A     		ldrh	r3, [r2, r3]
 574 0180 1B02     		lsl	r3, r3, #8
 575 0182 BB60     		str	r3, [r7, #8]
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 576              		.loc 1 468 0
 577 0184 334A     		ldr	r2, .L29+44
 578 0186 7B68     		ldr	r3, [r7, #4]
 579 0188 D318     		add	r3, r2, r3
 580 018a 1B78     		ldrb	r3, [r3]
 581 018c 1A1C     		mov	r2, r3
 582 018e BB68     		ldr	r3, [r7, #8]
 583 0190 1343     		orr	r3, r2
 584 0192 BB60     		str	r3, [r7, #8]
 469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 585              		.loc 1 471 0
 586 0194 1023     		mov	r3, #16
 587 0196 FB18     		add	r3, r7, r3
 588 0198 1B88     		ldrh	r3, [r3]
 589 019a BA68     		ldr	r2, [r7, #8]
 590 019c D318     		add	r3, r2, r3
 591 019e BB60     		str	r3, [r7, #8]
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 592              		.loc 1 474 0
 593 01a0 284B     		ldr	r3, .L29+28
 594 01a2 7A68     		ldr	r2, [r7, #4]
 595 01a4 5200     		lsl	r2, r2, #1
 596 01a6 D35A     		ldrh	r3, [r2, r3]
 597 01a8 1A1C     		mov	r2, r3
 598 01aa BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 20


 599 01ac 9B1A     		sub	r3, r3, r2
 600 01ae BB60     		str	r3, [r7, #8]
 475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 601              		.loc 1 477 0
 602 01b0 BB68     		ldr	r3, [r7, #8]
 603 01b2 1B0A     		lsr	r3, r3, #8
 604 01b4 99B2     		uxth	r1, r3
 605 01b6 234B     		ldr	r3, .L29+28
 606 01b8 7A68     		ldr	r2, [r7, #4]
 607 01ba 5200     		lsl	r2, r2, #1
 608 01bc D152     		strh	r1, [r2, r3]
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 609              		.loc 1 478 0
 610 01be BB68     		ldr	r3, [r7, #8]
 611 01c0 D9B2     		uxtb	r1, r3
 612 01c2 244A     		ldr	r2, .L29+44
 613 01c4 7B68     		ldr	r3, [r7, #4]
 614 01c6 D318     		add	r3, r2, r3
 615 01c8 0A1C     		add	r2, r1, #0
 616 01ca 1A70     		strb	r2, [r3]
 479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 617              		.loc 1 480 0
 618 01cc 1E4A     		ldr	r2, .L29+32
 619 01ce 7B68     		ldr	r3, [r7, #4]
 620 01d0 D318     		add	r3, r2, r3
 621 01d2 0022     		mov	r2, #0
 622 01d4 1A70     		strb	r2, [r3]
 623              	.L23:
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 485:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 624              		.loc 1 487 0
 625 01d6 0E23     		mov	r3, #14
 626 01d8 FB18     		add	r3, r7, r3
 627 01da 1B78     		ldrb	r3, [r3]
 628 01dc 9BB2     		uxth	r3, r3
 629 01de 1222     		mov	r2, #18
 630 01e0 BA18     		add	r2, r7, r2
 631 01e2 1288     		ldrh	r2, [r2]
 632 01e4 9A42     		cmp	r2, r3
 633 01e6 17D9     		bls	.L25
 634              		.loc 1 487 0 is_stmt 0 discriminator 1
 635 01e8 7B69     		ldr	r3, [r7, #20]
 636 01ea 002B     		cmp	r3, #0
 637 01ec 14D0     		beq	.L25
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 638              		.loc 1 491 0 is_stmt 1
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 21


 639 01ee 1223     		mov	r3, #18
 640 01f0 FB18     		add	r3, r7, r3
 641 01f2 1B88     		ldrh	r3, [r3]
 642 01f4 FF2B     		cmp	r3, #255
 643 01f6 05D9     		bls	.L26
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 644              		.loc 1 493 0
 645 01f8 174A     		ldr	r2, .L29+48
 646 01fa 7B68     		ldr	r3, [r7, #4]
 647 01fc D318     		add	r3, r2, r3
 648 01fe FF22     		mov	r2, #255
 649 0200 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 650              		.loc 1 491 0
 651 0202 0EE0     		b	.L16
 652              	.L26:
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 653              		.loc 1 497 0
 654 0204 1223     		mov	r3, #18
 655 0206 FB18     		add	r3, r7, r3
 656 0208 1B88     		ldrh	r3, [r3]
 657 020a D9B2     		uxtb	r1, r3
 658 020c 124A     		ldr	r2, .L29+48
 659 020e 7B68     		ldr	r3, [r7, #4]
 660 0210 D318     		add	r3, r2, r3
 661 0212 0A1C     		add	r2, r1, #0
 662 0214 1A70     		strb	r2, [r3]
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 663              		.loc 1 491 0
 664 0216 04E0     		b	.L16
 665              	.L25:
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 505:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 666              		.loc 1 506 0
 667 0218 0F4A     		ldr	r2, .L29+48
 668 021a 7B68     		ldr	r3, [r7, #4]
 669 021c D318     		add	r3, r2, r3
 670 021e 0022     		mov	r2, #0
 671 0220 1A70     		strb	r2, [r3]
 672              	.L16:
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 22


 513:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 673              		.loc 1 513 0
 674 0222 BD46     		mov	sp, r7
 675 0224 07B0     		add	sp, sp, #28
 676              		@ sp needed
 677 0226 90BD     		pop	{r4, r7, pc}
 678              	.L30:
 679              		.align	2
 680              	.L29:
 681 0228 00000000 		.word	CapSense_widgetNumber
 682 022c 00000000 		.word	CapSense_noiseThreshold
 683 0230 00000000 		.word	CapSense_sensorRaw
 684 0234 00000000 		.word	CapSense_enableRawFilters
 685 0238 00000000 		.word	CapSense_rawFilterData1
 686 023c 00000000 		.word	CapSense_rawFilterData2
 687 0240 00000000 		.word	CapSense_config
 688 0244 00000000 		.word	CapSense_sensorBaseline
 689 0248 00000000 		.word	CapSense_lowBaselineResetCnt
 690 024c 00000000 		.word	CapSense_negativeNoiseThreshold
 691 0250 00000000 		.word	CapSense_lowBaselineReset
 692 0254 00000000 		.word	CapSense_sensorBaselineLow
 693 0258 00000000 		.word	CapSense_sensorSignal
 694              		.cfi_endproc
 695              	.LFE40:
 696              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 697              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 698              		.align	2
 699              		.global	CapSense_UpdateSensorBaseline
 700              		.code	16
 701              		.thumb_func
 702              		.type	CapSense_UpdateSensorBaseline, %function
 703              	CapSense_UpdateSensorBaseline:
 704              	.LFB41:
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 23


 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 705              		.loc 1 547 0
 706              		.cfi_startproc
 707 0000 80B5     		push	{r7, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
 711 0002 82B0     		sub	sp, sp, #8
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 549:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 554:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 558:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 716              		.loc 1 559 0
 717 0008 7B68     		ldr	r3, [r7, #4]
 718 000a 181C     		mov	r0, r3
 719 000c FFF7FEFF 		bl	CapSense_UpdateThresholds
 560:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 720              		.loc 1 562 0
 721 0010 7B68     		ldr	r3, [r7, #4]
 722 0012 181C     		mov	r0, r3
 723 0014 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 565:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 724              		.loc 1 568 0
 725 0018 BD46     		mov	sp, r7
 726 001a 02B0     		add	sp, sp, #8
 727              		@ sp needed
 728 001c 80BD     		pop	{r7, pc}
 729              		.cfi_endproc
 730              	.LFE41:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 24


 731              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 732 001e C046     		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 733              		.align	2
 734              		.global	CapSense_UpdateEnabledBaselines
 735              		.code	16
 736              		.thumb_func
 737              		.type	CapSense_UpdateEnabledBaselines, %function
 738              	CapSense_UpdateEnabledBaselines:
 739              	.LFB42:
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 740              		.loc 1 601 0
 741              		.cfi_startproc
 742 0000 80B5     		push	{r7, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 82B0     		sub	sp, sp, #8
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 750              		.loc 1 605 0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 25


 751 0006 0023     		mov	r3, #0
 752 0008 7B60     		str	r3, [r7, #4]
 753 000a 11E0     		b	.L33
 754              	.L35:
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 755              		.loc 1 607 0
 756 000c 0B4A     		ldr	r2, .L36
 757 000e 7B68     		ldr	r3, [r7, #4]
 758 0010 101C     		mov	r0, r2
 759 0012 191C     		mov	r1, r3
 760 0014 FFF7FEFF 		bl	CapSense_GetBitValue
 761 0018 031C     		mov	r3, r0
 762 001a 3B60     		str	r3, [r7]
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 763              		.loc 1 609 0
 764 001c 3B68     		ldr	r3, [r7]
 765 001e 002B     		cmp	r3, #0
 766 0020 03D0     		beq	.L34
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 611:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 767              		.loc 1 611 0
 768 0022 7B68     		ldr	r3, [r7, #4]
 769 0024 181C     		mov	r0, r3
 770 0026 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 771              	.L34:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 772              		.loc 1 605 0 discriminator 2
 773 002a 7B68     		ldr	r3, [r7, #4]
 774 002c 0133     		add	r3, r3, #1
 775 002e 7B60     		str	r3, [r7, #4]
 776              	.L33:
 605:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 777              		.loc 1 605 0 is_stmt 0 discriminator 1
 778 0030 7B68     		ldr	r3, [r7, #4]
 779 0032 042B     		cmp	r3, #4
 780 0034 EAD9     		bls	.L35
 612:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 613:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 781              		.loc 1 614 0 is_stmt 1
 782 0036 BD46     		mov	sp, r7
 783 0038 02B0     		add	sp, sp, #8
 784              		@ sp needed
 785 003a 80BD     		pop	{r7, pc}
 786              	.L37:
 787              		.align	2
 788              	.L36:
 789 003c 00000000 		.word	CapSense_sensorEnableMask
 790              		.cfi_endproc
 791              	.LFE42:
 792              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 793              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 794              		.align	2
 795              		.global	CapSense_UpdateWidgetBaseline
 796              		.code	16
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 26


 797              		.thumb_func
 798              		.type	CapSense_UpdateWidgetBaseline, %function
 799              	CapSense_UpdateWidgetBaseline:
 800              	.LFB43:
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 801              		.loc 1 646 0
 802              		.cfi_startproc
 803 0000 80B5     		push	{r7, lr}
 804              		.cfi_def_cfa_offset 8
 805              		.cfi_offset 7, -8
 806              		.cfi_offset 14, -4
 807 0002 88B0     		sub	sp, sp, #32
 808              		.cfi_def_cfa_offset 40
 809 0004 00AF     		add	r7, sp, #0
 810              		.cfi_def_cfa_register 7
 811 0006 7860     		str	r0, [r7, #4]
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 649:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 812              		.loc 1 654 0
 813 0008 0523     		mov	r3, #5
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 27


 814 000a BB61     		str	r3, [r7, #24]
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 815              		.loc 1 657 0
 816 000c 0023     		mov	r3, #0
 817 000e 7B61     		str	r3, [r7, #20]
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 818              		.loc 1 660 0
 819 0010 0023     		mov	r3, #0
 820 0012 1A1C     		mov	r2, r3
 821 0014 BB69     		ldr	r3, [r7, #24]
 822 0016 D318     		add	r3, r2, r3
 823 0018 3B61     		str	r3, [r7, #16]
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 824              		.loc 1 662 0
 825 001a 7B69     		ldr	r3, [r7, #20]
 826 001c FB61     		str	r3, [r7, #28]
 827 001e 11E0     		b	.L39
 828              	.L41:
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 829              		.loc 1 664 0
 830 0020 0C4A     		ldr	r2, .L42
 831 0022 FB69     		ldr	r3, [r7, #28]
 832 0024 101C     		mov	r0, r2
 833 0026 191C     		mov	r1, r3
 834 0028 FFF7FEFF 		bl	CapSense_GetBitValue
 835 002c 031C     		mov	r3, r0
 836 002e FB60     		str	r3, [r7, #12]
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 837              		.loc 1 666 0
 838 0030 FB68     		ldr	r3, [r7, #12]
 839 0032 002B     		cmp	r3, #0
 840 0034 03D0     		beq	.L40
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 841              		.loc 1 668 0
 842 0036 FB69     		ldr	r3, [r7, #28]
 843 0038 181C     		mov	r0, r3
 844 003a FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 845              	.L40:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 846              		.loc 1 662 0 discriminator 2
 847 003e FB69     		ldr	r3, [r7, #28]
 848 0040 0133     		add	r3, r3, #1
 849 0042 FB61     		str	r3, [r7, #28]
 850              	.L39:
 662:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 851              		.loc 1 662 0 is_stmt 0 discriminator 1
 852 0044 FA69     		ldr	r2, [r7, #28]
 853 0046 3B69     		ldr	r3, [r7, #16]
 854 0048 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 28


 855 004a E9D3     		bcc	.L41
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 856              		.loc 1 671 0 is_stmt 1
 857 004c BD46     		mov	sp, r7
 858 004e 08B0     		add	sp, sp, #32
 859              		@ sp needed
 860 0050 80BD     		pop	{r7, pc}
 861              	.L43:
 862 0052 C046     		.align	2
 863              	.L42:
 864 0054 00000000 		.word	CapSense_sensorEnableMask
 865              		.cfi_endproc
 866              	.LFE43:
 867              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 868              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 869              		.align	2
 870              		.global	CapSense_GetBaselineData
 871              		.code	16
 872              		.thumb_func
 873              		.type	CapSense_GetBaselineData, %function
 874              	CapSense_GetBaselineData:
 875              	.LFB44:
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 876              		.loc 1 695 0
 877              		.cfi_startproc
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 29


 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 696:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 887              		.loc 1 696 0
 888 0008 034B     		ldr	r3, .L46
 889 000a 7A68     		ldr	r2, [r7, #4]
 890 000c 5200     		lsl	r2, r2, #1
 891 000e D35A     		ldrh	r3, [r2, r3]
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 892              		.loc 1 697 0
 893 0010 181C     		mov	r0, r3
 894 0012 BD46     		mov	sp, r7
 895 0014 02B0     		add	sp, sp, #8
 896              		@ sp needed
 897 0016 80BD     		pop	{r7, pc}
 898              	.L47:
 899              		.align	2
 900              	.L46:
 901 0018 00000000 		.word	CapSense_sensorBaseline
 902              		.cfi_endproc
 903              	.LFE44:
 904              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 905              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 906              		.align	2
 907              		.global	CapSense_SetBaselineData
 908              		.code	16
 909              		.thumb_func
 910              		.type	CapSense_SetBaselineData, %function
 911              	CapSense_SetBaselineData:
 912              	.LFB45:
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 913              		.loc 1 722 0
 914              		.cfi_startproc
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 30


 915 0000 80B5     		push	{r7, lr}
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 7, -8
 918              		.cfi_offset 14, -4
 919 0002 82B0     		sub	sp, sp, #8
 920              		.cfi_def_cfa_offset 16
 921 0004 00AF     		add	r7, sp, #0
 922              		.cfi_def_cfa_register 7
 923 0006 7860     		str	r0, [r7, #4]
 924 0008 0A1C     		mov	r2, r1
 925 000a BB1C     		add	r3, r7, #2
 926 000c 1A80     		strh	r2, [r3]
 723:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 927              		.loc 1 723 0
 928 000e 044B     		ldr	r3, .L49
 929 0010 7A68     		ldr	r2, [r7, #4]
 930 0012 5200     		lsl	r2, r2, #1
 931 0014 B91C     		add	r1, r7, #2
 932 0016 0988     		ldrh	r1, [r1]
 933 0018 D152     		strh	r1, [r2, r3]
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 934              		.loc 1 724 0
 935 001a BD46     		mov	sp, r7
 936 001c 02B0     		add	sp, sp, #8
 937              		@ sp needed
 938 001e 80BD     		pop	{r7, pc}
 939              	.L50:
 940              		.align	2
 941              	.L49:
 942 0020 00000000 		.word	CapSense_sensorBaseline
 943              		.cfi_endproc
 944              	.LFE45:
 945              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 946              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 947              		.align	2
 948              		.global	CapSense_GetDiffCountData
 949              		.code	16
 950              		.thumb_func
 951              		.type	CapSense_GetDiffCountData, %function
 952              	CapSense_GetDiffCountData:
 953              	.LFB46:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 31


 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 954              		.loc 1 749 0
 955              		.cfi_startproc
 956 0000 80B5     		push	{r7, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 82B0     		sub	sp, sp, #8
 961              		.cfi_def_cfa_offset 16
 962 0004 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 964 0006 7860     		str	r0, [r7, #4]
 750:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 965              		.loc 1 750 0
 966 0008 034A     		ldr	r2, .L53
 967 000a 7B68     		ldr	r3, [r7, #4]
 968 000c D318     		add	r3, r2, r3
 969 000e 1B78     		ldrb	r3, [r3]
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 970              		.loc 1 751 0
 971 0010 181C     		mov	r0, r3
 972 0012 BD46     		mov	sp, r7
 973 0014 02B0     		add	sp, sp, #8
 974              		@ sp needed
 975 0016 80BD     		pop	{r7, pc}
 976              	.L54:
 977              		.align	2
 978              	.L53:
 979 0018 00000000 		.word	CapSense_sensorSignal
 980              		.cfi_endproc
 981              	.LFE46:
 982              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 983              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 984              		.align	2
 985              		.global	CapSense_SetDiffCountData
 986              		.code	16
 987              		.thumb_func
 988              		.type	CapSense_SetDiffCountData, %function
 989              	CapSense_SetDiffCountData:
 990              	.LFB47:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 32


 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 991              		.loc 1 776 0
 992              		.cfi_startproc
 993 0000 80B5     		push	{r7, lr}
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 82B0     		sub	sp, sp, #8
 998              		.cfi_def_cfa_offset 16
 999 0004 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 1001 0006 7860     		str	r0, [r7, #4]
 1002 0008 0A1C     		mov	r2, r1
 1003 000a FB1C     		add	r3, r7, #3
 1004 000c 1A70     		strb	r2, [r3]
 777:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 1005              		.loc 1 777 0
 1006 000e 044A     		ldr	r2, .L56
 1007 0010 7B68     		ldr	r3, [r7, #4]
 1008 0012 D318     		add	r3, r2, r3
 1009 0014 FA1C     		add	r2, r7, #3
 1010 0016 1278     		ldrb	r2, [r2]
 1011 0018 1A70     		strb	r2, [r3]
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1012              		.loc 1 778 0
 1013 001a BD46     		mov	sp, r7
 1014 001c 02B0     		add	sp, sp, #8
 1015              		@ sp needed
 1016 001e 80BD     		pop	{r7, pc}
 1017              	.L57:
 1018              		.align	2
 1019              	.L56:
 1020 0020 00000000 		.word	CapSense_sensorSignal
 1021              		.cfi_endproc
 1022              	.LFE47:
 1023              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 1024              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 1025              		.align	2
 1026              		.global	CapSense_GetFingerThreshold
 1027              		.code	16
 1028              		.thumb_func
 1029              		.type	CapSense_GetFingerThreshold, %function
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 33


 1030              	CapSense_GetFingerThreshold:
 1031              	.LFB48:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1032              		.loc 1 803 0
 1033              		.cfi_startproc
 1034 0000 80B5     		push	{r7, lr}
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 82B0     		sub	sp, sp, #8
 1039              		.cfi_def_cfa_offset 16
 1040 0004 00AF     		add	r7, sp, #0
 1041              		.cfi_def_cfa_register 7
 1042 0006 7860     		str	r0, [r7, #4]
 804:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 1043              		.loc 1 804 0
 1044 0008 034A     		ldr	r2, .L60
 1045 000a 7B68     		ldr	r3, [r7, #4]
 1046 000c D318     		add	r3, r2, r3
 1047 000e 1B78     		ldrb	r3, [r3]
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1048              		.loc 1 805 0
 1049 0010 181C     		mov	r0, r3
 1050 0012 BD46     		mov	sp, r7
 1051 0014 02B0     		add	sp, sp, #8
 1052              		@ sp needed
 1053 0016 80BD     		pop	{r7, pc}
 1054              	.L61:
 1055              		.align	2
 1056              	.L60:
 1057 0018 00000000 		.word	CapSense_fingerThreshold
 1058              		.cfi_endproc
 1059              	.LFE48:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 34


 1060              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 1061              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 1062              		.align	2
 1063              		.global	CapSense_GetNoiseThreshold
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	CapSense_GetNoiseThreshold, %function
 1067              	CapSense_GetNoiseThreshold:
 1068              	.LFB49:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1069              		.loc 1 830 0
 1070              		.cfi_startproc
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 82B0     		sub	sp, sp, #8
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 831:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 1080              		.loc 1 831 0
 1081 0008 034A     		ldr	r2, .L64
 1082 000a 7B68     		ldr	r3, [r7, #4]
 1083 000c D318     		add	r3, r2, r3
 1084 000e 1B78     		ldrb	r3, [r3]
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1085              		.loc 1 832 0
 1086 0010 181C     		mov	r0, r3
 1087 0012 BD46     		mov	sp, r7
 1088 0014 02B0     		add	sp, sp, #8
 1089              		@ sp needed
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 35


 1090 0016 80BD     		pop	{r7, pc}
 1091              	.L65:
 1092              		.align	2
 1093              	.L64:
 1094 0018 00000000 		.word	CapSense_noiseThreshold
 1095              		.cfi_endproc
 1096              	.LFE49:
 1097              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 1098              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 1099              		.align	2
 1100              		.global	CapSense_GetFingerHysteresis
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	CapSense_GetFingerHysteresis, %function
 1104              	CapSense_GetFingerHysteresis:
 1105              	.LFB50:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1106              		.loc 1 858 0
 1107              		.cfi_startproc
 1108 0000 80B5     		push	{r7, lr}
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 82B0     		sub	sp, sp, #8
 1113              		.cfi_def_cfa_offset 16
 1114 0004 00AF     		add	r7, sp, #0
 1115              		.cfi_def_cfa_register 7
 1116 0006 7860     		str	r0, [r7, #4]
 859:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 1117              		.loc 1 859 0
 1118 0008 034A     		ldr	r2, .L68
 1119 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 36


 1120 000c D318     		add	r3, r2, r3
 1121 000e 1B78     		ldrb	r3, [r3]
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1122              		.loc 1 860 0
 1123 0010 181C     		mov	r0, r3
 1124 0012 BD46     		mov	sp, r7
 1125 0014 02B0     		add	sp, sp, #8
 1126              		@ sp needed
 1127 0016 80BD     		pop	{r7, pc}
 1128              	.L69:
 1129              		.align	2
 1130              	.L68:
 1131 0018 00000000 		.word	CapSense_hysteresis
 1132              		.cfi_endproc
 1133              	.LFE50:
 1134              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 1135              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 1136              		.align	2
 1137              		.global	CapSense_GetNegativeNoiseThreshold
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	CapSense_GetNegativeNoiseThreshold, %function
 1141              	CapSense_GetNegativeNoiseThreshold:
 1142              	.LFB51:
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1143              		.loc 1 886 0
 1144              		.cfi_startproc
 1145 0000 80B5     		push	{r7, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 37


 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 888:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 1154              		.loc 1 888 0
 1155 0008 034A     		ldr	r2, .L72
 1156 000a 7B68     		ldr	r3, [r7, #4]
 1157 000c D318     		add	r3, r2, r3
 1158 000e 1B78     		ldrb	r3, [r3]
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 890:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1159              		.loc 1 892 0
 1160 0010 181C     		mov	r0, r3
 1161 0012 BD46     		mov	sp, r7
 1162 0014 02B0     		add	sp, sp, #8
 1163              		@ sp needed
 1164 0016 80BD     		pop	{r7, pc}
 1165              	.L73:
 1166              		.align	2
 1167              	.L72:
 1168 0018 00000000 		.word	CapSense_negativeNoiseThreshold
 1169              		.cfi_endproc
 1170              	.LFE51:
 1171              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 1172              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 1173              		.align	2
 1174              		.global	CapSense_SetFingerThreshold
 1175              		.code	16
 1176              		.thumb_func
 1177              		.type	CapSense_SetFingerThreshold, %function
 1178              	CapSense_SetFingerThreshold:
 1179              	.LFB52:
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 38


 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1180              		.loc 1 919 0
 1181              		.cfi_startproc
 1182 0000 80B5     		push	{r7, lr}
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 7, -8
 1185              		.cfi_offset 14, -4
 1186 0002 82B0     		sub	sp, sp, #8
 1187              		.cfi_def_cfa_offset 16
 1188 0004 00AF     		add	r7, sp, #0
 1189              		.cfi_def_cfa_register 7
 1190 0006 7860     		str	r0, [r7, #4]
 1191 0008 0A1C     		mov	r2, r1
 1192 000a FB1C     		add	r3, r7, #3
 1193 000c 1A70     		strb	r2, [r3]
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 1194              		.loc 1 920 0
 1195 000e 044A     		ldr	r2, .L75
 1196 0010 7B68     		ldr	r3, [r7, #4]
 1197 0012 D318     		add	r3, r2, r3
 1198 0014 FA1C     		add	r2, r7, #3
 1199 0016 1278     		ldrb	r2, [r2]
 1200 0018 1A70     		strb	r2, [r3]
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1201              		.loc 1 921 0
 1202 001a BD46     		mov	sp, r7
 1203 001c 02B0     		add	sp, sp, #8
 1204              		@ sp needed
 1205 001e 80BD     		pop	{r7, pc}
 1206              	.L76:
 1207              		.align	2
 1208              	.L75:
 1209 0020 00000000 		.word	CapSense_fingerThreshold
 1210              		.cfi_endproc
 1211              	.LFE52:
 1212              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 1213              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 1214              		.align	2
 1215              		.global	CapSense_SetNoiseThreshold
 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	CapSense_SetNoiseThreshold, %function
 1219              	CapSense_SetNoiseThreshold:
 1220              	.LFB53:
 922:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 923:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 39


 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1221              		.loc 1 947 0
 1222              		.cfi_startproc
 1223 0000 80B5     		push	{r7, lr}
 1224              		.cfi_def_cfa_offset 8
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 82B0     		sub	sp, sp, #8
 1228              		.cfi_def_cfa_offset 16
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
 1232 0008 0A1C     		mov	r2, r1
 1233 000a FB1C     		add	r3, r7, #3
 1234 000c 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 1235              		.loc 1 948 0
 1236 000e 044A     		ldr	r2, .L78
 1237 0010 7B68     		ldr	r3, [r7, #4]
 1238 0012 D318     		add	r3, r2, r3
 1239 0014 FA1C     		add	r2, r7, #3
 1240 0016 1278     		ldrb	r2, [r2]
 1241 0018 1A70     		strb	r2, [r3]
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1242              		.loc 1 949 0
 1243 001a BD46     		mov	sp, r7
 1244 001c 02B0     		add	sp, sp, #8
 1245              		@ sp needed
 1246 001e 80BD     		pop	{r7, pc}
 1247              	.L79:
 1248              		.align	2
 1249              	.L78:
 1250 0020 00000000 		.word	CapSense_noiseThreshold
 1251              		.cfi_endproc
 1252              	.LFE53:
 1253              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 1254              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 1255              		.align	2
 1256              		.global	CapSense_SetFingerHysteresis
 1257              		.code	16
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 40


 1258              		.thumb_func
 1259              		.type	CapSense_SetFingerHysteresis, %function
 1260              	CapSense_SetFingerHysteresis:
 1261              	.LFB54:
 950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 951:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1262              		.loc 1 975 0
 1263              		.cfi_startproc
 1264 0000 80B5     		push	{r7, lr}
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 82B0     		sub	sp, sp, #8
 1269              		.cfi_def_cfa_offset 16
 1270 0004 00AF     		add	r7, sp, #0
 1271              		.cfi_def_cfa_register 7
 1272 0006 7860     		str	r0, [r7, #4]
 1273 0008 0A1C     		mov	r2, r1
 1274 000a FB1C     		add	r3, r7, #3
 1275 000c 1A70     		strb	r2, [r3]
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 1276              		.loc 1 976 0
 1277 000e 044A     		ldr	r2, .L81
 1278 0010 7B68     		ldr	r3, [r7, #4]
 1279 0012 D318     		add	r3, r2, r3
 1280 0014 FA1C     		add	r2, r7, #3
 1281 0016 1278     		ldrb	r2, [r2]
 1282 0018 1A70     		strb	r2, [r3]
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1283              		.loc 1 977 0
 1284 001a BD46     		mov	sp, r7
 1285 001c 02B0     		add	sp, sp, #8
 1286              		@ sp needed
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 41


 1287 001e 80BD     		pop	{r7, pc}
 1288              	.L82:
 1289              		.align	2
 1290              	.L81:
 1291 0020 00000000 		.word	CapSense_hysteresis
 1292              		.cfi_endproc
 1293              	.LFE54:
 1294              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 1295              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 1296              		.align	2
 1297              		.global	CapSense_SetNegativeNoiseThreshold
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	CapSense_SetNegativeNoiseThreshold, %function
 1301              	CapSense_SetNegativeNoiseThreshold:
 1302              	.LFB55:
 978:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 979:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1303              		.loc 1 1004 0
 1304              		.cfi_startproc
 1305 0000 80B5     		push	{r7, lr}
 1306              		.cfi_def_cfa_offset 8
 1307              		.cfi_offset 7, -8
 1308              		.cfi_offset 14, -4
 1309 0002 82B0     		sub	sp, sp, #8
 1310              		.cfi_def_cfa_offset 16
 1311 0004 00AF     		add	r7, sp, #0
 1312              		.cfi_def_cfa_register 7
 1313 0006 7860     		str	r0, [r7, #4]
 1314 0008 0A1C     		mov	r2, r1
 1315 000a FB1C     		add	r3, r7, #3
 1316 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 42


1005:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 1317              		.loc 1 1005 0
 1318 000e 044A     		ldr	r2, .L84
 1319 0010 7B68     		ldr	r3, [r7, #4]
 1320 0012 D318     		add	r3, r2, r3
 1321 0014 FA1C     		add	r2, r7, #3
 1322 0016 1278     		ldrb	r2, [r2]
 1323 0018 1A70     		strb	r2, [r3]
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1324              		.loc 1 1006 0
 1325 001a BD46     		mov	sp, r7
 1326 001c 02B0     		add	sp, sp, #8
 1327              		@ sp needed
 1328 001e 80BD     		pop	{r7, pc}
 1329              	.L85:
 1330              		.align	2
 1331              	.L84:
 1332 0020 00000000 		.word	CapSense_negativeNoiseThreshold
 1333              		.cfi_endproc
 1334              	.LFE55:
 1335              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 1336              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 1337              		.align	2
 1338              		.global	CapSense_SetDebounce
 1339              		.code	16
 1340              		.thumb_func
 1341              		.type	CapSense_SetDebounce, %function
 1342              	CapSense_SetDebounce:
 1343              	.LFB56:
1007:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1008:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1344              		.loc 1 1032 0
 1345              		.cfi_startproc
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 43


 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 82B0     		sub	sp, sp, #8
 1351              		.cfi_def_cfa_offset 16
 1352 0004 00AF     		add	r7, sp, #0
 1353              		.cfi_def_cfa_register 7
 1354 0006 7860     		str	r0, [r7, #4]
 1355 0008 0A1C     		mov	r2, r1
 1356 000a FB1C     		add	r3, r7, #3
 1357 000c 1A70     		strb	r2, [r3]
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 1358              		.loc 1 1033 0
 1359 000e 044A     		ldr	r2, .L87
 1360 0010 7B68     		ldr	r3, [r7, #4]
 1361 0012 D318     		add	r3, r2, r3
 1362 0014 FA1C     		add	r2, r7, #3
 1363 0016 1278     		ldrb	r2, [r2]
 1364 0018 1A70     		strb	r2, [r3]
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1365              		.loc 1 1034 0
 1366 001a BD46     		mov	sp, r7
 1367 001c 02B0     		add	sp, sp, #8
 1368              		@ sp needed
 1369 001e 80BD     		pop	{r7, pc}
 1370              	.L88:
 1371              		.align	2
 1372              	.L87:
 1373 0020 00000000 		.word	CapSense_debounce
 1374              		.cfi_endproc
 1375              	.LFE56:
 1376              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 1377              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
 1378              		.align	2
 1379              		.global	CapSense_SetLowBaselineReset
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	CapSense_SetLowBaselineReset, %function
 1383              	CapSense_SetLowBaselineReset:
 1384              	.LFB57:
1035:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1036:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 44


1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1385              		.loc 1 1060 0
 1386              		.cfi_startproc
 1387 0000 80B5     		push	{r7, lr}
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 82B0     		sub	sp, sp, #8
 1392              		.cfi_def_cfa_offset 16
 1393 0004 00AF     		add	r7, sp, #0
 1394              		.cfi_def_cfa_register 7
 1395 0006 7860     		str	r0, [r7, #4]
 1396 0008 0A1C     		mov	r2, r1
 1397 000a FB1C     		add	r3, r7, #3
 1398 000c 1A70     		strb	r2, [r3]
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 1399              		.loc 1 1061 0
 1400 000e 044A     		ldr	r2, .L90
 1401 0010 7B68     		ldr	r3, [r7, #4]
 1402 0012 D318     		add	r3, r2, r3
 1403 0014 FA1C     		add	r2, r7, #3
 1404 0016 1278     		ldrb	r2, [r2]
 1405 0018 1A70     		strb	r2, [r3]
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1406              		.loc 1 1062 0
 1407 001a BD46     		mov	sp, r7
 1408 001c 02B0     		add	sp, sp, #8
 1409              		@ sp needed
 1410 001e 80BD     		pop	{r7, pc}
 1411              	.L91:
 1412              		.align	2
 1413              	.L90:
 1414 0020 00000000 		.word	CapSense_lowBaselineReset
 1415              		.cfi_endproc
 1416              	.LFE57:
 1417              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 1418              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 1419              		.align	2
 1420              		.global	CapSense_CheckIsSensorActive
 1421              		.code	16
 1422              		.thumb_func
 1423              		.type	CapSense_CheckIsSensorActive, %function
 1424              	CapSense_CheckIsSensorActive:
 1425              	.LFB58:
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 45


1067:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1426              		.loc 1 1106 0
 1427              		.cfi_startproc
 1428 0000 80B5     		push	{r7, lr}
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 84B0     		sub	sp, sp, #16
 1433              		.cfi_def_cfa_offset 24
 1434 0004 00AF     		add	r7, sp, #0
 1435              		.cfi_def_cfa_register 7
 1436 0006 7860     		str	r0, [r7, #4]
1107:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1111:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 46


1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     static uint8 CapSense_debounceCounter[] = {
1114:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** };
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1120:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 1437              		.loc 1 1120 0
 1438 0008 0F23     		mov	r3, #15
 1439 000a FB18     		add	r3, r7, r3
 1440 000c 4449     		ldr	r1, .L101
 1441 000e 7A68     		ldr	r2, [r7, #4]
 1442 0010 8A18     		add	r2, r1, r2
 1443 0012 1278     		ldrb	r2, [r2]
 1444 0014 1A70     		strb	r2, [r3]
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 1445              		.loc 1 1122 0
 1446 0016 0F23     		mov	r3, #15
 1447 0018 FB18     		add	r3, r7, r3
 1448 001a 1A78     		ldrb	r2, [r3]
 1449 001c 0E23     		mov	r3, #14
 1450 001e FB18     		add	r3, r7, r3
 1451 0020 4049     		ldr	r1, .L101+4
 1452 0022 8A5C     		ldrb	r2, [r1, r2]
 1453 0024 1A70     		strb	r2, [r3]
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 1454              		.loc 1 1123 0
 1455 0026 0F23     		mov	r3, #15
 1456 0028 FB18     		add	r3, r7, r3
 1457 002a 1A78     		ldrb	r2, [r3]
 1458 002c 0D23     		mov	r3, #13
 1459 002e FB18     		add	r3, r7, r3
 1460 0030 3D49     		ldr	r1, .L101+8
 1461 0032 8A5C     		ldrb	r2, [r1, r2]
 1462 0034 1A70     		strb	r2, [r3]
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 1463              		.loc 1 1124 0
 1464 0036 0F23     		mov	r3, #15
 1465 0038 FB18     		add	r3, r7, r3
 1466 003a 1A78     		ldrb	r2, [r3]
 1467 003c 0C23     		mov	r3, #12
 1468 003e FB18     		add	r3, r7, r3
 1469 0040 3A49     		ldr	r1, .L101+12
 1470 0042 8A5C     		ldrb	r2, [r1, r2]
 1471 0044 1A70     		strb	r2, [r3]
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1472              		.loc 1 1126 0
 1473 0046 0B23     		mov	r3, #11
 1474 0048 FB18     		add	r3, r7, r3
 1475 004a 0022     		mov	r2, #0
 1476 004c 1A70     		strb	r2, [r3]
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[debounceIndex] = 1u;
 1477              		.loc 1 1127 0
 1478 004e 0B23     		mov	r3, #11
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 47


 1479 0050 FB18     		add	r3, r7, r3
 1480 0052 1B78     		ldrb	r3, [r3]
 1481 0054 364A     		ldr	r2, .L101+16
 1482 0056 0121     		mov	r1, #1
 1483 0058 D154     		strb	r1, [r2, r3]
1128:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1129:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 1484              		.loc 1 1131 0
 1485 005a 364A     		ldr	r2, .L101+20
 1486 005c 7B68     		ldr	r3, [r7, #4]
 1487 005e 101C     		mov	r0, r2
 1488 0060 191C     		mov	r1, r3
 1489 0062 FFF7FEFF 		bl	CapSense_GetBitValue
 1490 0066 031E     		sub	r3, r0, #0
 1491 0068 1DD0     		beq	.L93
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1492              		.loc 1 1134 0
 1493 006a 334A     		ldr	r2, .L101+24
 1494 006c 7B68     		ldr	r3, [r7, #4]
 1495 006e D318     		add	r3, r2, r3
 1496 0070 1B78     		ldrb	r3, [r3]
 1497 0072 191C     		mov	r1, r3
 1498 0074 0E23     		mov	r3, #14
 1499 0076 FB18     		add	r3, r7, r3
 1500 0078 1A78     		ldrb	r2, [r3]
 1501 007a 0D23     		mov	r3, #13
 1502 007c FB18     		add	r3, r7, r3
 1503 007e 1B78     		ldrb	r3, [r3]
 1504 0080 D31A     		sub	r3, r2, r3
 1505 0082 9942     		cmp	r1, r3
 1506 0084 3DDA     		bge	.L95
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 1507              		.loc 1 1136 0
 1508 0086 2B4A     		ldr	r2, .L101+20
 1509 0088 7B68     		ldr	r3, [r7, #4]
 1510 008a 101C     		mov	r0, r2
 1511 008c 191C     		mov	r1, r3
 1512 008e 0022     		mov	r2, #0
 1513 0090 FFF7FEFF 		bl	CapSense_SetBitValue
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1514              		.loc 1 1138 0
 1515 0094 0B23     		mov	r3, #11
 1516 0096 FB18     		add	r3, r7, r3
 1517 0098 1B78     		ldrb	r3, [r3]
 1518 009a 254A     		ldr	r2, .L101+16
 1519 009c 0C21     		mov	r1, #12
 1520 009e 7918     		add	r1, r7, r1
 1521 00a0 0978     		ldrb	r1, [r1]
 1522 00a2 D154     		strb	r1, [r2, r3]
 1523 00a4 2DE0     		b	.L95
 1524              	.L93:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 48


1139:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1525              		.loc 1 1144 0
 1526 00a6 244A     		ldr	r2, .L101+24
 1527 00a8 7B68     		ldr	r3, [r7, #4]
 1528 00aa D318     		add	r3, r2, r3
 1529 00ac 1B78     		ldrb	r3, [r3]
 1530 00ae 191C     		mov	r1, r3
 1531 00b0 0E23     		mov	r3, #14
 1532 00b2 FB18     		add	r3, r7, r3
 1533 00b4 1A78     		ldrb	r2, [r3]
 1534 00b6 0D23     		mov	r3, #13
 1535 00b8 FB18     		add	r3, r7, r3
 1536 00ba 1B78     		ldrb	r3, [r3]
 1537 00bc D318     		add	r3, r2, r3
 1538 00be 9942     		cmp	r1, r3
 1539 00c0 17DB     		blt	.L96
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 1540              		.loc 1 1146 0
 1541 00c2 0B23     		mov	r3, #11
 1542 00c4 FB18     		add	r3, r7, r3
 1543 00c6 1B78     		ldrb	r3, [r3]
 1544 00c8 194A     		ldr	r2, .L101+16
 1545 00ca D25C     		ldrb	r2, [r2, r3]
 1546 00cc 013A     		sub	r2, r2, #1
 1547 00ce D1B2     		uxtb	r1, r2
 1548 00d0 174A     		ldr	r2, .L101+16
 1549 00d2 D154     		strb	r1, [r2, r3]
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 1550              		.loc 1 1148 0
 1551 00d4 0B23     		mov	r3, #11
 1552 00d6 FB18     		add	r3, r7, r3
 1553 00d8 1B78     		ldrb	r3, [r3]
 1554 00da 154A     		ldr	r2, .L101+16
 1555 00dc D35C     		ldrb	r3, [r2, r3]
 1556 00de 002B     		cmp	r3, #0
 1557 00e0 0FD1     		bne	.L95
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 1558              		.loc 1 1150 0
 1559 00e2 144A     		ldr	r2, .L101+20
 1560 00e4 7B68     		ldr	r3, [r7, #4]
 1561 00e6 101C     		mov	r0, r2
 1562 00e8 191C     		mov	r1, r3
 1563 00ea 0122     		mov	r2, #1
 1564 00ec FFF7FEFF 		bl	CapSense_SetBitValue
 1565 00f0 07E0     		b	.L95
 1566              	.L96:
1151:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 49


1154:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 1567              		.loc 1 1156 0
 1568 00f2 0B23     		mov	r3, #11
 1569 00f4 FB18     		add	r3, r7, r3
 1570 00f6 1B78     		ldrb	r3, [r3]
 1571 00f8 0D4A     		ldr	r2, .L101+16
 1572 00fa 0C21     		mov	r1, #12
 1573 00fc 7918     		add	r1, r7, r1
 1574 00fe 0978     		ldrb	r1, [r1]
 1575 0100 D154     		strb	r1, [r2, r3]
 1576              	.L95:
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 1577              		.loc 1 1160 0
 1578 0102 0C4A     		ldr	r2, .L101+20
 1579 0104 7B68     		ldr	r3, [r7, #4]
 1580 0106 101C     		mov	r0, r2
 1581 0108 191C     		mov	r1, r3
 1582 010a FFF7FEFF 		bl	CapSense_GetBitValue
 1583 010e 031E     		sub	r3, r0, #0
 1584 0110 01D0     		beq	.L98
 1585              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1586 0112 0123     		mov	r3, #1
 1587 0114 00E0     		b	.L99
 1588              	.L98:
 1589              		.loc 1 1160 0 discriminator 2
 1590 0116 0023     		mov	r3, #0
 1591              	.L99:
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1592              		.loc 1 1161 0 is_stmt 1 discriminator 4
 1593 0118 181C     		mov	r0, r3
 1594 011a BD46     		mov	sp, r7
 1595 011c 04B0     		add	sp, sp, #16
 1596              		@ sp needed
 1597 011e 80BD     		pop	{r7, pc}
 1598              	.L102:
 1599              		.align	2
 1600              	.L101:
 1601 0120 00000000 		.word	CapSense_widgetNumber
 1602 0124 00000000 		.word	CapSense_fingerThreshold
 1603 0128 00000000 		.word	CapSense_hysteresis
 1604 012c 00000000 		.word	CapSense_debounce
 1605 0130 20000000 		.word	CapSense_debounceCounter.5390
 1606 0134 00000000 		.word	CapSense_sensorOnMask
 1607 0138 00000000 		.word	CapSense_sensorSignal
 1608              		.cfi_endproc
 1609              	.LFE58:
 1610              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 1611              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 1612              		.align	2
 1613              		.global	CapSense_CheckIsWidgetActive
 1614              		.code	16
 1615              		.thumb_func
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 50


 1616              		.type	CapSense_CheckIsWidgetActive, %function
 1617              	CapSense_CheckIsWidgetActive:
 1618              	.LFB59:
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1166:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1619              		.loc 1 1193 0
 1620              		.cfi_startproc
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 86B0     		sub	sp, sp, #24
 1626              		.cfi_def_cfa_offset 32
 1627 0004 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
 1629 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 1630              		.loc 1 1194 0
 1631 0008 0023     		mov	r3, #0
 1632 000a 7B61     		str	r3, [r7, #20]
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 1633              		.loc 1 1195 0
 1634 000c 0523     		mov	r3, #5
 1635 000e 1A1C     		mov	r2, r3
 1636 0010 7B69     		ldr	r3, [r7, #20]
 1637 0012 D318     		add	r3, r2, r3
 1638 0014 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 51


1196:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1639              		.loc 1 1196 0
 1640 0016 0023     		mov	r3, #0
 1641 0018 3B61     		str	r3, [r7, #16]
 1642              	.L105:
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1200:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1201:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1643              		.loc 1 1201 0
 1644 001a 7B69     		ldr	r3, [r7, #20]
 1645 001c 181C     		mov	r0, r3
 1646 001e FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 1647 0022 031E     		sub	r3, r0, #0
 1648 0024 01D0     		beq	.L104
1202:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 1649              		.loc 1 1203 0
 1650 0026 0123     		mov	r3, #1
 1651 0028 3B61     		str	r3, [r7, #16]
 1652              	.L104:
1204:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1205:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1653              		.loc 1 1205 0
 1654 002a 7B69     		ldr	r3, [r7, #20]
 1655 002c 0133     		add	r3, r3, #1
 1656 002e 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1207:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1657              		.loc 1 1207 0
 1658 0030 7A69     		ldr	r2, [r7, #20]
 1659 0032 FB68     		ldr	r3, [r7, #12]
 1660 0034 9A42     		cmp	r2, r3
 1661 0036 F0D3     		bcc	.L105
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1211:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1662              		.loc 1 1211 0
 1663 0038 3B69     		ldr	r3, [r7, #16]
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1664              		.loc 1 1212 0
 1665 003a 181C     		mov	r0, r3
 1666 003c BD46     		mov	sp, r7
 1667 003e 06B0     		add	sp, sp, #24
 1668              		@ sp needed
 1669 0040 80BD     		pop	{r7, pc}
 1670              		.cfi_endproc
 1671              	.LFE59:
 1672              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 1673 0042 C046     		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 1674              		.align	2
 1675              		.global	CapSense_CheckIsAnyWidgetActive
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	CapSense_CheckIsAnyWidgetActive, %function
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 52


 1679              	CapSense_CheckIsAnyWidgetActive:
 1680              	.LFB60:
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1234:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1681              		.loc 1 1239 0
 1682              		.cfi_startproc
 1683 0000 80B5     		push	{r7, lr}
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 82B0     		sub	sp, sp, #8
 1688              		.cfi_def_cfa_offset 16
 1689 0004 00AF     		add	r7, sp, #0
 1690              		.cfi_def_cfa_register 7
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 1691              		.loc 1 1242 0
 1692 0006 0023     		mov	r3, #0
 1693 0008 3B60     		str	r3, [r7]
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 1694              		.loc 1 1244 0
 1695 000a 0023     		mov	r3, #0
 1696 000c 7B60     		str	r3, [r7, #4]
 1697 000e 0AE0     		b	.L108
 1698              	.L110:
1245:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 1699              		.loc 1 1246 0
 1700 0010 7B68     		ldr	r3, [r7, #4]
 1701 0012 181C     		mov	r0, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 53


 1702 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 1703 0018 031E     		sub	r3, r0, #0
 1704 001a 01D0     		beq	.L109
1247:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1248:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 1705              		.loc 1 1248 0
 1706 001c 0123     		mov	r3, #1
 1707 001e 3B60     		str	r3, [r7]
 1708              	.L109:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1709              		.loc 1 1244 0 discriminator 2
 1710 0020 7B68     		ldr	r3, [r7, #4]
 1711 0022 0133     		add	r3, r3, #1
 1712 0024 7B60     		str	r3, [r7, #4]
 1713              	.L108:
1244:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1714              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1715 0026 7B68     		ldr	r3, [r7, #4]
 1716 0028 002B     		cmp	r3, #0
 1717 002a F1D0     		beq	.L110
1249:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1250:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1251:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1254:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
 1718              		.loc 1 1254 0 is_stmt 1
 1719 002c 3B68     		ldr	r3, [r7]
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1720              		.loc 1 1255 0
 1721 002e 181C     		mov	r0, r3
 1722 0030 BD46     		mov	sp, r7
 1723 0032 02B0     		add	sp, sp, #8
 1724              		@ sp needed
 1725 0034 80BD     		pop	{r7, pc}
 1726              		.cfi_endproc
 1727              	.LFE60:
 1728              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1729 0036 C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1730              		.align	2
 1731              		.global	CapSense_EnableWidget
 1732              		.code	16
 1733              		.thumb_func
 1734              		.type	CapSense_EnableWidget, %function
 1735              	CapSense_EnableWidget:
 1736              	.LFB61:
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 54


1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1737              		.loc 1 1286 0
 1738              		.cfi_startproc
 1739 0000 80B5     		push	{r7, lr}
 1740              		.cfi_def_cfa_offset 8
 1741              		.cfi_offset 7, -8
 1742              		.cfi_offset 14, -4
 1743 0002 84B0     		sub	sp, sp, #16
 1744              		.cfi_def_cfa_offset 24
 1745 0004 00AF     		add	r7, sp, #0
 1746              		.cfi_def_cfa_register 7
 1747 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1288:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1748              		.loc 1 1288 0
 1749 0008 0F23     		mov	r3, #15
 1750 000a FB18     		add	r3, r7, r3
 1751 000c 0022     		mov	r2, #0
 1752 000e 1A70     		strb	r2, [r3]
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1753              		.loc 1 1289 0
 1754 0010 0521     		mov	r1, #5
 1755 0012 0E23     		mov	r3, #14
 1756 0014 FB18     		add	r3, r7, r3
 1757 0016 0F22     		mov	r2, #15
 1758 0018 BA18     		add	r2, r7, r2
 1759 001a 1278     		ldrb	r2, [r2]
 1760 001c 8A18     		add	r2, r1, r2
 1761 001e 1A70     		strb	r2, [r3]
 1762              	.L113:
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1291:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1292:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1294:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 1763              		.loc 1 1294 0 discriminator 1
 1764 0020 0F23     		mov	r3, #15
 1765 0022 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 55


 1766 0024 1B78     		ldrb	r3, [r3]
 1767 0026 0C4A     		ldr	r2, .L114
 1768 0028 101C     		mov	r0, r2
 1769 002a 191C     		mov	r1, r3
 1770 002c 0122     		mov	r2, #1
 1771 002e FFF7FEFF 		bl	CapSense_SetBitValue
1295:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1772              		.loc 1 1295 0 discriminator 1
 1773 0032 0F23     		mov	r3, #15
 1774 0034 FB18     		add	r3, r7, r3
 1775 0036 1A78     		ldrb	r2, [r3]
 1776 0038 0F23     		mov	r3, #15
 1777 003a FB18     		add	r3, r7, r3
 1778 003c 0132     		add	r2, r2, #1
 1779 003e 1A70     		strb	r2, [r3]
1296:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1297:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1780              		.loc 1 1297 0 discriminator 1
 1781 0040 0F23     		mov	r3, #15
 1782 0042 FA18     		add	r2, r7, r3
 1783 0044 0E23     		mov	r3, #14
 1784 0046 FB18     		add	r3, r7, r3
 1785 0048 1278     		ldrb	r2, [r2]
 1786 004a 1B78     		ldrb	r3, [r3]
 1787 004c 9A42     		cmp	r2, r3
 1788 004e E7D3     		bcc	.L113
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1789              		.loc 1 1298 0
 1790 0050 BD46     		mov	sp, r7
 1791 0052 04B0     		add	sp, sp, #16
 1792              		@ sp needed
 1793 0054 80BD     		pop	{r7, pc}
 1794              	.L115:
 1795 0056 C046     		.align	2
 1796              	.L114:
 1797 0058 00000000 		.word	CapSense_sensorEnableMask
 1798              		.cfi_endproc
 1799              	.LFE61:
 1800              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1801              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1802              		.align	2
 1803              		.global	CapSense_DisableWidget
 1804              		.code	16
 1805              		.thumb_func
 1806              		.type	CapSense_DisableWidget, %function
 1807              	CapSense_DisableWidget:
 1808              	.LFB62:
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 56


1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1809              		.loc 1 1329 0
 1810              		.cfi_startproc
 1811 0000 80B5     		push	{r7, lr}
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 7, -8
 1814              		.cfi_offset 14, -4
 1815 0002 84B0     		sub	sp, sp, #16
 1816              		.cfi_def_cfa_offset 24
 1817 0004 00AF     		add	r7, sp, #0
 1818              		.cfi_def_cfa_register 7
 1819 0006 7860     		str	r0, [r7, #4]
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1820              		.loc 1 1330 0
 1821 0008 0F23     		mov	r3, #15
 1822 000a FB18     		add	r3, r7, r3
 1823 000c 0022     		mov	r2, #0
 1824 000e 1A70     		strb	r2, [r3]
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1825              		.loc 1 1331 0
 1826 0010 0521     		mov	r1, #5
 1827 0012 0E23     		mov	r3, #14
 1828 0014 FB18     		add	r3, r7, r3
 1829 0016 0F22     		mov	r2, #15
 1830 0018 BA18     		add	r2, r7, r2
 1831 001a 1278     		ldrb	r2, [r2]
 1832 001c 8A18     		add	r2, r1, r2
 1833 001e 1A70     		strb	r2, [r3]
 1834              	.L117:
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1333:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1334:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1335:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 1835              		.loc 1 1337 0 discriminator 1
 1836 0020 0F23     		mov	r3, #15
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 57


 1837 0022 FB18     		add	r3, r7, r3
 1838 0024 1B78     		ldrb	r3, [r3]
 1839 0026 0C4A     		ldr	r2, .L118
 1840 0028 101C     		mov	r0, r2
 1841 002a 191C     		mov	r1, r3
 1842 002c 0022     		mov	r2, #0
 1843 002e FFF7FEFF 		bl	CapSense_SetBitValue
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 1844              		.loc 1 1338 0 discriminator 1
 1845 0032 0F23     		mov	r3, #15
 1846 0034 FB18     		add	r3, r7, r3
 1847 0036 1A78     		ldrb	r2, [r3]
 1848 0038 0F23     		mov	r3, #15
 1849 003a FB18     		add	r3, r7, r3
 1850 003c 0132     		add	r2, r2, #1
 1851 003e 1A70     		strb	r2, [r3]
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1852              		.loc 1 1340 0 discriminator 1
 1853 0040 0F23     		mov	r3, #15
 1854 0042 FA18     		add	r2, r7, r3
 1855 0044 0E23     		mov	r3, #14
 1856 0046 FB18     		add	r3, r7, r3
 1857 0048 1278     		ldrb	r2, [r2]
 1858 004a 1B78     		ldrb	r3, [r3]
 1859 004c 9A42     		cmp	r2, r3
 1860 004e E7D3     		bcc	.L117
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1861              		.loc 1 1341 0
 1862 0050 BD46     		mov	sp, r7
 1863 0052 04B0     		add	sp, sp, #16
 1864              		@ sp needed
 1865 0054 80BD     		pop	{r7, pc}
 1866              	.L119:
 1867 0056 C046     		.align	2
 1868              	.L118:
 1869 0058 00000000 		.word	CapSense_sensorEnableMask
 1870              		.cfi_endproc
 1871              	.LFE62:
 1872              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1873              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1874              		.align	2
 1875              		.global	CapSense_FindMaximum
 1876              		.code	16
 1877              		.thumb_func
 1878              		.type	CapSense_FindMaximum, %function
 1879              	CapSense_FindMaximum:
 1880              	.LFB63:
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 58


1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1881              		.loc 1 1380 0
 1882              		.cfi_startproc
 1883 0000 90B5     		push	{r4, r7, lr}
 1884              		.cfi_def_cfa_offset 12
 1885              		.cfi_offset 4, -12
 1886              		.cfi_offset 7, -8
 1887              		.cfi_offset 14, -4
 1888 0002 85B0     		sub	sp, sp, #20
 1889              		.cfi_def_cfa_offset 32
 1890 0004 00AF     		add	r7, sp, #0
 1891              		.cfi_def_cfa_register 7
 1892 0006 041C     		mov	r4, r0
 1893 0008 081C     		mov	r0, r1
 1894 000a 111C     		mov	r1, r2
 1895 000c FB1D     		add	r3, r7, #7
 1896 000e 221C     		add	r2, r4, #0
 1897 0010 1A70     		strb	r2, [r3]
 1898 0012 BB1D     		add	r3, r7, #6
 1899 0014 021C     		add	r2, r0, #0
 1900 0016 1A70     		strb	r2, [r3]
 1901 0018 7B1D     		add	r3, r7, #5
 1902 001a 0A1C     		add	r2, r1, #0
 1903 001c 1A70     		strb	r2, [r3]
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 59


1385:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
 1904              		.loc 1 1391 0
 1905 001e 0E23     		mov	r3, #14
 1906 0020 FB18     		add	r3, r7, r3
 1907 0022 FF22     		mov	r2, #255
 1908 0024 1A70     		strb	r2, [r3]
1392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
 1909              		.loc 1 1393 0
 1910 0026 0D23     		mov	r3, #13
 1911 0028 FB18     		add	r3, r7, r3
 1912 002a 0022     		mov	r2, #0
 1913 002c 1A70     		strb	r2, [r3]
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1914              		.loc 1 1394 0
 1915 002e FB1D     		add	r3, r7, #7
 1916 0030 1A78     		ldrb	r2, [r3]
 1917 0032 204B     		ldr	r3, .L125
 1918 0034 D318     		add	r3, r2, r3
 1919 0036 BB60     		str	r3, [r7, #8]
1395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 60


1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1456:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 61


1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1920              		.loc 1 1491 0
 1921 0038 0F23     		mov	r3, #15
 1922 003a FB18     		add	r3, r7, r3
 1923 003c 0022     		mov	r2, #0
 1924 003e 1A70     		strb	r2, [r3]
 1925 0040 2AE0     		b	.L121
 1926              	.L123:
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1927              		.loc 1 1494 0
 1928 0042 0F23     		mov	r3, #15
 1929 0044 FB18     		add	r3, r7, r3
 1930 0046 1B78     		ldrb	r3, [r3]
 1931 0048 BA68     		ldr	r2, [r7, #8]
 1932 004a D318     		add	r3, r2, r3
 1933 004c 1B78     		ldrb	r3, [r3]
 1934 004e 7A1D     		add	r2, r7, #5
 1935 0050 1278     		ldrb	r2, [r2]
 1936 0052 9A42     		cmp	r2, r3
 1937 0054 19D2     		bcs	.L122
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1938              		.loc 1 1496 0
 1939 0056 0F23     		mov	r3, #15
 1940 0058 FB18     		add	r3, r7, r3
 1941 005a 1B78     		ldrb	r3, [r3]
 1942 005c BA68     		ldr	r2, [r7, #8]
 1943 005e D318     		add	r3, r2, r3
 1944 0060 1B78     		ldrb	r3, [r3]
 1945 0062 0D22     		mov	r2, #13
 1946 0064 BA18     		add	r2, r7, r2
 1947 0066 1278     		ldrb	r2, [r2]
 1948 0068 9A42     		cmp	r2, r3
 1949 006a 0ED2     		bcs	.L122
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
 1950              		.loc 1 1498 0
 1951 006c 0E23     		mov	r3, #14
 1952 006e FB18     		add	r3, r7, r3
 1953 0070 0F22     		mov	r2, #15
 1954 0072 BA18     		add	r2, r7, r2
 1955 0074 1278     		ldrb	r2, [r2]
 1956 0076 1A70     		strb	r2, [r3]
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1957              		.loc 1 1499 0
 1958 0078 0F23     		mov	r3, #15
 1959 007a FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 62


 1960 007c 1B78     		ldrb	r3, [r3]
 1961 007e BA68     		ldr	r2, [r7, #8]
 1962 0080 D218     		add	r2, r2, r3
 1963 0082 0D23     		mov	r3, #13
 1964 0084 FB18     		add	r3, r7, r3
 1965 0086 1278     		ldrb	r2, [r2]
 1966 0088 1A70     		strb	r2, [r3]
 1967              	.L122:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1968              		.loc 1 1491 0 discriminator 2
 1969 008a 0F23     		mov	r3, #15
 1970 008c FB18     		add	r3, r7, r3
 1971 008e 1A78     		ldrb	r2, [r3]
 1972 0090 0F23     		mov	r3, #15
 1973 0092 FB18     		add	r3, r7, r3
 1974 0094 0132     		add	r2, r2, #1
 1975 0096 1A70     		strb	r2, [r3]
 1976              	.L121:
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1977              		.loc 1 1491 0 is_stmt 0 discriminator 1
 1978 0098 0F23     		mov	r3, #15
 1979 009a FA18     		add	r2, r7, r3
 1980 009c BB1D     		add	r3, r7, #6
 1981 009e 1278     		ldrb	r2, [r2]
 1982 00a0 1B78     		ldrb	r3, [r3]
 1983 00a2 9A42     		cmp	r2, r3
 1984 00a4 CDD3     		bcc	.L123
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
 1985              		.loc 1 1504 0 is_stmt 1
 1986 00a6 0E23     		mov	r3, #14
 1987 00a8 FB18     		add	r3, r7, r3
 1988 00aa 1B78     		ldrb	r3, [r3]
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1989              		.loc 1 1505 0
 1990 00ac 181C     		mov	r0, r3
 1991 00ae BD46     		mov	sp, r7
 1992 00b0 05B0     		add	sp, sp, #20
 1993              		@ sp needed
 1994 00b2 90BD     		pop	{r4, r7, pc}
 1995              	.L126:
 1996              		.align	2
 1997              	.L125:
 1998 00b4 00000000 		.word	CapSense_sensorSignal
 1999              		.cfi_endproc
 2000              	.LFE63:
 2001              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 2002              		.global	__aeabi_idiv
 2003              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 2004              		.align	2
 2005              		.global	CapSense_CalcCentroid
 2006              		.code	16
 2007              		.thumb_func
 2008              		.type	CapSense_CalcCentroid, %function
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 63


 2009              	CapSense_CalcCentroid:
 2010              	.LFB64:
1506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1533:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2011              		.loc 1 1540 0
 2012              		.cfi_startproc
 2013 0000 B0B5     		push	{r4, r5, r7, lr}
 2014              		.cfi_def_cfa_offset 16
 2015              		.cfi_offset 4, -16
 2016              		.cfi_offset 5, -12
 2017              		.cfi_offset 7, -8
 2018              		.cfi_offset 14, -4
 2019 0002 88B0     		sub	sp, sp, #32
 2020              		.cfi_def_cfa_offset 48
 2021 0004 00AF     		add	r7, sp, #0
 2022              		.cfi_def_cfa_register 7
 2023 0006 051C     		mov	r5, r0
 2024 0008 0C1C     		mov	r4, r1
 2025 000a 101C     		mov	r0, r2
 2026 000c 191C     		mov	r1, r3
 2027 000e FB1D     		add	r3, r7, #7
 2028 0010 2A1C     		add	r2, r5, #0
 2029 0012 1A70     		strb	r2, [r3]
 2030 0014 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 64


 2031 0016 221C     		add	r2, r4, #0
 2032 0018 1A70     		strb	r2, [r3]
 2033 001a 7B1D     		add	r3, r7, #5
 2034 001c 021C     		add	r2, r0, #0
 2035 001e 1A70     		strb	r2, [r3]
 2036 0020 BB1C     		add	r3, r7, #2
 2037 0022 0A1C     		add	r2, r1, #0
 2038 0024 1A80     		strh	r2, [r3]
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1556:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 2039              		.loc 1 1559 0
 2040 0026 BB1D     		add	r3, r7, #6
 2041 0028 1A78     		ldrb	r2, [r3]
 2042 002a 5B4B     		ldr	r3, .L137
 2043 002c D318     		add	r3, r2, r3
 2044 002e BB61     		str	r3, [r7, #24]
1560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
 2045              		.loc 1 1562 0
 2046 0030 1F23     		mov	r3, #31
 2047 0032 FB18     		add	r3, r7, r3
 2048 0034 0022     		mov	r2, #0
 2049 0036 1A70     		strb	r2, [r3]
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1564:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1569:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 65


1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1583:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1620:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
 2050              		.loc 1 1622 0
 2051 0038 FB1D     		add	r3, r7, #7
 2052 003a 1B78     		ldrb	r3, [r3]
 2053 003c 002B     		cmp	r3, #0
 2054 003e 05D0     		beq	.L128
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 2055              		.loc 1 1624 0
 2056 0040 1F23     		mov	r3, #31
 2057 0042 FB18     		add	r3, r7, r3
 2058 0044 FA1D     		add	r2, r7, #7
 2059 0046 1278     		ldrb	r2, [r2]
 2060 0048 013A     		sub	r2, r2, #1
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 66


 2061 004a 1A70     		strb	r2, [r3]
 2062              	.L128:
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
 2063              		.loc 1 1626 0
 2064 004c 1723     		mov	r3, #23
 2065 004e FB18     		add	r3, r7, r3
 2066 0050 FA1D     		add	r2, r7, #7
 2067 0052 1278     		ldrb	r2, [r2]
 2068 0054 0132     		add	r2, r2, #1
 2069 0056 1A70     		strb	r2, [r3]
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1628:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 2070              		.loc 1 1633 0
 2071 0058 FB1D     		add	r3, r7, #7
 2072 005a 1B78     		ldrb	r3, [r3]
 2073 005c BA69     		ldr	r2, [r7, #24]
 2074 005e D318     		add	r3, r2, r3
 2075 0060 1A78     		ldrb	r2, [r3]
 2076 0062 4E4B     		ldr	r3, .L137+4
 2077 0064 5A70     		strb	r2, [r3, #1]
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2078              		.loc 1 1637 0
 2079 0066 FB1D     		add	r3, r7, #7
 2080 0068 1B78     		ldrb	r3, [r3]
 2081 006a 002B     		cmp	r3, #0
 2082 006c 0BD1     		bne	.L129
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 2083              		.loc 1 1639 0
 2084 006e 4B4B     		ldr	r3, .L137+4
 2085 0070 0022     		mov	r2, #0
 2086 0072 1A70     		strb	r2, [r3]
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2087              		.loc 1 1640 0
 2088 0074 1723     		mov	r3, #23
 2089 0076 FB18     		add	r3, r7, r3
 2090 0078 1B78     		ldrb	r3, [r3]
 2091 007a BA69     		ldr	r2, [r7, #24]
 2092 007c D318     		add	r3, r2, r3
 2093 007e 1A78     		ldrb	r2, [r3]
 2094 0080 464B     		ldr	r3, .L137+4
 2095 0082 9A70     		strb	r2, [r3, #2]
 2096 0084 22E0     		b	.L130
 2097              	.L129:
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2098              		.loc 1 1642 0
 2099 0086 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 67


 2100 0088 1A78     		ldrb	r2, [r3]
 2101 008a 7B1D     		add	r3, r7, #5
 2102 008c 1B78     		ldrb	r3, [r3]
 2103 008e 013B     		sub	r3, r3, #1
 2104 0090 9A42     		cmp	r2, r3
 2105 0092 0BD1     		bne	.L131
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2106              		.loc 1 1644 0
 2107 0094 1F23     		mov	r3, #31
 2108 0096 FB18     		add	r3, r7, r3
 2109 0098 1B78     		ldrb	r3, [r3]
 2110 009a BA69     		ldr	r2, [r7, #24]
 2111 009c D318     		add	r3, r2, r3
 2112 009e 1A78     		ldrb	r2, [r3]
 2113 00a0 3E4B     		ldr	r3, .L137+4
 2114 00a2 1A70     		strb	r2, [r3]
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2115              		.loc 1 1645 0
 2116 00a4 3D4B     		ldr	r3, .L137+4
 2117 00a6 0022     		mov	r2, #0
 2118 00a8 9A70     		strb	r2, [r3, #2]
 2119 00aa 0FE0     		b	.L130
 2120              	.L131:
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 2121              		.loc 1 1649 0
 2122 00ac 1F23     		mov	r3, #31
 2123 00ae FB18     		add	r3, r7, r3
 2124 00b0 1B78     		ldrb	r3, [r3]
 2125 00b2 BA69     		ldr	r2, [r7, #24]
 2126 00b4 D318     		add	r3, r2, r3
 2127 00b6 1A78     		ldrb	r2, [r3]
 2128 00b8 384B     		ldr	r3, .L137+4
 2129 00ba 1A70     		strb	r2, [r3]
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 2130              		.loc 1 1650 0
 2131 00bc 1723     		mov	r3, #23
 2132 00be FB18     		add	r3, r7, r3
 2133 00c0 1B78     		ldrb	r3, [r3]
 2134 00c2 BA69     		ldr	r2, [r7, #24]
 2135 00c4 D318     		add	r3, r2, r3
 2136 00c6 1A78     		ldrb	r2, [r3]
 2137 00c8 344B     		ldr	r3, .L137+4
 2138 00ca 9A70     		strb	r2, [r3, #2]
 2139              	.L130:
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 68


 2140              		.loc 1 1659 0
 2141 00cc 334B     		ldr	r3, .L137+4
 2142 00ce 1B78     		ldrb	r3, [r3]
 2143 00d0 3022     		mov	r2, #48
 2144 00d2 BA18     		add	r2, r7, r2
 2145 00d4 1278     		ldrb	r2, [r2]
 2146 00d6 9A42     		cmp	r2, r3
 2147 00d8 09D2     		bcs	.L132
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 2148              		.loc 1 1661 0
 2149 00da 304B     		ldr	r3, .L137+4
 2150 00dc 1A78     		ldrb	r2, [r3]
 2151 00de 3023     		mov	r3, #48
 2152 00e0 FB18     		add	r3, r7, r3
 2153 00e2 1B78     		ldrb	r3, [r3]
 2154 00e4 D31A     		sub	r3, r2, r3
 2155 00e6 DAB2     		uxtb	r2, r3
 2156 00e8 2C4B     		ldr	r3, .L137+4
 2157 00ea 1A70     		strb	r2, [r3]
 2158 00ec 02E0     		b	.L133
 2159              	.L132:
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 2160              		.loc 1 1665 0
 2161 00ee 2B4B     		ldr	r3, .L137+4
 2162 00f0 0022     		mov	r2, #0
 2163 00f2 1A70     		strb	r2, [r3]
 2164              	.L133:
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1667:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 2165              		.loc 1 1669 0
 2166 00f4 294B     		ldr	r3, .L137+4
 2167 00f6 5A78     		ldrb	r2, [r3, #1]
 2168 00f8 3023     		mov	r3, #48
 2169 00fa FB18     		add	r3, r7, r3
 2170 00fc 1B78     		ldrb	r3, [r3]
 2171 00fe D31A     		sub	r3, r2, r3
 2172 0100 DAB2     		uxtb	r2, r3
 2173 0102 264B     		ldr	r3, .L137+4
 2174 0104 5A70     		strb	r2, [r3, #1]
1670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 2175              		.loc 1 1672 0
 2176 0106 254B     		ldr	r3, .L137+4
 2177 0108 9B78     		ldrb	r3, [r3, #2]
 2178 010a 3022     		mov	r2, #48
 2179 010c BA18     		add	r2, r7, r2
 2180 010e 1278     		ldrb	r2, [r2]
 2181 0110 9A42     		cmp	r2, r3
 2182 0112 09D2     		bcs	.L134
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 69


1674:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 2183              		.loc 1 1674 0
 2184 0114 214B     		ldr	r3, .L137+4
 2185 0116 9A78     		ldrb	r2, [r3, #2]
 2186 0118 3023     		mov	r3, #48
 2187 011a FB18     		add	r3, r7, r3
 2188 011c 1B78     		ldrb	r3, [r3]
 2189 011e D31A     		sub	r3, r2, r3
 2190 0120 DAB2     		uxtb	r2, r3
 2191 0122 1E4B     		ldr	r3, .L137+4
 2192 0124 9A70     		strb	r2, [r3, #2]
 2193 0126 02E0     		b	.L135
 2194              	.L134:
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 2195              		.loc 1 1678 0
 2196 0128 1C4B     		ldr	r3, .L137+4
 2197 012a 0022     		mov	r2, #0
 2198 012c 9A70     		strb	r2, [r3, #2]
 2199              	.L135:
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 2200              		.loc 1 1683 0
 2201 012e 1B4B     		ldr	r3, .L137+4
 2202 0130 9B78     		ldrb	r3, [r3, #2]
 2203 0132 1A1C     		mov	r2, r3
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2204              		.loc 1 1684 0
 2205 0134 194B     		ldr	r3, .L137+4
 2206 0136 1B78     		ldrb	r3, [r3]
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 2207              		.loc 1 1683 0
 2208 0138 D31A     		sub	r3, r2, r3
 2209 013a 3B61     		str	r3, [r7, #16]
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 2210              		.loc 1 1687 0
 2211 013c 174B     		ldr	r3, .L137+4
 2212 013e 1B78     		ldrb	r3, [r3]
 2213 0140 1A1C     		mov	r2, r3
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2214              		.loc 1 1688 0
 2215 0142 164B     		ldr	r3, .L137+4
 2216 0144 5B78     		ldrb	r3, [r3, #1]
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2217              		.loc 1 1687 0
 2218 0146 D318     		add	r3, r2, r3
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 2219              		.loc 1 1689 0
 2220 0148 144A     		ldr	r2, .L137+4
 2221 014a 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 70


1687:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
 2222              		.loc 1 1687 0
 2223 014c 9B18     		add	r3, r3, r2
 2224 014e FB60     		str	r3, [r7, #12]
1690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2225              		.loc 1 1692 0
 2226 0150 3B69     		ldr	r3, [r7, #16]
 2227 0152 1B02     		lsl	r3, r3, #8
 2228 0154 181C     		mov	r0, r3
 2229 0156 F968     		ldr	r1, [r7, #12]
 2230 0158 FFF7FEFF 		bl	__aeabi_idiv
 2231 015c 031C     		mov	r3, r0
 2232 015e 1A1C     		mov	r2, r3
 2233 0160 FB1D     		add	r3, r7, #7
 2234 0162 1B78     		ldrb	r3, [r3]
 2235 0164 1B02     		lsl	r3, r3, #8
 2236 0166 D318     		add	r3, r2, r3
 2237 0168 FB60     		str	r3, [r7, #12]
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 2238              		.loc 1 1702 0
 2239 016a BB1C     		add	r3, r7, #2
 2240 016c 1B88     		ldrh	r3, [r3]
 2241 016e 1AB2     		sxth	r2, r3
 2242 0170 FB68     		ldr	r3, [r7, #12]
 2243 0172 5343     		mul	r3, r2
 2244 0174 FB60     		str	r3, [r7, #12]
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 2245              		.loc 1 1705 0
 2246 0176 FB68     		ldr	r3, [r7, #12]
 2247 0178 FE22     		mov	r2, #254
 2248 017a D201     		lsl	r2, r2, #7
 2249 017c 9446     		mov	ip, r2
 2250 017e 6344     		add	r3, r3, ip
 2251 0180 1A0C     		lsr	r2, r3, #16
 2252 0182 0B23     		mov	r3, #11
 2253 0184 FB18     		add	r3, r7, r3
 2254 0186 1A70     		strb	r2, [r3]
1706:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2255              		.loc 1 1707 0
 2256 0188 0B23     		mov	r3, #11
 2257 018a FB18     		add	r3, r7, r3
 2258 018c 1B78     		ldrb	r3, [r3]
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 71


 2259              		.loc 1 1708 0
 2260 018e 181C     		mov	r0, r3
 2261 0190 BD46     		mov	sp, r7
 2262 0192 08B0     		add	sp, sp, #32
 2263              		@ sp needed
 2264 0194 B0BD     		pop	{r4, r5, r7, pc}
 2265              	.L138:
 2266 0196 C046     		.align	2
 2267              	.L137:
 2268 0198 00000000 		.word	CapSense_sensorSignal
 2269 019c 24000000 		.word	CapSense_centroid.5442
 2270              		.cfi_endproc
 2271              	.LFE64:
 2272              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 2273              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 2274              		.align	2
 2275              		.global	CapSense_GetCentroidPos
 2276              		.code	16
 2277              		.thumb_func
 2278              		.type	CapSense_GetCentroidPos, %function
 2279              	CapSense_GetCentroidPos:
 2280              	.LFB65:
1709:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1712:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 72


1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2281              		.loc 1 1749 0
 2282              		.cfi_startproc
 2283 0000 90B5     		push	{r4, r7, lr}
 2284              		.cfi_def_cfa_offset 12
 2285              		.cfi_offset 4, -12
 2286              		.cfi_offset 7, -8
 2287              		.cfi_offset 14, -4
 2288 0002 89B0     		sub	sp, sp, #36
 2289              		.cfi_def_cfa_offset 48
 2290 0004 02AF     		add	r7, sp, #8
 2291              		.cfi_def_cfa 7, 40
 2292 0006 7860     		str	r0, [r7, #4]
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1753:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
 2293              		.loc 1 1756 0
 2294 0008 1523     		mov	r3, #21
 2295 000a FB18     		add	r3, r7, r3
 2296 000c 6649     		ldr	r1, .L147
 2297 000e 7A68     		ldr	r2, [r7, #4]
 2298 0010 8A18     		add	r2, r1, r2
 2299 0012 1278     		ldrb	r2, [r2]
 2300 0014 1A70     		strb	r2, [r3]
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
 2301              		.loc 1 1757 0
 2302 0016 1423     		mov	r3, #20
 2303 0018 FB18     		add	r3, r7, r3
 2304 001a 6449     		ldr	r1, .L147+4
 2305 001c 7A68     		ldr	r2, [r7, #4]
 2306 001e 8A18     		add	r2, r1, r2
 2307 0020 1278     		ldrb	r2, [r2]
 2308 0022 1A70     		strb	r2, [r3]
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1766:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2309              		.loc 1 1769 0
 2310 0024 1323     		mov	r3, #19
 2311 0026 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 73


 2312 0028 0022     		mov	r2, #0
 2313 002a 1A70     		strb	r2, [r3]
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2314              		.loc 1 1770 0
 2315 002c 1223     		mov	r3, #18
 2316 002e FB18     		add	r3, r7, r3
 2317 0030 0522     		mov	r2, #5
 2318 0032 1A70     		strb	r2, [r3]
1771:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1782:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1783:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2319              		.loc 1 1788 0
 2320 0034 5E4A     		ldr	r2, .L147+8
 2321 0036 7B68     		ldr	r3, [r7, #4]
 2322 0038 D318     		add	r3, r2, r3
 2323 003a 1A78     		ldrb	r2, [r3]
 2324 003c 1123     		mov	r3, #17
 2325 003e FC18     		add	r4, r7, r3
 2326 0040 1323     		mov	r3, #19
 2327 0042 FB18     		add	r3, r7, r3
 2328 0044 1978     		ldrb	r1, [r3]
 2329 0046 1223     		mov	r3, #18
 2330 0048 FB18     		add	r3, r7, r3
 2331 004a 1B78     		ldrb	r3, [r3]
 2332 004c 081C     		mov	r0, r1
 2333 004e 191C     		mov	r1, r3
 2334 0050 FFF7FEFF 		bl	CapSense_FindMaximum
 2335 0054 031C     		mov	r3, r0
 2336 0056 2370     		strb	r3, [r4]
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1790:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 2337              		.loc 1 1791 0
 2338 0058 1123     		mov	r3, #17
 2339 005a FB18     		add	r3, r7, r3
 2340 005c 1B78     		ldrb	r3, [r3]
 2341 005e FF2B     		cmp	r3, #255
 2342 0060 00D1     		bne	.LCB2046
 2343 0062 89E0     		b	.L140	@long jump
 2344              	.LCB2046:
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 74


1794:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2345              		.loc 1 1794 0
 2346 0064 C823     		mov	r3, #200
 2347 0066 5C01     		lsl	r4, r3, #5
 2348 0068 524A     		ldr	r2, .L147+12
 2349 006a 7B68     		ldr	r3, [r7, #4]
 2350 006c D318     		add	r3, r2, r3
 2351 006e 1B78     		ldrb	r3, [r3]
 2352 0070 1122     		mov	r2, #17
 2353 0072 BA18     		add	r2, r7, r2
 2354 0074 1078     		ldrb	r0, [r2]
 2355 0076 1322     		mov	r2, #19
 2356 0078 BA18     		add	r2, r7, r2
 2357 007a 1178     		ldrb	r1, [r2]
 2358 007c 1222     		mov	r2, #18
 2359 007e BA18     		add	r2, r7, r2
 2360 0080 1278     		ldrb	r2, [r2]
 2361 0082 0093     		str	r3, [sp]
 2362 0084 231C     		mov	r3, r4
 2363 0086 FFF7FEFF 		bl	CapSense_CalcCentroid
 2364 008a 031C     		mov	r3, r0
 2365 008c 1A1C     		mov	r2, r3
 2366 008e 1623     		mov	r3, #22
 2367 0090 FB18     		add	r3, r7, r3
 2368 0092 1A80     		strh	r2, [r3]
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1796:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2369              		.loc 1 1799 0
 2370 0094 1423     		mov	r3, #20
 2371 0096 FB18     		add	r3, r7, r3
 2372 0098 1B78     		ldrb	r3, [r3]
 2373 009a 1F22     		mov	r2, #31
 2374 009c 1340     		and	r3, r2
 2375 009e 00D1     		bne	.LCB2076
 2376 00a0 7BE0     		b	.L145	@long jump
 2377              	.LCB2076:
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2378              		.loc 1 1802 0
 2379 00a2 1023     		mov	r3, #16
 2380 00a4 FB18     		add	r3, r7, r3
 2381 00a6 1522     		mov	r2, #21
 2382 00a8 BA18     		add	r2, r7, r2
 2383 00aa 1278     		ldrb	r2, [r2]
 2384 00ac 0132     		add	r2, r2, #1
 2385 00ae 1A70     		strb	r2, [r3]
1803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1804:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
 2386              		.loc 1 1804 0
 2387 00b0 1523     		mov	r3, #21
 2388 00b2 FB18     		add	r3, r7, r3
 2389 00b4 1B78     		ldrb	r3, [r3]
 2390 00b6 3C4A     		ldr	r2, .L147
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 75


 2391 00b8 D35C     		ldrb	r3, [r2, r3]
 2392 00ba 002B     		cmp	r3, #0
 2393 00bc 25D1     		bne	.L142
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
 2394              		.loc 1 1807 0
 2395 00be 1023     		mov	r3, #16
 2396 00c0 FB18     		add	r3, r7, r3
 2397 00c2 1B78     		ldrb	r3, [r3]
 2398 00c4 1622     		mov	r2, #22
 2399 00c6 BA18     		add	r2, r7, r2
 2400 00c8 1288     		ldrh	r2, [r2]
 2401 00ca D1B2     		uxtb	r1, r2
 2402 00cc 364A     		ldr	r2, .L147
 2403 00ce D154     		strb	r1, [r2, r3]
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
 2404              		.loc 1 1813 0
 2405 00d0 1423     		mov	r3, #20
 2406 00d2 FB18     		add	r3, r7, r3
 2407 00d4 1B78     		ldrb	r3, [r3]
 2408 00d6 0122     		mov	r2, #1
 2409 00d8 1340     		and	r3, r2
 2410 00da 05D1     		bne	.L143
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2411              		.loc 1 1814 0 discriminator 1
 2412 00dc 1423     		mov	r3, #20
 2413 00de FB18     		add	r3, r7, r3
 2414 00e0 1B78     		ldrb	r3, [r3]
 2415 00e2 0222     		mov	r2, #2
 2416 00e4 1340     		and	r3, r2
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
 2417              		.loc 1 1813 0 discriminator 1
 2418 00e6 09D0     		beq	.L144
 2419              	.L143:
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
 2420              		.loc 1 1816 0
 2421 00e8 1023     		mov	r3, #16
 2422 00ea FB18     		add	r3, r7, r3
 2423 00ec 1B78     		ldrb	r3, [r3]
 2424 00ee 0133     		add	r3, r3, #1
 2425 00f0 1622     		mov	r2, #22
 2426 00f2 BA18     		add	r2, r7, r2
 2427 00f4 1288     		ldrh	r2, [r2]
 2428 00f6 D1B2     		uxtb	r1, r2
 2429 00f8 2B4A     		ldr	r2, .L147
 2430 00fa D154     		strb	r1, [r2, r3]
 2431              	.L144:
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 76


1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1823:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
 2432              		.loc 1 1824 0
 2433 00fc 1523     		mov	r3, #21
 2434 00fe FB18     		add	r3, r7, r3
 2435 0100 1B78     		ldrb	r3, [r3]
 2436 0102 294A     		ldr	r2, .L147
 2437 0104 0121     		mov	r1, #1
 2438 0106 D154     		strb	r1, [r2, r3]
 2439 0108 47E0     		b	.L145
 2440              	.L142:
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1835:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1843:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
 2441              		.loc 1 1845 0
 2442 010a 1423     		mov	r3, #20
 2443 010c FB18     		add	r3, r7, r3
 2444 010e 1B78     		ldrb	r3, [r3]
 2445 0110 0222     		mov	r2, #2
 2446 0112 1340     		and	r3, r2
 2447 0114 41D0     		beq	.L145
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
 2448              		.loc 1 1847 0
 2449 0116 0F23     		mov	r3, #15
 2450 0118 FB18     		add	r3, r7, r3
 2451 011a 1622     		mov	r2, #22
 2452 011c BA18     		add	r2, r7, r2
 2453 011e 1288     		ldrh	r2, [r2]
 2454 0120 1A70     		strb	r2, [r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2455              		.loc 1 1849 0
 2456 0122 1023     		mov	r3, #16
 2457 0124 FB18     		add	r3, r7, r3
 2458 0126 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 77


 2459 0128 1F4A     		ldr	r2, .L147
 2460 012a D35C     		ldrb	r3, [r2, r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2461              		.loc 1 1848 0
 2462 012c 99B2     		uxth	r1, r3
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
 2463              		.loc 1 1850 0
 2464 012e 1023     		mov	r3, #16
 2465 0130 FB18     		add	r3, r7, r3
 2466 0132 1B78     		ldrb	r3, [r3]
 2467 0134 0133     		add	r3, r3, #1
 2468 0136 1C4A     		ldr	r2, .L147
 2469 0138 D35C     		ldrb	r3, [r2, r3]
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
 2470              		.loc 1 1848 0
 2471 013a 9AB2     		uxth	r2, r3
 2472 013c 1623     		mov	r3, #22
 2473 013e FC18     		add	r4, r7, r3
 2474 0140 1623     		mov	r3, #22
 2475 0142 FB18     		add	r3, r7, r3
 2476 0144 1B88     		ldrh	r3, [r3]
 2477 0146 181C     		mov	r0, r3
 2478 0148 FFF7FEFF 		bl	CapSense_AveragingFilter
 2479 014c 031C     		mov	r3, r0
 2480 014e 2380     		strh	r3, [r4]
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
 2481              		.loc 1 1851 0
 2482 0150 1023     		mov	r3, #16
 2483 0152 FB18     		add	r3, r7, r3
 2484 0154 1B78     		ldrb	r3, [r3]
 2485 0156 0133     		add	r3, r3, #1
 2486 0158 1022     		mov	r2, #16
 2487 015a BA18     		add	r2, r7, r2
 2488 015c 1278     		ldrb	r2, [r2]
 2489 015e 1249     		ldr	r1, .L147
 2490 0160 895C     		ldrb	r1, [r1, r2]
 2491 0162 114A     		ldr	r2, .L147
 2492 0164 D154     		strb	r1, [r2, r3]
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
 2493              		.loc 1 1852 0
 2494 0166 1023     		mov	r3, #16
 2495 0168 FB18     		add	r3, r7, r3
 2496 016a 1B78     		ldrb	r3, [r3]
 2497 016c 0E4A     		ldr	r2, .L147
 2498 016e 0F21     		mov	r1, #15
 2499 0170 7918     		add	r1, r7, r1
 2500 0172 0978     		ldrb	r1, [r1]
 2501 0174 D154     		strb	r1, [r2, r3]
 2502 0176 10E0     		b	.L145
 2503              	.L140:
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1857:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 78


1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1868:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1879:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1891:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2504              		.loc 1 1898 0
 2505 0178 1623     		mov	r3, #22
 2506 017a FB18     		add	r3, r7, r3
 2507 017c 0122     		mov	r2, #1
 2508 017e 5242     		neg	r2, r2
 2509 0180 1A80     		strh	r2, [r3]
1899:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
 2510              		.loc 1 1902 0
 2511 0182 1423     		mov	r3, #20
 2512 0184 FB18     		add	r3, r7, r3
 2513 0186 1B78     		ldrb	r3, [r3]
 2514 0188 1F22     		mov	r2, #31
 2515 018a 1340     		and	r3, r2
 2516 018c 05D0     		beq	.L145
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 79


1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
 2517              		.loc 1 1904 0
 2518 018e 1523     		mov	r3, #21
 2519 0190 FB18     		add	r3, r7, r3
 2520 0192 1B78     		ldrb	r3, [r3]
 2521 0194 044A     		ldr	r2, .L147
 2522 0196 0021     		mov	r1, #0
 2523 0198 D154     		strb	r1, [r2, r3]
 2524              	.L145:
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1908:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1909:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2525              		.loc 1 1910 0
 2526 019a 1623     		mov	r3, #22
 2527 019c FB18     		add	r3, r7, r3
 2528 019e 1B88     		ldrh	r3, [r3]
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2529              		.loc 1 1911 0
 2530 01a0 181C     		mov	r0, r3
 2531 01a2 BD46     		mov	sp, r7
 2532 01a4 07B0     		add	sp, sp, #28
 2533              		@ sp needed
 2534 01a6 90BD     		pop	{r4, r7, pc}
 2535              	.L148:
 2536              		.align	2
 2537              	.L147:
 2538 01a8 10000000 		.word	CapSense_posFiltersData
 2539 01ac 0C000000 		.word	CapSense_posFiltersMask
 2540 01b0 00000000 		.word	CapSense_fingerThreshold
 2541 01b4 00000000 		.word	CapSense_noiseThreshold
 2542              		.cfi_endproc
 2543              	.LFE65:
 2544              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 2545              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 2546              		.align	2
 2547              		.global	CapSense_GetRadialCentroidPos
 2548              		.code	16
 2549              		.thumb_func
 2550              		.type	CapSense_GetRadialCentroidPos, %function
 2551              	CapSense_GetRadialCentroidPos:
 2552              	.LFB66:
1912:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1913:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1914:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1915:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 80


1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2553              		.loc 1 1952 0
 2554              		.cfi_startproc
 2555 0000 90B5     		push	{r4, r7, lr}
 2556              		.cfi_def_cfa_offset 12
 2557              		.cfi_offset 4, -12
 2558              		.cfi_offset 7, -8
 2559              		.cfi_offset 14, -4
 2560 0002 87B0     		sub	sp, sp, #28
 2561              		.cfi_def_cfa_offset 40
 2562 0004 02AF     		add	r7, sp, #8
 2563              		.cfi_def_cfa 7, 32
 2564 0006 7860     		str	r0, [r7, #4]
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1965:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 2565              		.loc 1 1968 0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 81


 2566 0008 0D23     		mov	r3, #13
 2567 000a FB18     		add	r3, r7, r3
 2568 000c 0022     		mov	r2, #0
 2569 000e 1A70     		strb	r2, [r3]
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 2570              		.loc 1 1969 0
 2571 0010 0C23     		mov	r3, #12
 2572 0012 FB18     		add	r3, r7, r3
 2573 0014 0522     		mov	r2, #5
 2574 0016 1A70     		strb	r2, [r3]
1970:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 2575              		.loc 1 1975 0
 2576 0018 1D4A     		ldr	r2, .L153
 2577 001a 7B68     		ldr	r3, [r7, #4]
 2578 001c D318     		add	r3, r2, r3
 2579 001e 1A78     		ldrb	r2, [r3]
 2580 0020 0B23     		mov	r3, #11
 2581 0022 FC18     		add	r4, r7, r3
 2582 0024 0D23     		mov	r3, #13
 2583 0026 FB18     		add	r3, r7, r3
 2584 0028 1978     		ldrb	r1, [r3]
 2585 002a 0C23     		mov	r3, #12
 2586 002c FB18     		add	r3, r7, r3
 2587 002e 1B78     		ldrb	r3, [r3]
 2588 0030 081C     		mov	r0, r1
 2589 0032 191C     		mov	r1, r3
 2590 0034 FFF7FEFF 		bl	CapSense_FindMaximum
 2591 0038 031C     		mov	r3, r0
 2592 003a 2370     		strb	r3, [r4]
1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1977:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
 2593              		.loc 1 1978 0
 2594 003c 0B23     		mov	r3, #11
 2595 003e FB18     		add	r3, r7, r3
 2596 0040 1B78     		ldrb	r3, [r3]
 2597 0042 FF2B     		cmp	r3, #255
 2598 0044 18D0     		beq	.L150
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 2599              		.loc 1 1981 0
 2600 0046 C823     		mov	r3, #200
 2601 0048 5C01     		lsl	r4, r3, #5
 2602 004a 124A     		ldr	r2, .L153+4
 2603 004c 7B68     		ldr	r3, [r7, #4]
 2604 004e D318     		add	r3, r2, r3
 2605 0050 1B78     		ldrb	r3, [r3]
 2606 0052 0B22     		mov	r2, #11
 2607 0054 BA18     		add	r2, r7, r2
 2608 0056 1078     		ldrb	r0, [r2]
 2609 0058 0D22     		mov	r2, #13
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 82


 2610 005a BA18     		add	r2, r7, r2
 2611 005c 1178     		ldrb	r1, [r2]
 2612 005e 0C22     		mov	r2, #12
 2613 0060 BA18     		add	r2, r7, r2
 2614 0062 1278     		ldrb	r2, [r2]
 2615 0064 0093     		str	r3, [sp]
 2616 0066 231C     		mov	r3, r4
 2617 0068 FFF7FEFF 		bl	CapSense_CalcCentroid
 2618 006c 031C     		mov	r3, r0
 2619 006e 1A1C     		mov	r2, r3
 2620 0070 0E23     		mov	r3, #14
 2621 0072 FB18     		add	r3, r7, r3
 2622 0074 1A80     		strh	r2, [r3]
 2623 0076 04E0     		b	.L151
 2624              	.L150:
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1983:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2010:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2022:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 83


2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2030:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2045:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2056:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2067:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2079:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 84


2081:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 2625              		.loc 1 2086 0
 2626 0078 0E23     		mov	r3, #14
 2627 007a FB18     		add	r3, r7, r3
 2628 007c 0122     		mov	r2, #1
 2629 007e 5242     		neg	r2, r2
 2630 0080 1A80     		strh	r2, [r3]
 2631              	.L151:
2087:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2090:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2096:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
 2632              		.loc 1 2097 0
 2633 0082 0E23     		mov	r3, #14
 2634 0084 FB18     		add	r3, r7, r3
 2635 0086 1B88     		ldrh	r3, [r3]
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2636              		.loc 1 2098 0
 2637 0088 181C     		mov	r0, r3
 2638 008a BD46     		mov	sp, r7
 2639 008c 05B0     		add	sp, sp, #20
 2640              		@ sp needed
 2641 008e 90BD     		pop	{r4, r7, pc}
 2642              	.L154:
 2643              		.align	2
 2644              	.L153:
 2645 0090 00000000 		.word	CapSense_fingerThreshold
 2646 0094 00000000 		.word	CapSense_noiseThreshold
 2647              		.cfi_endproc
 2648              	.LFE66:
 2649              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 2650              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 2651              		.align	2
 2652              		.global	CapSense_MedianFilter
 2653              		.code	16
 2654              		.thumb_func
 2655              		.type	CapSense_MedianFilter, %function
 2656              	CapSense_MedianFilter:
 2657              	.LFB67:
2099:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2102:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 85


2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2146:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 86


2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2173:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2180:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2193:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2204:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2210:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2215:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 87


2219:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2252:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2256:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2267:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 88


2276:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2279:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2287:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2308:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2312:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2330:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 89


2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2336:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2342:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2347:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2350:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2352:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2353:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2658              		.loc 1 2381 0
 2659              		.cfi_startproc
 2660 0000 90B5     		push	{r4, r7, lr}
 2661              		.cfi_def_cfa_offset 12
 2662              		.cfi_offset 4, -12
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 90


 2666              		.cfi_def_cfa_offset 32
 2667 0004 00AF     		add	r7, sp, #0
 2668              		.cfi_def_cfa_register 7
 2669 0006 041C     		mov	r4, r0
 2670 0008 081C     		mov	r0, r1
 2671 000a 111C     		mov	r1, r2
 2672 000c BB1D     		add	r3, r7, #6
 2673 000e 221C     		add	r2, r4, #0
 2674 0010 1A80     		strh	r2, [r3]
 2675 0012 3B1D     		add	r3, r7, #4
 2676 0014 021C     		add	r2, r0, #0
 2677 0016 1A80     		strh	r2, [r3]
 2678 0018 BB1C     		add	r3, r7, #2
 2679 001a 0A1C     		add	r2, r1, #0
 2680 001c 1A80     		strh	r2, [r3]
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2383:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 2681              		.loc 1 2384 0
 2682 001e BA1D     		add	r2, r7, #6
 2683 0020 3B1D     		add	r3, r7, #4
 2684 0022 1288     		ldrh	r2, [r2]
 2685 0024 1B88     		ldrh	r3, [r3]
 2686 0026 9A42     		cmp	r2, r3
 2687 0028 0DD9     		bls	.L156
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
 2688              		.loc 1 2386 0
 2689 002a 0E23     		mov	r3, #14
 2690 002c FB18     		add	r3, r7, r3
 2691 002e 3A1D     		add	r2, r7, #4
 2692 0030 1288     		ldrh	r2, [r2]
 2693 0032 1A80     		strh	r2, [r3]
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
 2694              		.loc 1 2387 0
 2695 0034 3B1D     		add	r3, r7, #4
 2696 0036 BA1D     		add	r2, r7, #6
 2697 0038 1288     		ldrh	r2, [r2]
 2698 003a 1A80     		strh	r2, [r3]
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 2699              		.loc 1 2388 0
 2700 003c BB1D     		add	r3, r7, #6
 2701 003e 0E22     		mov	r2, #14
 2702 0040 BA18     		add	r2, r7, r2
 2703 0042 1288     		ldrh	r2, [r2]
 2704 0044 1A80     		strh	r2, [r3]
 2705              	.L156:
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 2706              		.loc 1 2391 0
 2707 0046 3A1D     		add	r2, r7, #4
 2708 0048 BB1C     		add	r3, r7, #2
 2709 004a 1288     		ldrh	r2, [r2]
 2710 004c 1B88     		ldrh	r3, [r3]
 2711 004e 9A42     		cmp	r2, r3
 2712 0050 03D9     		bls	.L157
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 91


2392:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 2713              		.loc 1 2393 0
 2714 0052 3B1D     		add	r3, r7, #4
 2715 0054 BA1C     		add	r2, r7, #2
 2716 0056 1288     		ldrh	r2, [r2]
 2717 0058 1A80     		strh	r2, [r3]
 2718              	.L157:
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2719              		.loc 1 2396 0
 2720 005a 3B1D     		add	r3, r7, #4
 2721 005c BA1D     		add	r2, r7, #6
 2722 005e 1088     		ldrh	r0, [r2]
 2723 0060 1B88     		ldrh	r3, [r3]
 2724 0062 99B2     		uxth	r1, r3
 2725 0064 82B2     		uxth	r2, r0
 2726 0066 9142     		cmp	r1, r2
 2727 0068 00D2     		bcs	.L158
 2728 006a 031C     		add	r3, r0, #0
 2729              	.L158:
 2730 006c 9BB2     		uxth	r3, r3
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2731              		.loc 1 2397 0
 2732 006e 181C     		mov	r0, r3
 2733 0070 BD46     		mov	sp, r7
 2734 0072 05B0     		add	sp, sp, #20
 2735              		@ sp needed
 2736 0074 90BD     		pop	{r4, r7, pc}
 2737              		.cfi_endproc
 2738              	.LFE67:
 2739              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 2740              		.global	__aeabi_uidiv
 2741 0076 C046     		.section	.text.CapSense_AveragingFilter,"ax",%progbits
 2742              		.align	2
 2743              		.global	CapSense_AveragingFilter
 2744              		.code	16
 2745              		.thumb_func
 2746              		.type	CapSense_AveragingFilter, %function
 2747              	CapSense_AveragingFilter:
 2748              	.LFB68:
2398:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2402:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2403:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 92


2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2424:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2749              		.loc 1 2430 0
 2750              		.cfi_startproc
 2751 0000 90B5     		push	{r4, r7, lr}
 2752              		.cfi_def_cfa_offset 12
 2753              		.cfi_offset 4, -12
 2754              		.cfi_offset 7, -8
 2755              		.cfi_offset 14, -4
 2756 0002 85B0     		sub	sp, sp, #20
 2757              		.cfi_def_cfa_offset 32
 2758 0004 00AF     		add	r7, sp, #0
 2759              		.cfi_def_cfa_register 7
 2760 0006 041C     		mov	r4, r0
 2761 0008 081C     		mov	r0, r1
 2762 000a 111C     		mov	r1, r2
 2763 000c BB1D     		add	r3, r7, #6
 2764 000e 221C     		add	r2, r4, #0
 2765 0010 1A80     		strh	r2, [r3]
 2766 0012 3B1D     		add	r3, r7, #4
 2767 0014 021C     		add	r2, r0, #0
 2768 0016 1A80     		strh	r2, [r3]
 2769 0018 BB1C     		add	r3, r7, #2
 2770 001a 0A1C     		add	r2, r1, #0
 2771 001c 1A80     		strh	r2, [r3]
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
 2772              		.loc 1 2431 0
 2773 001e BB1D     		add	r3, r7, #6
 2774 0020 1A88     		ldrh	r2, [r3]
 2775 0022 3B1D     		add	r3, r7, #4
 2776 0024 1B88     		ldrh	r3, [r3]
 2777 0026 D218     		add	r2, r2, r3
 2778 0028 BB1C     		add	r3, r7, #2
 2779 002a 1B88     		ldrh	r3, [r3]
 2780 002c D318     		add	r3, r2, r3
 2781 002e 181C     		mov	r0, r3
 2782 0030 0321     		mov	r1, #3
 2783 0032 FFF7FEFF 		bl	__aeabi_uidiv
 2784 0036 031C     		mov	r3, r0
 2785 0038 FB60     		str	r3, [r7, #12]
2432:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 93


2433:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 2786              		.loc 1 2433 0
 2787 003a FB68     		ldr	r3, [r7, #12]
 2788 003c 9BB2     		uxth	r3, r3
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2789              		.loc 1 2434 0
 2790 003e 181C     		mov	r0, r3
 2791 0040 BD46     		mov	sp, r7
 2792 0042 05B0     		add	sp, sp, #20
 2793              		@ sp needed
 2794 0044 90BD     		pop	{r4, r7, pc}
 2795              		.cfi_endproc
 2796              	.LFE68:
 2797              		.size	CapSense_AveragingFilter, .-CapSense_AveragingFilter
 2798 0046 C046     		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 2799              		.align	2
 2800              		.global	CapSense_GetWidgetNumber
 2801              		.code	16
 2802              		.thumb_func
 2803              		.type	CapSense_GetWidgetNumber, %function
 2804              	CapSense_GetWidgetNumber:
 2805              	.LFB69:
2435:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2437:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2438:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2439:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2461:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 94


2470:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2472:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2477:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2495:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2500:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2511:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2514:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2515:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2516:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 95


2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2556:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2562:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 96


2584:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2585:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2593:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2596:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2597:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2598:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2599:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2622:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2630:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2633:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2634:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2636:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2637:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 97


2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2687:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 98


2698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2709:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2727:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2806              		.loc 1 2734 0
 2807              		.cfi_startproc
 2808 0000 80B5     		push	{r7, lr}
 2809              		.cfi_def_cfa_offset 8
 2810              		.cfi_offset 7, -8
 2811              		.cfi_offset 14, -4
 2812 0002 82B0     		sub	sp, sp, #8
 2813              		.cfi_def_cfa_offset 16
 2814 0004 00AF     		add	r7, sp, #0
 2815              		.cfi_def_cfa_register 7
 2816 0006 7860     		str	r0, [r7, #4]
2735:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2817              		.loc 1 2735 0
 2818 0008 034A     		ldr	r2, .L164
 2819 000a 7B68     		ldr	r3, [r7, #4]
 2820 000c D318     		add	r3, r2, r3
 2821 000e 1B78     		ldrb	r3, [r3]
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2822              		.loc 1 2736 0
 2823 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 99


 2824 0012 BD46     		mov	sp, r7
 2825 0014 02B0     		add	sp, sp, #8
 2826              		@ sp needed
 2827 0016 80BD     		pop	{r7, pc}
 2828              	.L165:
 2829              		.align	2
 2830              	.L164:
 2831 0018 00000000 		.word	CapSense_widgetNumber
 2832              		.cfi_endproc
 2833              	.LFE69:
 2834              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2835              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2836              		.align	2
 2837              		.global	CapSense_GetLowBaselineReset
 2838              		.code	16
 2839              		.thumb_func
 2840              		.type	CapSense_GetLowBaselineReset, %function
 2841              	CapSense_GetLowBaselineReset:
 2842              	.LFB70:
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2843              		.loc 1 2760 0
 2844              		.cfi_startproc
 2845 0000 80B5     		push	{r7, lr}
 2846              		.cfi_def_cfa_offset 8
 2847              		.cfi_offset 7, -8
 2848              		.cfi_offset 14, -4
 2849 0002 82B0     		sub	sp, sp, #8
 2850              		.cfi_def_cfa_offset 16
 2851 0004 00AF     		add	r7, sp, #0
 2852              		.cfi_def_cfa_register 7
 2853 0006 7860     		str	r0, [r7, #4]
2761:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2854              		.loc 1 2761 0
 2855 0008 034A     		ldr	r2, .L168
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 100


 2856 000a 7B68     		ldr	r3, [r7, #4]
 2857 000c D318     		add	r3, r2, r3
 2858 000e 1B78     		ldrb	r3, [r3]
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2859              		.loc 1 2762 0
 2860 0010 181C     		mov	r0, r3
 2861 0012 BD46     		mov	sp, r7
 2862 0014 02B0     		add	sp, sp, #8
 2863              		@ sp needed
 2864 0016 80BD     		pop	{r7, pc}
 2865              	.L169:
 2866              		.align	2
 2867              	.L168:
 2868 0018 00000000 		.word	CapSense_lowBaselineReset
 2869              		.cfi_endproc
 2870              	.LFE70:
 2871              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2872              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2873              		.align	2
 2874              		.global	CapSense_GetDebounce
 2875              		.code	16
 2876              		.thumb_func
 2877              		.type	CapSense_GetDebounce, %function
 2878              	CapSense_GetDebounce:
 2879              	.LFB71:
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2784:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2880              		.loc 1 2786 0
 2881              		.cfi_startproc
 2882 0000 80B5     		push	{r7, lr}
 2883              		.cfi_def_cfa_offset 8
 2884              		.cfi_offset 7, -8
 2885              		.cfi_offset 14, -4
 2886 0002 82B0     		sub	sp, sp, #8
 2887              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 101


 2888 0004 00AF     		add	r7, sp, #0
 2889              		.cfi_def_cfa_register 7
 2890 0006 7860     		str	r0, [r7, #4]
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2891              		.loc 1 2787 0
 2892 0008 034A     		ldr	r2, .L172
 2893 000a 7B68     		ldr	r3, [r7, #4]
 2894 000c D318     		add	r3, r2, r3
 2895 000e 1B78     		ldrb	r3, [r3]
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2896              		.loc 1 2788 0
 2897 0010 181C     		mov	r0, r3
 2898 0012 BD46     		mov	sp, r7
 2899 0014 02B0     		add	sp, sp, #8
 2900              		@ sp needed
 2901 0016 80BD     		pop	{r7, pc}
 2902              	.L173:
 2903              		.align	2
 2904              	.L172:
 2905 0018 00000000 		.word	CapSense_debounce
 2906              		.cfi_endproc
 2907              	.LFE71:
 2908              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2909              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2910              		.align	2
 2911              		.global	CapSense_EnableRawDataFilters
 2912              		.code	16
 2913              		.thumb_func
 2914              		.type	CapSense_EnableRawDataFilters, %function
 2915              	CapSense_EnableRawDataFilters:
 2916              	.LFB72:
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2807:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2917              		.loc 1 2812 0
 2918              		.cfi_startproc
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 102


 2919 0000 80B5     		push	{r7, lr}
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 7, -8
 2922              		.cfi_offset 14, -4
 2923 0002 00AF     		add	r7, sp, #0
 2924              		.cfi_def_cfa_register 7
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2925              		.loc 1 2813 0
 2926 0004 024B     		ldr	r3, .L175
 2927 0006 0122     		mov	r2, #1
 2928 0008 1A70     		strb	r2, [r3]
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2929              		.loc 1 2814 0
 2930 000a BD46     		mov	sp, r7
 2931              		@ sp needed
 2932 000c 80BD     		pop	{r7, pc}
 2933              	.L176:
 2934 000e C046     		.align	2
 2935              	.L175:
 2936 0010 00000000 		.word	CapSense_enableRawFilters
 2937              		.cfi_endproc
 2938              	.LFE72:
 2939              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2940              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2941              		.align	2
 2942              		.global	CapSense_DisableRawDataFilters
 2943              		.code	16
 2944              		.thumb_func
 2945              		.type	CapSense_DisableRawDataFilters, %function
 2946              	CapSense_DisableRawDataFilters:
 2947              	.LFB73:
2815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2948              		.loc 1 2837 0
 2949              		.cfi_startproc
 2950 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 103


 2951              		.cfi_def_cfa_offset 8
 2952              		.cfi_offset 7, -8
 2953              		.cfi_offset 14, -4
 2954 0002 00AF     		add	r7, sp, #0
 2955              		.cfi_def_cfa_register 7
2838:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2956              		.loc 1 2838 0
 2957 0004 024B     		ldr	r3, .L178
 2958 0006 0022     		mov	r2, #0
 2959 0008 1A70     		strb	r2, [r3]
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2960              		.loc 1 2839 0
 2961 000a BD46     		mov	sp, r7
 2962              		@ sp needed
 2963 000c 80BD     		pop	{r7, pc}
 2964              	.L179:
 2965 000e C046     		.align	2
 2966              	.L178:
 2967 0010 00000000 		.word	CapSense_enableRawFilters
 2968              		.cfi_endproc
 2969              	.LFE73:
 2970              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2971              		.bss
 2972 001d 000000   		.align	2
 2973              	CapSense_debounceCounter.5390:
 2974 0020 00       		.space	1
 2975 0021 000000   		.align	2
 2976              	CapSense_centroid.5442:
 2977 0024 000000   		.space	3
 2978 0027 00       		.text
 2979              	.Letext0:
 2980              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2981              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2982              		.section	.debug_info,"",%progbits
 2983              	.Ldebug_info0:
 2984 0000 770E0000 		.4byte	0xe77
 2985 0004 0400     		.2byte	0x4
 2986 0006 00000000 		.4byte	.Ldebug_abbrev0
 2987 000a 04       		.byte	0x4
 2988 000b 01       		.uleb128 0x1
 2989 000c 77060000 		.4byte	.LASF147
 2990 0010 01       		.byte	0x1
 2991 0011 1A0A0000 		.4byte	.LASF148
 2992 0015 83040000 		.4byte	.LASF149
 2993 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2994 001d 00000000 		.4byte	0
 2995 0021 00000000 		.4byte	.Ldebug_line0
 2996 0025 02       		.uleb128 0x2
 2997 0026 01       		.byte	0x1
 2998 0027 06       		.byte	0x6
 2999 0028 6B0A0000 		.4byte	.LASF0
 3000 002c 02       		.uleb128 0x2
 3001 002d 01       		.byte	0x1
 3002 002e 08       		.byte	0x8
 3003 002f 6B090000 		.4byte	.LASF1
 3004 0033 02       		.uleb128 0x2
 3005 0034 02       		.byte	0x2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 104


 3006 0035 05       		.byte	0x5
 3007 0036 3C080000 		.4byte	.LASF2
 3008 003a 02       		.uleb128 0x2
 3009 003b 02       		.byte	0x2
 3010 003c 07       		.byte	0x7
 3011 003d 770A0000 		.4byte	.LASF3
 3012 0041 02       		.uleb128 0x2
 3013 0042 04       		.byte	0x4
 3014 0043 05       		.byte	0x5
 3015 0044 46080000 		.4byte	.LASF4
 3016 0048 02       		.uleb128 0x2
 3017 0049 04       		.byte	0x4
 3018 004a 07       		.byte	0x7
 3019 004b FD080000 		.4byte	.LASF5
 3020 004f 02       		.uleb128 0x2
 3021 0050 08       		.byte	0x8
 3022 0051 05       		.byte	0x5
 3023 0052 F7050000 		.4byte	.LASF6
 3024 0056 02       		.uleb128 0x2
 3025 0057 08       		.byte	0x8
 3026 0058 07       		.byte	0x7
 3027 0059 14030000 		.4byte	.LASF7
 3028 005d 03       		.uleb128 0x3
 3029 005e 04       		.byte	0x4
 3030 005f 05       		.byte	0x5
 3031 0060 696E7400 		.ascii	"int\000"
 3032 0064 02       		.uleb128 0x2
 3033 0065 04       		.byte	0x4
 3034 0066 07       		.byte	0x7
 3035 0067 15010000 		.4byte	.LASF8
 3036 006b 04       		.uleb128 0x4
 3037 006c 070B0000 		.4byte	.LASF9
 3038 0070 02       		.byte	0x2
 3039 0071 3801     		.2byte	0x138
 3040 0073 2C000000 		.4byte	0x2c
 3041 0077 04       		.uleb128 0x4
 3042 0078 B6050000 		.4byte	.LASF10
 3043 007c 02       		.byte	0x2
 3044 007d 3901     		.2byte	0x139
 3045 007f 3A000000 		.4byte	0x3a
 3046 0083 04       		.uleb128 0x4
 3047 0084 8D070000 		.4byte	.LASF11
 3048 0088 02       		.byte	0x2
 3049 0089 3A01     		.2byte	0x13a
 3050 008b 48000000 		.4byte	0x48
 3051 008f 04       		.uleb128 0x4
 3052 0090 3A010000 		.4byte	.LASF12
 3053 0094 02       		.byte	0x2
 3054 0095 3C01     		.2byte	0x13c
 3055 0097 33000000 		.4byte	0x33
 3056 009b 04       		.uleb128 0x4
 3057 009c BA020000 		.4byte	.LASF13
 3058 00a0 02       		.byte	0x2
 3059 00a1 3D01     		.2byte	0x13d
 3060 00a3 41000000 		.4byte	0x41
 3061 00a7 02       		.uleb128 0x2
 3062 00a8 04       		.byte	0x4
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 105


 3063 00a9 04       		.byte	0x4
 3064 00aa B4020000 		.4byte	.LASF14
 3065 00ae 02       		.uleb128 0x2
 3066 00af 08       		.byte	0x8
 3067 00b0 04       		.byte	0x4
 3068 00b1 0D0B0000 		.4byte	.LASF15
 3069 00b5 02       		.uleb128 0x2
 3070 00b6 01       		.byte	0x1
 3071 00b7 08       		.byte	0x8
 3072 00b8 7F050000 		.4byte	.LASF16
 3073 00bc 02       		.uleb128 0x2
 3074 00bd 04       		.byte	0x4
 3075 00be 07       		.byte	0x7
 3076 00bf F4080000 		.4byte	.LASF17
 3077 00c3 05       		.uleb128 0x5
 3078 00c4 5C       		.byte	0x5c
 3079 00c5 03       		.byte	0x3
 3080 00c6 2F       		.byte	0x2f
 3081 00c7 E0010000 		.4byte	0x1e0
 3082 00cb 06       		.uleb128 0x6
 3083 00cc C2050000 		.4byte	.LASF18
 3084 00d0 03       		.byte	0x3
 3085 00d1 31       		.byte	0x31
 3086 00d2 E0010000 		.4byte	0x1e0
 3087 00d6 00       		.byte	0
 3088 00d7 06       		.uleb128 0x6
 3089 00d8 2D080000 		.4byte	.LASF19
 3090 00dc 03       		.byte	0x3
 3091 00dd 32       		.byte	0x32
 3092 00de E0010000 		.4byte	0x1e0
 3093 00e2 04       		.byte	0x4
 3094 00e3 06       		.uleb128 0x6
 3095 00e4 F5090000 		.4byte	.LASF20
 3096 00e8 03       		.byte	0x3
 3097 00e9 33       		.byte	0x33
 3098 00ea E0010000 		.4byte	0x1e0
 3099 00ee 08       		.byte	0x8
 3100 00ef 06       		.uleb128 0x6
 3101 00f0 5E090000 		.4byte	.LASF21
 3102 00f4 03       		.byte	0x3
 3103 00f5 34       		.byte	0x34
 3104 00f6 E0010000 		.4byte	0x1e0
 3105 00fa 0C       		.byte	0xc
 3106 00fb 06       		.uleb128 0x6
 3107 00fc 610A0000 		.4byte	.LASF22
 3108 0100 03       		.byte	0x3
 3109 0101 35       		.byte	0x35
 3110 0102 E0010000 		.4byte	0x1e0
 3111 0106 10       		.byte	0x10
 3112 0107 06       		.uleb128 0x6
 3113 0108 75080000 		.4byte	.LASF23
 3114 010c 03       		.byte	0x3
 3115 010d 36       		.byte	0x36
 3116 010e E6010000 		.4byte	0x1e6
 3117 0112 14       		.byte	0x14
 3118 0113 06       		.uleb128 0x6
 3119 0114 C6020000 		.4byte	.LASF24
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 106


 3120 0118 03       		.byte	0x3
 3121 0119 37       		.byte	0x37
 3122 011a F1010000 		.4byte	0x1f1
 3123 011e 18       		.byte	0x18
 3124 011f 06       		.uleb128 0x6
 3125 0120 30040000 		.4byte	.LASF25
 3126 0124 03       		.byte	0x3
 3127 0125 38       		.byte	0x38
 3128 0126 E0010000 		.4byte	0x1e0
 3129 012a 1C       		.byte	0x1c
 3130 012b 06       		.uleb128 0x6
 3131 012c FF020000 		.4byte	.LASF26
 3132 0130 03       		.byte	0x3
 3133 0131 39       		.byte	0x39
 3134 0132 E0010000 		.4byte	0x1e0
 3135 0136 20       		.byte	0x20
 3136 0137 06       		.uleb128 0x6
 3137 0138 89010000 		.4byte	.LASF27
 3138 013c 03       		.byte	0x3
 3139 013d 3A       		.byte	0x3a
 3140 013e E0010000 		.4byte	0x1e0
 3141 0142 24       		.byte	0x24
 3142 0143 06       		.uleb128 0x6
 3143 0144 2D070000 		.4byte	.LASF28
 3144 0148 03       		.byte	0x3
 3145 0149 3B       		.byte	0x3b
 3146 014a F7010000 		.4byte	0x1f7
 3147 014e 28       		.byte	0x28
 3148 014f 06       		.uleb128 0x6
 3149 0150 40010000 		.4byte	.LASF29
 3150 0154 03       		.byte	0x3
 3151 0155 3C       		.byte	0x3c
 3152 0156 F7010000 		.4byte	0x1f7
 3153 015a 2C       		.byte	0x2c
 3154 015b 06       		.uleb128 0x6
 3155 015c 27090000 		.4byte	.LASF30
 3156 0160 03       		.byte	0x3
 3157 0161 3D       		.byte	0x3d
 3158 0162 F7010000 		.4byte	0x1f7
 3159 0166 30       		.byte	0x30
 3160 0167 06       		.uleb128 0x6
 3161 0168 CA080000 		.4byte	.LASF31
 3162 016c 03       		.byte	0x3
 3163 016d 3E       		.byte	0x3e
 3164 016e E0010000 		.4byte	0x1e0
 3165 0172 34       		.byte	0x34
 3166 0173 06       		.uleb128 0x6
 3167 0174 34000000 		.4byte	.LASF32
 3168 0178 03       		.byte	0x3
 3169 0179 3F       		.byte	0x3f
 3170 017a E0010000 		.4byte	0x1e0
 3171 017e 38       		.byte	0x38
 3172 017f 06       		.uleb128 0x6
 3173 0180 A7050000 		.4byte	.LASF33
 3174 0184 03       		.byte	0x3
 3175 0185 40       		.byte	0x40
 3176 0186 E6010000 		.4byte	0x1e6
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 107


 3177 018a 3C       		.byte	0x3c
 3178 018b 06       		.uleb128 0x6
 3179 018c 04020000 		.4byte	.LASF34
 3180 0190 03       		.byte	0x3
 3181 0191 41       		.byte	0x41
 3182 0192 E6010000 		.4byte	0x1e6
 3183 0196 40       		.byte	0x40
 3184 0197 06       		.uleb128 0x6
 3185 0198 81000000 		.4byte	.LASF35
 3186 019c 03       		.byte	0x3
 3187 019d 42       		.byte	0x42
 3188 019e E6010000 		.4byte	0x1e6
 3189 01a2 44       		.byte	0x44
 3190 01a3 06       		.uleb128 0x6
 3191 01a4 4F060000 		.4byte	.LASF36
 3192 01a8 03       		.byte	0x3
 3193 01a9 43       		.byte	0x43
 3194 01aa 0C020000 		.4byte	0x20c
 3195 01ae 48       		.byte	0x48
 3196 01af 06       		.uleb128 0x6
 3197 01b0 27060000 		.4byte	.LASF37
 3198 01b4 03       		.byte	0x3
 3199 01b5 44       		.byte	0x44
 3200 01b6 1D020000 		.4byte	0x21d
 3201 01ba 4C       		.byte	0x4c
 3202 01bb 06       		.uleb128 0x6
 3203 01bc 46040000 		.4byte	.LASF38
 3204 01c0 03       		.byte	0x3
 3205 01c1 45       		.byte	0x45
 3206 01c2 0C020000 		.4byte	0x20c
 3207 01c6 50       		.byte	0x50
 3208 01c7 06       		.uleb128 0x6
 3209 01c8 91000000 		.4byte	.LASF39
 3210 01cc 03       		.byte	0x3
 3211 01cd 46       		.byte	0x46
 3212 01ce 37020000 		.4byte	0x237
 3213 01d2 54       		.byte	0x54
 3214 01d3 06       		.uleb128 0x6
 3215 01d4 A80A0000 		.4byte	.LASF40
 3216 01d8 03       		.byte	0x3
 3217 01d9 47       		.byte	0x47
 3218 01da 52020000 		.4byte	0x252
 3219 01de 58       		.byte	0x58
 3220 01df 00       		.byte	0
 3221 01e0 07       		.uleb128 0x7
 3222 01e1 04       		.byte	0x4
 3223 01e2 6B000000 		.4byte	0x6b
 3224 01e6 07       		.uleb128 0x7
 3225 01e7 04       		.byte	0x4
 3226 01e8 EC010000 		.4byte	0x1ec
 3227 01ec 08       		.uleb128 0x8
 3228 01ed 6B000000 		.4byte	0x6b
 3229 01f1 07       		.uleb128 0x7
 3230 01f2 04       		.byte	0x4
 3231 01f3 83000000 		.4byte	0x83
 3232 01f7 07       		.uleb128 0x7
 3233 01f8 04       		.byte	0x4
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 108


 3234 01f9 77000000 		.4byte	0x77
 3235 01fd 09       		.uleb128 0x9
 3236 01fe 77000000 		.4byte	0x77
 3237 0202 0C020000 		.4byte	0x20c
 3238 0206 0A       		.uleb128 0xa
 3239 0207 83000000 		.4byte	0x83
 3240 020b 00       		.byte	0
 3241 020c 07       		.uleb128 0x7
 3242 020d 04       		.byte	0x4
 3243 020e FD010000 		.4byte	0x1fd
 3244 0212 0B       		.uleb128 0xb
 3245 0213 1D020000 		.4byte	0x21d
 3246 0217 0A       		.uleb128 0xa
 3247 0218 83000000 		.4byte	0x83
 3248 021c 00       		.byte	0
 3249 021d 07       		.uleb128 0x7
 3250 021e 04       		.byte	0x4
 3251 021f 12020000 		.4byte	0x212
 3252 0223 09       		.uleb128 0x9
 3253 0224 83000000 		.4byte	0x83
 3254 0228 37020000 		.4byte	0x237
 3255 022c 0A       		.uleb128 0xa
 3256 022d E6010000 		.4byte	0x1e6
 3257 0231 0A       		.uleb128 0xa
 3258 0232 83000000 		.4byte	0x83
 3259 0236 00       		.byte	0
 3260 0237 07       		.uleb128 0x7
 3261 0238 04       		.byte	0x4
 3262 0239 23020000 		.4byte	0x223
 3263 023d 0B       		.uleb128 0xb
 3264 023e 52020000 		.4byte	0x252
 3265 0242 0A       		.uleb128 0xa
 3266 0243 E0010000 		.4byte	0x1e0
 3267 0247 0A       		.uleb128 0xa
 3268 0248 83000000 		.4byte	0x83
 3269 024c 0A       		.uleb128 0xa
 3270 024d 83000000 		.4byte	0x83
 3271 0251 00       		.byte	0
 3272 0252 07       		.uleb128 0x7
 3273 0253 04       		.byte	0x4
 3274 0254 3D020000 		.4byte	0x23d
 3275 0258 0C       		.uleb128 0xc
 3276 0259 140B0000 		.4byte	.LASF41
 3277 025d 03       		.byte	0x3
 3278 025e 48       		.byte	0x48
 3279 025f C3000000 		.4byte	0xc3
 3280 0263 05       		.uleb128 0x5
 3281 0264 0C       		.byte	0xc
 3282 0265 03       		.byte	0x3
 3283 0266 4A       		.byte	0x4a
 3284 0267 B4020000 		.4byte	0x2b4
 3285 026b 06       		.uleb128 0x6
 3286 026c 40050000 		.4byte	.LASF42
 3287 0270 03       		.byte	0x3
 3288 0271 4C       		.byte	0x4c
 3289 0272 6B000000 		.4byte	0x6b
 3290 0276 00       		.byte	0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 109


 3291 0277 06       		.uleb128 0x6
 3292 0278 11020000 		.4byte	.LASF43
 3293 027c 03       		.byte	0x3
 3294 027d 4D       		.byte	0x4d
 3295 027e 6B000000 		.4byte	0x6b
 3296 0282 01       		.byte	0x1
 3297 0283 06       		.uleb128 0x6
 3298 0284 22010000 		.4byte	.LASF44
 3299 0288 03       		.byte	0x3
 3300 0289 4E       		.byte	0x4e
 3301 028a 6B000000 		.4byte	0x6b
 3302 028e 02       		.byte	0x2
 3303 028f 06       		.uleb128 0x6
 3304 0290 59050000 		.4byte	.LASF45
 3305 0294 03       		.byte	0x3
 3306 0295 4F       		.byte	0x4f
 3307 0296 77000000 		.4byte	0x77
 3308 029a 04       		.byte	0x4
 3309 029b 06       		.uleb128 0x6
 3310 029c FF070000 		.4byte	.LASF46
 3311 02a0 03       		.byte	0x3
 3312 02a1 50       		.byte	0x50
 3313 02a2 77000000 		.4byte	0x77
 3314 02a6 06       		.byte	0x6
 3315 02a7 06       		.uleb128 0x6
 3316 02a8 0F090000 		.4byte	.LASF47
 3317 02ac 03       		.byte	0x3
 3318 02ad 51       		.byte	0x51
 3319 02ae B4020000 		.4byte	0x2b4
 3320 02b2 08       		.byte	0x8
 3321 02b3 00       		.byte	0
 3322 02b4 07       		.uleb128 0x7
 3323 02b5 04       		.byte	0x4
 3324 02b6 BA020000 		.4byte	0x2ba
 3325 02ba 08       		.uleb128 0x8
 3326 02bb 58020000 		.4byte	0x258
 3327 02bf 0C       		.uleb128 0xc
 3328 02c0 CD010000 		.4byte	.LASF48
 3329 02c4 03       		.byte	0x3
 3330 02c5 52       		.byte	0x52
 3331 02c6 63020000 		.4byte	0x263
 3332 02ca 0D       		.uleb128 0xd
 3333 02cb 05070000 		.4byte	.LASF49
 3334 02cf 01       		.byte	0x1
 3335 02d0 8E       		.byte	0x8e
 3336 02d1 00000000 		.4byte	.LFB36
 3337 02d5 6C000000 		.4byte	.LFE36-.LFB36
 3338 02d9 01       		.uleb128 0x1
 3339 02da 9C       		.byte	0x9c
 3340 02db EE020000 		.4byte	0x2ee
 3341 02df 0E       		.uleb128 0xe
 3342 02e0 52050000 		.4byte	.LASF51
 3343 02e4 01       		.byte	0x1
 3344 02e5 8E       		.byte	0x8e
 3345 02e6 83000000 		.4byte	0x83
 3346 02ea 02       		.uleb128 0x2
 3347 02eb 91       		.byte	0x91
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 110


 3348 02ec 74       		.sleb128 -12
 3349 02ed 00       		.byte	0
 3350 02ee 0F       		.uleb128 0xf
 3351 02ef AB010000 		.4byte	.LASF50
 3352 02f3 01       		.byte	0x1
 3353 02f4 D9       		.byte	0xd9
 3354 02f5 00000000 		.4byte	.LFB37
 3355 02f9 28000000 		.4byte	.LFE37-.LFB37
 3356 02fd 01       		.uleb128 0x1
 3357 02fe 9C       		.byte	0x9c
 3358 02ff 12030000 		.4byte	0x312
 3359 0303 0E       		.uleb128 0xe
 3360 0304 52050000 		.4byte	.LASF51
 3361 0308 01       		.byte	0x1
 3362 0309 D9       		.byte	0xd9
 3363 030a 83000000 		.4byte	0x83
 3364 030e 02       		.uleb128 0x2
 3365 030f 91       		.byte	0x91
 3366 0310 74       		.sleb128 -12
 3367 0311 00       		.byte	0
 3368 0312 0F       		.uleb128 0xf
 3369 0313 9F090000 		.4byte	.LASF52
 3370 0317 01       		.byte	0x1
 3371 0318 FE       		.byte	0xfe
 3372 0319 00000000 		.4byte	.LFB38
 3373 031d 26000000 		.4byte	.LFE38-.LFB38
 3374 0321 01       		.uleb128 0x1
 3375 0322 9C       		.byte	0x9c
 3376 0323 35030000 		.4byte	0x335
 3377 0327 10       		.uleb128 0x10
 3378 0328 6900     		.ascii	"i\000"
 3379 032a 01       		.byte	0x1
 3380 032b 0001     		.2byte	0x100
 3381 032d 83000000 		.4byte	0x83
 3382 0331 02       		.uleb128 0x2
 3383 0332 91       		.byte	0x91
 3384 0333 74       		.sleb128 -12
 3385 0334 00       		.byte	0
 3386 0335 11       		.uleb128 0x11
 3387 0336 4D010000 		.4byte	.LASF53
 3388 033a 01       		.byte	0x1
 3389 033b 2101     		.2byte	0x121
 3390 033d 00000000 		.4byte	.LFB39
 3391 0341 50000000 		.4byte	.LFE39-.LFB39
 3392 0345 01       		.uleb128 0x1
 3393 0346 9C       		.byte	0x9c
 3394 0347 68030000 		.4byte	0x368
 3395 034b 10       		.uleb128 0x10
 3396 034c 6900     		.ascii	"i\000"
 3397 034e 01       		.byte	0x1
 3398 034f 2301     		.2byte	0x123
 3399 0351 83000000 		.4byte	0x83
 3400 0355 02       		.uleb128 0x2
 3401 0356 91       		.byte	0x91
 3402 0357 74       		.sleb128 -12
 3403 0358 12       		.uleb128 0x12
 3404 0359 F8000000 		.4byte	.LASF54
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 111


 3405 035d 01       		.byte	0x1
 3406 035e 2401     		.2byte	0x124
 3407 0360 83000000 		.4byte	0x83
 3408 0364 02       		.uleb128 0x2
 3409 0365 91       		.byte	0x91
 3410 0366 70       		.sleb128 -16
 3411 0367 00       		.byte	0
 3412 0368 11       		.uleb128 0x11
 3413 0369 5E000000 		.4byte	.LASF55
 3414 036d 01       		.byte	0x1
 3415 036e 6201     		.2byte	0x162
 3416 0370 00000000 		.4byte	.LFB40
 3417 0374 5C020000 		.4byte	.LFE40-.LFB40
 3418 0378 01       		.uleb128 0x1
 3419 0379 9C       		.byte	0x9c
 3420 037a E8030000 		.4byte	0x3e8
 3421 037e 13       		.uleb128 0x13
 3422 037f 52050000 		.4byte	.LASF51
 3423 0383 01       		.byte	0x1
 3424 0384 6201     		.2byte	0x162
 3425 0386 83000000 		.4byte	0x83
 3426 038a 02       		.uleb128 0x2
 3427 038b 91       		.byte	0x91
 3428 038c 5C       		.sleb128 -36
 3429 038d 12       		.uleb128 0x12
 3430 038e 41040000 		.4byte	.LASF56
 3431 0392 01       		.byte	0x1
 3432 0393 6401     		.2byte	0x164
 3433 0395 83000000 		.4byte	0x83
 3434 0399 02       		.uleb128 0x2
 3435 039a 91       		.byte	0x91
 3436 039b 60       		.sleb128 -32
 3437 039c 12       		.uleb128 0x12
 3438 039d 24040000 		.4byte	.LASF57
 3439 03a1 01       		.byte	0x1
 3440 03a2 6501     		.2byte	0x165
 3441 03a4 83000000 		.4byte	0x83
 3442 03a8 02       		.uleb128 0x2
 3443 03a9 91       		.byte	0x91
 3444 03aa 6C       		.sleb128 -20
 3445 03ab 12       		.uleb128 0x12
 3446 03ac CD0A0000 		.4byte	.LASF58
 3447 03b0 01       		.byte	0x1
 3448 03b1 6601     		.2byte	0x166
 3449 03b3 77000000 		.4byte	0x77
 3450 03b7 02       		.uleb128 0x2
 3451 03b8 91       		.byte	0x91
 3452 03b9 6A       		.sleb128 -22
 3453 03ba 12       		.uleb128 0x12
 3454 03bb 62040000 		.4byte	.LASF59
 3455 03bf 01       		.byte	0x1
 3456 03c0 6701     		.2byte	0x167
 3457 03c2 77000000 		.4byte	0x77
 3458 03c6 02       		.uleb128 0x2
 3459 03c7 91       		.byte	0x91
 3460 03c8 68       		.sleb128 -24
 3461 03c9 12       		.uleb128 0x12
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 112


 3462 03ca 45030000 		.4byte	.LASF60
 3463 03ce 01       		.byte	0x1
 3464 03cf 6801     		.2byte	0x168
 3465 03d1 6B000000 		.4byte	0x6b
 3466 03d5 02       		.uleb128 0x2
 3467 03d6 91       		.byte	0x91
 3468 03d7 67       		.sleb128 -25
 3469 03d8 12       		.uleb128 0x12
 3470 03d9 18090000 		.4byte	.LASF61
 3471 03dd 01       		.byte	0x1
 3472 03de 6901     		.2byte	0x169
 3473 03e0 6B000000 		.4byte	0x6b
 3474 03e4 02       		.uleb128 0x2
 3475 03e5 91       		.byte	0x91
 3476 03e6 66       		.sleb128 -26
 3477 03e7 00       		.byte	0
 3478 03e8 11       		.uleb128 0x11
 3479 03e9 59060000 		.4byte	.LASF62
 3480 03ed 01       		.byte	0x1
 3481 03ee 2202     		.2byte	0x222
 3482 03f0 00000000 		.4byte	.LFB41
 3483 03f4 1E000000 		.4byte	.LFE41-.LFB41
 3484 03f8 01       		.uleb128 0x1
 3485 03f9 9C       		.byte	0x9c
 3486 03fa 0E040000 		.4byte	0x40e
 3487 03fe 13       		.uleb128 0x13
 3488 03ff 52050000 		.4byte	.LASF51
 3489 0403 01       		.byte	0x1
 3490 0404 2202     		.2byte	0x222
 3491 0406 83000000 		.4byte	0x83
 3492 040a 02       		.uleb128 0x2
 3493 040b 91       		.byte	0x91
 3494 040c 74       		.sleb128 -12
 3495 040d 00       		.byte	0
 3496 040e 11       		.uleb128 0x11
 3497 040f BF000000 		.4byte	.LASF63
 3498 0413 01       		.byte	0x1
 3499 0414 5802     		.2byte	0x258
 3500 0416 00000000 		.4byte	.LFB42
 3501 041a 40000000 		.4byte	.LFE42-.LFB42
 3502 041e 01       		.uleb128 0x1
 3503 041f 9C       		.byte	0x9c
 3504 0420 41040000 		.4byte	0x441
 3505 0424 10       		.uleb128 0x10
 3506 0425 6900     		.ascii	"i\000"
 3507 0427 01       		.byte	0x1
 3508 0428 5A02     		.2byte	0x25a
 3509 042a 83000000 		.4byte	0x83
 3510 042e 02       		.uleb128 0x2
 3511 042f 91       		.byte	0x91
 3512 0430 74       		.sleb128 -12
 3513 0431 12       		.uleb128 0x12
 3514 0432 F8000000 		.4byte	.LASF54
 3515 0436 01       		.byte	0x1
 3516 0437 5B02     		.2byte	0x25b
 3517 0439 83000000 		.4byte	0x83
 3518 043d 02       		.uleb128 0x2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 113


 3519 043e 91       		.byte	0x91
 3520 043f 70       		.sleb128 -16
 3521 0440 00       		.byte	0
 3522 0441 11       		.uleb128 0x11
 3523 0442 82020000 		.4byte	.LASF64
 3524 0446 01       		.byte	0x1
 3525 0447 8502     		.2byte	0x285
 3526 0449 00000000 		.4byte	.LFB43
 3527 044d 58000000 		.4byte	.LFE43-.LFB43
 3528 0451 01       		.uleb128 0x1
 3529 0452 9C       		.byte	0x9c
 3530 0453 B0040000 		.4byte	0x4b0
 3531 0457 13       		.uleb128 0x13
 3532 0458 45030000 		.4byte	.LASF60
 3533 045c 01       		.byte	0x1
 3534 045d 8502     		.2byte	0x285
 3535 045f 83000000 		.4byte	0x83
 3536 0463 02       		.uleb128 0x2
 3537 0464 91       		.byte	0x91
 3538 0465 5C       		.sleb128 -36
 3539 0466 12       		.uleb128 0x12
 3540 0467 72040000 		.4byte	.LASF65
 3541 046b 01       		.byte	0x1
 3542 046c 8702     		.2byte	0x287
 3543 046e 83000000 		.4byte	0x83
 3544 0472 02       		.uleb128 0x2
 3545 0473 91       		.byte	0x91
 3546 0474 70       		.sleb128 -16
 3547 0475 12       		.uleb128 0x12
 3548 0476 4F080000 		.4byte	.LASF66
 3549 047a 01       		.byte	0x1
 3550 047b 8802     		.2byte	0x288
 3551 047d 83000000 		.4byte	0x83
 3552 0481 02       		.uleb128 0x2
 3553 0482 91       		.byte	0x91
 3554 0483 6C       		.sleb128 -20
 3555 0484 12       		.uleb128 0x12
 3556 0485 F4070000 		.4byte	.LASF67
 3557 0489 01       		.byte	0x1
 3558 048a 8902     		.2byte	0x289
 3559 048c 83000000 		.4byte	0x83
 3560 0490 02       		.uleb128 0x2
 3561 0491 91       		.byte	0x91
 3562 0492 68       		.sleb128 -24
 3563 0493 10       		.uleb128 0x10
 3564 0494 6900     		.ascii	"i\000"
 3565 0496 01       		.byte	0x1
 3566 0497 8A02     		.2byte	0x28a
 3567 0499 83000000 		.4byte	0x83
 3568 049d 02       		.uleb128 0x2
 3569 049e 91       		.byte	0x91
 3570 049f 74       		.sleb128 -12
 3571 04a0 12       		.uleb128 0x12
 3572 04a1 F8000000 		.4byte	.LASF54
 3573 04a5 01       		.byte	0x1
 3574 04a6 8B02     		.2byte	0x28b
 3575 04a8 83000000 		.4byte	0x83
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 114


 3576 04ac 02       		.uleb128 0x2
 3577 04ad 91       		.byte	0x91
 3578 04ae 64       		.sleb128 -28
 3579 04af 00       		.byte	0
 3580 04b0 14       		.uleb128 0x14
 3581 04b1 BF090000 		.4byte	.LASF70
 3582 04b5 01       		.byte	0x1
 3583 04b6 B602     		.2byte	0x2b6
 3584 04b8 77000000 		.4byte	0x77
 3585 04bc 00000000 		.4byte	.LFB44
 3586 04c0 1C000000 		.4byte	.LFE44-.LFB44
 3587 04c4 01       		.uleb128 0x1
 3588 04c5 9C       		.byte	0x9c
 3589 04c6 DA040000 		.4byte	0x4da
 3590 04ca 13       		.uleb128 0x13
 3591 04cb 52050000 		.4byte	.LASF51
 3592 04cf 01       		.byte	0x1
 3593 04d0 B602     		.2byte	0x2b6
 3594 04d2 83000000 		.4byte	0x83
 3595 04d6 02       		.uleb128 0x2
 3596 04d7 91       		.byte	0x91
 3597 04d8 74       		.sleb128 -12
 3598 04d9 00       		.byte	0
 3599 04da 15       		.uleb128 0x15
 3600 04db EB010000 		.4byte	.LASF68
 3601 04df 01       		.byte	0x1
 3602 04e0 D102     		.2byte	0x2d1
 3603 04e2 00000000 		.4byte	.LFB45
 3604 04e6 24000000 		.4byte	.LFE45-.LFB45
 3605 04ea 01       		.uleb128 0x1
 3606 04eb 9C       		.byte	0x9c
 3607 04ec 0F050000 		.4byte	0x50f
 3608 04f0 13       		.uleb128 0x13
 3609 04f1 52050000 		.4byte	.LASF51
 3610 04f5 01       		.byte	0x1
 3611 04f6 D102     		.2byte	0x2d1
 3612 04f8 83000000 		.4byte	0x83
 3613 04fc 02       		.uleb128 0x2
 3614 04fd 91       		.byte	0x91
 3615 04fe 74       		.sleb128 -12
 3616 04ff 13       		.uleb128 0x13
 3617 0500 BD050000 		.4byte	.LASF69
 3618 0504 01       		.byte	0x1
 3619 0505 D102     		.2byte	0x2d1
 3620 0507 77000000 		.4byte	0x77
 3621 050b 02       		.uleb128 0x2
 3622 050c 91       		.byte	0x91
 3623 050d 72       		.sleb128 -14
 3624 050e 00       		.byte	0
 3625 050f 14       		.uleb128 0x14
 3626 0510 0A040000 		.4byte	.LASF71
 3627 0514 01       		.byte	0x1
 3628 0515 EC02     		.2byte	0x2ec
 3629 0517 6B000000 		.4byte	0x6b
 3630 051b 00000000 		.4byte	.LFB46
 3631 051f 1C000000 		.4byte	.LFE46-.LFB46
 3632 0523 01       		.uleb128 0x1
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 115


 3633 0524 9C       		.byte	0x9c
 3634 0525 39050000 		.4byte	0x539
 3635 0529 13       		.uleb128 0x13
 3636 052a 52050000 		.4byte	.LASF51
 3637 052e 01       		.byte	0x1
 3638 052f EC02     		.2byte	0x2ec
 3639 0531 83000000 		.4byte	0x83
 3640 0535 02       		.uleb128 0x2
 3641 0536 91       		.byte	0x91
 3642 0537 74       		.sleb128 -12
 3643 0538 00       		.byte	0
 3644 0539 15       		.uleb128 0x15
 3645 053a 21020000 		.4byte	.LASF72
 3646 053e 01       		.byte	0x1
 3647 053f 0703     		.2byte	0x307
 3648 0541 00000000 		.4byte	.LFB47
 3649 0545 24000000 		.4byte	.LFE47-.LFB47
 3650 0549 01       		.uleb128 0x1
 3651 054a 9C       		.byte	0x9c
 3652 054b 6E050000 		.4byte	0x56e
 3653 054f 13       		.uleb128 0x13
 3654 0550 52050000 		.4byte	.LASF51
 3655 0554 01       		.byte	0x1
 3656 0555 0703     		.2byte	0x307
 3657 0557 83000000 		.4byte	0x83
 3658 055b 02       		.uleb128 0x2
 3659 055c 91       		.byte	0x91
 3660 055d 74       		.sleb128 -12
 3661 055e 13       		.uleb128 0x13
 3662 055f E7030000 		.4byte	.LASF73
 3663 0563 01       		.byte	0x1
 3664 0564 0703     		.2byte	0x307
 3665 0566 6B000000 		.4byte	0x6b
 3666 056a 02       		.uleb128 0x2
 3667 056b 91       		.byte	0x91
 3668 056c 73       		.sleb128 -13
 3669 056d 00       		.byte	0
 3670 056e 14       		.uleb128 0x14
 3671 056f CE070000 		.4byte	.LASF74
 3672 0573 01       		.byte	0x1
 3673 0574 2203     		.2byte	0x322
 3674 0576 6B000000 		.4byte	0x6b
 3675 057a 00000000 		.4byte	.LFB48
 3676 057e 1C000000 		.4byte	.LFE48-.LFB48
 3677 0582 01       		.uleb128 0x1
 3678 0583 9C       		.byte	0x9c
 3679 0584 98050000 		.4byte	0x598
 3680 0588 13       		.uleb128 0x13
 3681 0589 45030000 		.4byte	.LASF60
 3682 058d 01       		.byte	0x1
 3683 058e 2203     		.2byte	0x322
 3684 0590 83000000 		.4byte	0x83
 3685 0594 02       		.uleb128 0x2
 3686 0595 91       		.byte	0x91
 3687 0596 74       		.sleb128 -12
 3688 0597 00       		.byte	0
 3689 0598 14       		.uleb128 0x14
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 116


 3690 0599 E4020000 		.4byte	.LASF75
 3691 059d 01       		.byte	0x1
 3692 059e 3D03     		.2byte	0x33d
 3693 05a0 6B000000 		.4byte	0x6b
 3694 05a4 00000000 		.4byte	.LFB49
 3695 05a8 1C000000 		.4byte	.LFE49-.LFB49
 3696 05ac 01       		.uleb128 0x1
 3697 05ad 9C       		.byte	0x9c
 3698 05ae C2050000 		.4byte	0x5c2
 3699 05b2 13       		.uleb128 0x13
 3700 05b3 45030000 		.4byte	.LASF60
 3701 05b7 01       		.byte	0x1
 3702 05b8 3D03     		.2byte	0x33d
 3703 05ba 83000000 		.4byte	0x83
 3704 05be 02       		.uleb128 0x2
 3705 05bf 91       		.byte	0x91
 3706 05c0 74       		.sleb128 -12
 3707 05c1 00       		.byte	0
 3708 05c2 14       		.uleb128 0x14
 3709 05c3 ED030000 		.4byte	.LASF76
 3710 05c7 01       		.byte	0x1
 3711 05c8 5903     		.2byte	0x359
 3712 05ca 6B000000 		.4byte	0x6b
 3713 05ce 00000000 		.4byte	.LFB50
 3714 05d2 1C000000 		.4byte	.LFE50-.LFB50
 3715 05d6 01       		.uleb128 0x1
 3716 05d7 9C       		.byte	0x9c
 3717 05d8 EC050000 		.4byte	0x5ec
 3718 05dc 13       		.uleb128 0x13
 3719 05dd 45030000 		.4byte	.LASF60
 3720 05e1 01       		.byte	0x1
 3721 05e2 5903     		.2byte	0x359
 3722 05e4 83000000 		.4byte	0x83
 3723 05e8 02       		.uleb128 0x2
 3724 05e9 91       		.byte	0x91
 3725 05ea 74       		.sleb128 -12
 3726 05eb 00       		.byte	0
 3727 05ec 14       		.uleb128 0x14
 3728 05ed 84050000 		.4byte	.LASF77
 3729 05f1 01       		.byte	0x1
 3730 05f2 7503     		.2byte	0x375
 3731 05f4 6B000000 		.4byte	0x6b
 3732 05f8 00000000 		.4byte	.LFB51
 3733 05fc 1C000000 		.4byte	.LFE51-.LFB51
 3734 0600 01       		.uleb128 0x1
 3735 0601 9C       		.byte	0x9c
 3736 0602 16060000 		.4byte	0x616
 3737 0606 13       		.uleb128 0x13
 3738 0607 45030000 		.4byte	.LASF60
 3739 060b 01       		.byte	0x1
 3740 060c 7503     		.2byte	0x375
 3741 060e 83000000 		.4byte	0x83
 3742 0612 02       		.uleb128 0x2
 3743 0613 91       		.byte	0x91
 3744 0614 74       		.sleb128 -12
 3745 0615 00       		.byte	0
 3746 0616 15       		.uleb128 0x15
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 117


 3747 0617 AC030000 		.4byte	.LASF78
 3748 061b 01       		.byte	0x1
 3749 061c 9603     		.2byte	0x396
 3750 061e 00000000 		.4byte	.LFB52
 3751 0622 24000000 		.4byte	.LFE52-.LFB52
 3752 0626 01       		.uleb128 0x1
 3753 0627 9C       		.byte	0x9c
 3754 0628 4B060000 		.4byte	0x64b
 3755 062c 13       		.uleb128 0x13
 3756 062d 45030000 		.4byte	.LASF60
 3757 0631 01       		.byte	0x1
 3758 0632 9603     		.2byte	0x396
 3759 0634 83000000 		.4byte	0x83
 3760 0638 02       		.uleb128 0x2
 3761 0639 91       		.byte	0x91
 3762 063a 74       		.sleb128 -12
 3763 063b 13       		.uleb128 0x13
 3764 063c E7030000 		.4byte	.LASF73
 3765 0640 01       		.byte	0x1
 3766 0641 9603     		.2byte	0x396
 3767 0643 6B000000 		.4byte	0x6b
 3768 0647 02       		.uleb128 0x2
 3769 0648 91       		.byte	0x91
 3770 0649 73       		.sleb128 -13
 3771 064a 00       		.byte	0
 3772 064b 15       		.uleb128 0x15
 3773 064c 67020000 		.4byte	.LASF79
 3774 0650 01       		.byte	0x1
 3775 0651 B203     		.2byte	0x3b2
 3776 0653 00000000 		.4byte	.LFB53
 3777 0657 24000000 		.4byte	.LFE53-.LFB53
 3778 065b 01       		.uleb128 0x1
 3779 065c 9C       		.byte	0x9c
 3780 065d 80060000 		.4byte	0x680
 3781 0661 13       		.uleb128 0x13
 3782 0662 45030000 		.4byte	.LASF60
 3783 0666 01       		.byte	0x1
 3784 0667 B203     		.2byte	0x3b2
 3785 0669 83000000 		.4byte	0x83
 3786 066d 02       		.uleb128 0x2
 3787 066e 91       		.byte	0x91
 3788 066f 74       		.sleb128 -12
 3789 0670 13       		.uleb128 0x13
 3790 0671 E7030000 		.4byte	.LASF73
 3791 0675 01       		.byte	0x1
 3792 0676 B203     		.2byte	0x3b2
 3793 0678 6B000000 		.4byte	0x6b
 3794 067c 02       		.uleb128 0x2
 3795 067d 91       		.byte	0x91
 3796 067e 73       		.sleb128 -13
 3797 067f 00       		.byte	0
 3798 0680 15       		.uleb128 0x15
 3799 0681 B1070000 		.4byte	.LASF80
 3800 0685 01       		.byte	0x1
 3801 0686 CE03     		.2byte	0x3ce
 3802 0688 00000000 		.4byte	.LFB54
 3803 068c 24000000 		.4byte	.LFE54-.LFB54
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 118


 3804 0690 01       		.uleb128 0x1
 3805 0691 9C       		.byte	0x9c
 3806 0692 B5060000 		.4byte	0x6b5
 3807 0696 13       		.uleb128 0x13
 3808 0697 45030000 		.4byte	.LASF60
 3809 069b 01       		.byte	0x1
 3810 069c CE03     		.2byte	0x3ce
 3811 069e 83000000 		.4byte	0x83
 3812 06a2 02       		.uleb128 0x2
 3813 06a3 91       		.byte	0x91
 3814 06a4 74       		.sleb128 -12
 3815 06a5 13       		.uleb128 0x13
 3816 06a6 E7030000 		.4byte	.LASF73
 3817 06aa 01       		.byte	0x1
 3818 06ab CE03     		.2byte	0x3ce
 3819 06ad 6B000000 		.4byte	0x6b
 3820 06b1 02       		.uleb128 0x2
 3821 06b2 91       		.byte	0x91
 3822 06b3 73       		.sleb128 -13
 3823 06b4 00       		.byte	0
 3824 06b5 15       		.uleb128 0x15
 3825 06b6 6A070000 		.4byte	.LASF81
 3826 06ba 01       		.byte	0x1
 3827 06bb EB03     		.2byte	0x3eb
 3828 06bd 00000000 		.4byte	.LFB55
 3829 06c1 24000000 		.4byte	.LFE55-.LFB55
 3830 06c5 01       		.uleb128 0x1
 3831 06c6 9C       		.byte	0x9c
 3832 06c7 EA060000 		.4byte	0x6ea
 3833 06cb 13       		.uleb128 0x13
 3834 06cc 45030000 		.4byte	.LASF60
 3835 06d0 01       		.byte	0x1
 3836 06d1 EB03     		.2byte	0x3eb
 3837 06d3 83000000 		.4byte	0x83
 3838 06d7 02       		.uleb128 0x2
 3839 06d8 91       		.byte	0x91
 3840 06d9 74       		.sleb128 -12
 3841 06da 13       		.uleb128 0x13
 3842 06db E7030000 		.4byte	.LASF73
 3843 06df 01       		.byte	0x1
 3844 06e0 EB03     		.2byte	0x3eb
 3845 06e2 6B000000 		.4byte	0x6b
 3846 06e6 02       		.uleb128 0x2
 3847 06e7 91       		.byte	0x91
 3848 06e8 73       		.sleb128 -13
 3849 06e9 00       		.byte	0
 3850 06ea 15       		.uleb128 0x15
 3851 06eb 39090000 		.4byte	.LASF82
 3852 06ef 01       		.byte	0x1
 3853 06f0 0704     		.2byte	0x407
 3854 06f2 00000000 		.4byte	.LFB56
 3855 06f6 24000000 		.4byte	.LFE56-.LFB56
 3856 06fa 01       		.uleb128 0x1
 3857 06fb 9C       		.byte	0x9c
 3858 06fc 1F070000 		.4byte	0x71f
 3859 0700 13       		.uleb128 0x13
 3860 0701 45030000 		.4byte	.LASF60
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 119


 3861 0705 01       		.byte	0x1
 3862 0706 0704     		.2byte	0x407
 3863 0708 83000000 		.4byte	0x83
 3864 070c 02       		.uleb128 0x2
 3865 070d 91       		.byte	0x91
 3866 070e 74       		.sleb128 -12
 3867 070f 13       		.uleb128 0x13
 3868 0710 E7030000 		.4byte	.LASF73
 3869 0714 01       		.byte	0x1
 3870 0715 0704     		.2byte	0x407
 3871 0717 6B000000 		.4byte	0x6b
 3872 071b 02       		.uleb128 0x2
 3873 071c 91       		.byte	0x91
 3874 071d 73       		.sleb128 -13
 3875 071e 00       		.byte	0
 3876 071f 15       		.uleb128 0x15
 3877 0720 D8090000 		.4byte	.LASF83
 3878 0724 01       		.byte	0x1
 3879 0725 2304     		.2byte	0x423
 3880 0727 00000000 		.4byte	.LFB57
 3881 072b 24000000 		.4byte	.LFE57-.LFB57
 3882 072f 01       		.uleb128 0x1
 3883 0730 9C       		.byte	0x9c
 3884 0731 54070000 		.4byte	0x754
 3885 0735 13       		.uleb128 0x13
 3886 0736 52050000 		.4byte	.LASF51
 3887 073a 01       		.byte	0x1
 3888 073b 2304     		.2byte	0x423
 3889 073d 83000000 		.4byte	0x83
 3890 0741 02       		.uleb128 0x2
 3891 0742 91       		.byte	0x91
 3892 0743 74       		.sleb128 -12
 3893 0744 13       		.uleb128 0x13
 3894 0745 E7030000 		.4byte	.LASF73
 3895 0749 01       		.byte	0x1
 3896 074a 2304     		.2byte	0x423
 3897 074c 6B000000 		.4byte	0x6b
 3898 0750 02       		.uleb128 0x2
 3899 0751 91       		.byte	0x91
 3900 0752 73       		.sleb128 -13
 3901 0753 00       		.byte	0
 3902 0754 16       		.uleb128 0x16
 3903 0755 32060000 		.4byte	.LASF84
 3904 0759 01       		.byte	0x1
 3905 075a 5104     		.2byte	0x451
 3906 075c 83000000 		.4byte	0x83
 3907 0760 00000000 		.4byte	.LFB58
 3908 0764 3C010000 		.4byte	.LFE58-.LFB58
 3909 0768 01       		.uleb128 0x1
 3910 0769 9C       		.byte	0x9c
 3911 076a DB070000 		.4byte	0x7db
 3912 076e 13       		.uleb128 0x13
 3913 076f 52050000 		.4byte	.LASF51
 3914 0773 01       		.byte	0x1
 3915 0774 5104     		.2byte	0x451
 3916 0776 83000000 		.4byte	0x83
 3917 077a 02       		.uleb128 0x2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 120


 3918 077b 91       		.byte	0x91
 3919 077c 6C       		.sleb128 -20
 3920 077d 12       		.uleb128 0x12
 3921 077e 45030000 		.4byte	.LASF60
 3922 0782 01       		.byte	0x1
 3923 0783 5304     		.2byte	0x453
 3924 0785 6B000000 		.4byte	0x6b
 3925 0789 02       		.uleb128 0x2
 3926 078a 91       		.byte	0x91
 3927 078b 77       		.sleb128 -9
 3928 078c 12       		.uleb128 0x12
 3929 078d 1E060000 		.4byte	.LASF85
 3930 0791 01       		.byte	0x1
 3931 0792 5404     		.2byte	0x454
 3932 0794 6B000000 		.4byte	0x6b
 3933 0798 02       		.uleb128 0x2
 3934 0799 91       		.byte	0x91
 3935 079a 74       		.sleb128 -12
 3936 079b 12       		.uleb128 0x12
 3937 079c 91090000 		.4byte	.LASF86
 3938 07a0 01       		.byte	0x1
 3939 07a1 5504     		.2byte	0x455
 3940 07a3 6B000000 		.4byte	0x6b
 3941 07a7 02       		.uleb128 0x2
 3942 07a8 91       		.byte	0x91
 3943 07a9 73       		.sleb128 -13
 3944 07aa 12       		.uleb128 0x12
 3945 07ab 4E090000 		.4byte	.LASF87
 3946 07af 01       		.byte	0x1
 3947 07b0 5704     		.2byte	0x457
 3948 07b2 6B000000 		.4byte	0x6b
 3949 07b6 02       		.uleb128 0x2
 3950 07b7 91       		.byte	0x91
 3951 07b8 76       		.sleb128 -10
 3952 07b9 12       		.uleb128 0x12
 3953 07ba 57040000 		.4byte	.LASF88
 3954 07be 01       		.byte	0x1
 3955 07bf 5804     		.2byte	0x458
 3956 07c1 6B000000 		.4byte	0x6b
 3957 07c5 02       		.uleb128 0x2
 3958 07c6 91       		.byte	0x91
 3959 07c7 75       		.sleb128 -11
 3960 07c8 12       		.uleb128 0x12
 3961 07c9 1B000000 		.4byte	.LASF89
 3962 07cd 01       		.byte	0x1
 3963 07ce 5904     		.2byte	0x459
 3964 07d0 DB070000 		.4byte	0x7db
 3965 07d4 05       		.uleb128 0x5
 3966 07d5 03       		.byte	0x3
 3967 07d6 20000000 		.4byte	CapSense_debounceCounter.5390
 3968 07da 00       		.byte	0
 3969 07db 17       		.uleb128 0x17
 3970 07dc 6B000000 		.4byte	0x6b
 3971 07e0 EB070000 		.4byte	0x7eb
 3972 07e4 18       		.uleb128 0x18
 3973 07e5 BC000000 		.4byte	0xbc
 3974 07e9 00       		.byte	0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 121


 3975 07ea 00       		.byte	0
 3976 07eb 16       		.uleb128 0x16
 3977 07ec EA0A0000 		.4byte	.LASF90
 3978 07f0 01       		.byte	0x1
 3979 07f1 A804     		.2byte	0x4a8
 3980 07f3 83000000 		.4byte	0x83
 3981 07f7 00000000 		.4byte	.LFB59
 3982 07fb 42000000 		.4byte	.LFE59-.LFB59
 3983 07ff 01       		.uleb128 0x1
 3984 0800 9C       		.byte	0x9c
 3985 0801 42080000 		.4byte	0x842
 3986 0805 13       		.uleb128 0x13
 3987 0806 45030000 		.4byte	.LASF60
 3988 080a 01       		.byte	0x1
 3989 080b A804     		.2byte	0x4a8
 3990 080d 83000000 		.4byte	0x83
 3991 0811 02       		.uleb128 0x2
 3992 0812 91       		.byte	0x91
 3993 0813 64       		.sleb128 -28
 3994 0814 12       		.uleb128 0x12
 3995 0815 DC050000 		.4byte	.LASF91
 3996 0819 01       		.byte	0x1
 3997 081a AA04     		.2byte	0x4aa
 3998 081c 83000000 		.4byte	0x83
 3999 0820 02       		.uleb128 0x2
 4000 0821 91       		.byte	0x91
 4001 0822 74       		.sleb128 -12
 4002 0823 12       		.uleb128 0x12
 4003 0824 08010000 		.4byte	.LASF92
 4004 0828 01       		.byte	0x1
 4005 0829 AB04     		.2byte	0x4ab
 4006 082b 83000000 		.4byte	0x83
 4007 082f 02       		.uleb128 0x2
 4008 0830 91       		.byte	0x91
 4009 0831 6C       		.sleb128 -20
 4010 0832 12       		.uleb128 0x12
 4011 0833 410A0000 		.4byte	.LASF93
 4012 0837 01       		.byte	0x1
 4013 0838 AC04     		.2byte	0x4ac
 4014 083a 83000000 		.4byte	0x83
 4015 083e 02       		.uleb128 0x2
 4016 083f 91       		.byte	0x91
 4017 0840 70       		.sleb128 -16
 4018 0841 00       		.byte	0
 4019 0842 16       		.uleb128 0x16
 4020 0843 E7040000 		.4byte	.LASF94
 4021 0847 01       		.byte	0x1
 4022 0848 D604     		.2byte	0x4d6
 4023 084a 83000000 		.4byte	0x83
 4024 084e 00000000 		.4byte	.LFB60
 4025 0852 36000000 		.4byte	.LFE60-.LFB60
 4026 0856 01       		.uleb128 0x1
 4027 0857 9C       		.byte	0x9c
 4028 0858 79080000 		.4byte	0x879
 4029 085c 10       		.uleb128 0x10
 4030 085d 6900     		.ascii	"i\000"
 4031 085f 01       		.byte	0x1
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 122


 4032 0860 D904     		.2byte	0x4d9
 4033 0862 83000000 		.4byte	0x83
 4034 0866 02       		.uleb128 0x2
 4035 0867 91       		.byte	0x91
 4036 0868 74       		.sleb128 -12
 4037 0869 12       		.uleb128 0x12
 4038 086a 410A0000 		.4byte	.LASF93
 4039 086e 01       		.byte	0x1
 4040 086f DA04     		.2byte	0x4da
 4041 0871 83000000 		.4byte	0x83
 4042 0875 02       		.uleb128 0x2
 4043 0876 91       		.byte	0x91
 4044 0877 70       		.sleb128 -16
 4045 0878 00       		.byte	0
 4046 0879 11       		.uleb128 0x11
 4047 087a 69050000 		.4byte	.LASF95
 4048 087e 01       		.byte	0x1
 4049 087f 0505     		.2byte	0x505
 4050 0881 00000000 		.4byte	.LFB61
 4051 0885 5C000000 		.4byte	.LFE61-.LFB61
 4052 0889 01       		.uleb128 0x1
 4053 088a 9C       		.byte	0x9c
 4054 088b BD080000 		.4byte	0x8bd
 4055 088f 13       		.uleb128 0x13
 4056 0890 45030000 		.4byte	.LASF60
 4057 0894 01       		.byte	0x1
 4058 0895 0505     		.2byte	0x505
 4059 0897 83000000 		.4byte	0x83
 4060 089b 02       		.uleb128 0x2
 4061 089c 91       		.byte	0x91
 4062 089d 6C       		.sleb128 -20
 4063 089e 12       		.uleb128 0x12
 4064 089f DC050000 		.4byte	.LASF91
 4065 08a3 01       		.byte	0x1
 4066 08a4 0805     		.2byte	0x508
 4067 08a6 6B000000 		.4byte	0x6b
 4068 08aa 02       		.uleb128 0x2
 4069 08ab 91       		.byte	0x91
 4070 08ac 77       		.sleb128 -9
 4071 08ad 12       		.uleb128 0x12
 4072 08ae 08010000 		.4byte	.LASF92
 4073 08b2 01       		.byte	0x1
 4074 08b3 0905     		.2byte	0x509
 4075 08b5 6B000000 		.4byte	0x6b
 4076 08b9 02       		.uleb128 0x2
 4077 08ba 91       		.byte	0x91
 4078 08bb 76       		.sleb128 -10
 4079 08bc 00       		.byte	0
 4080 08bd 11       		.uleb128 0x11
 4081 08be A0000000 		.4byte	.LASF96
 4082 08c2 01       		.byte	0x1
 4083 08c3 3005     		.2byte	0x530
 4084 08c5 00000000 		.4byte	.LFB62
 4085 08c9 5C000000 		.4byte	.LFE62-.LFB62
 4086 08cd 01       		.uleb128 0x1
 4087 08ce 9C       		.byte	0x9c
 4088 08cf 01090000 		.4byte	0x901
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 123


 4089 08d3 13       		.uleb128 0x13
 4090 08d4 45030000 		.4byte	.LASF60
 4091 08d8 01       		.byte	0x1
 4092 08d9 3005     		.2byte	0x530
 4093 08db 83000000 		.4byte	0x83
 4094 08df 02       		.uleb128 0x2
 4095 08e0 91       		.byte	0x91
 4096 08e1 6C       		.sleb128 -20
 4097 08e2 12       		.uleb128 0x12
 4098 08e3 DC050000 		.4byte	.LASF91
 4099 08e7 01       		.byte	0x1
 4100 08e8 3205     		.2byte	0x532
 4101 08ea 6B000000 		.4byte	0x6b
 4102 08ee 02       		.uleb128 0x2
 4103 08ef 91       		.byte	0x91
 4104 08f0 77       		.sleb128 -9
 4105 08f1 12       		.uleb128 0x12
 4106 08f2 08010000 		.4byte	.LASF92
 4107 08f6 01       		.byte	0x1
 4108 08f7 3305     		.2byte	0x533
 4109 08f9 6B000000 		.4byte	0x6b
 4110 08fd 02       		.uleb128 0x2
 4111 08fe 91       		.byte	0x91
 4112 08ff 76       		.sleb128 -10
 4113 0900 00       		.byte	0
 4114 0901 14       		.uleb128 0x14
 4115 0902 60080000 		.4byte	.LASF97
 4116 0906 01       		.byte	0x1
 4117 0907 6205     		.2byte	0x562
 4118 0909 6B000000 		.4byte	0x6b
 4119 090d 00000000 		.4byte	.LFB63
 4120 0911 B8000000 		.4byte	.LFE63-.LFB63
 4121 0915 01       		.uleb128 0x1
 4122 0916 9C       		.byte	0x9c
 4123 0917 83090000 		.4byte	0x983
 4124 091b 13       		.uleb128 0x13
 4125 091c 29040000 		.4byte	.LASF98
 4126 0920 01       		.byte	0x1
 4127 0921 6205     		.2byte	0x562
 4128 0923 6B000000 		.4byte	0x6b
 4129 0927 02       		.uleb128 0x2
 4130 0928 91       		.byte	0x91
 4131 0929 67       		.sleb128 -25
 4132 092a 13       		.uleb128 0x13
 4133 092b C0020000 		.4byte	.LASF99
 4134 092f 01       		.byte	0x1
 4135 0930 6205     		.2byte	0x562
 4136 0932 6B000000 		.4byte	0x6b
 4137 0936 02       		.uleb128 0x2
 4138 0937 91       		.byte	0x91
 4139 0938 66       		.sleb128 -26
 4140 0939 13       		.uleb128 0x13
 4141 093a 4E090000 		.4byte	.LASF87
 4142 093e 01       		.byte	0x1
 4143 093f 6205     		.2byte	0x562
 4144 0941 6B000000 		.4byte	0x6b
 4145 0945 02       		.uleb128 0x2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 124


 4146 0946 91       		.byte	0x91
 4147 0947 65       		.sleb128 -27
 4148 0948 10       		.uleb128 0x10
 4149 0949 6900     		.ascii	"i\000"
 4150 094b 01       		.byte	0x1
 4151 094c 6505     		.2byte	0x565
 4152 094e 6B000000 		.4byte	0x6b
 4153 0952 02       		.uleb128 0x2
 4154 0953 91       		.byte	0x91
 4155 0954 6F       		.sleb128 -17
 4156 0955 12       		.uleb128 0x12
 4157 0956 EC080000 		.4byte	.LASF100
 4158 095a 01       		.byte	0x1
 4159 095b 6F05     		.2byte	0x56f
 4160 095d 6B000000 		.4byte	0x6b
 4161 0961 02       		.uleb128 0x2
 4162 0962 91       		.byte	0x91
 4163 0963 6E       		.sleb128 -18
 4164 0964 12       		.uleb128 0x12
 4165 0965 5B080000 		.4byte	.LASF101
 4166 0969 01       		.byte	0x1
 4167 096a 7105     		.2byte	0x571
 4168 096c 6B000000 		.4byte	0x6b
 4169 0970 02       		.uleb128 0x2
 4170 0971 91       		.byte	0x91
 4171 0972 6D       		.sleb128 -19
 4172 0973 12       		.uleb128 0x12
 4173 0974 A3070000 		.4byte	.LASF102
 4174 0978 01       		.byte	0x1
 4175 0979 7205     		.2byte	0x572
 4176 097b E0010000 		.4byte	0x1e0
 4177 097f 02       		.uleb128 0x2
 4178 0980 91       		.byte	0x91
 4179 0981 68       		.sleb128 -24
 4180 0982 00       		.byte	0
 4181 0983 16       		.uleb128 0x16
 4182 0984 17070000 		.4byte	.LASF103
 4183 0988 01       		.byte	0x1
 4184 0989 0106     		.2byte	0x601
 4185 098b 6B000000 		.4byte	0x6b
 4186 098f 00000000 		.4byte	.LFB64
 4187 0993 A0010000 		.4byte	.LFE64-.LFB64
 4188 0997 01       		.uleb128 0x1
 4189 0998 9C       		.byte	0x9c
 4190 0999 550A0000 		.4byte	0xa55
 4191 099d 13       		.uleb128 0x13
 4192 099e EC080000 		.4byte	.LASF100
 4193 09a2 01       		.byte	0x1
 4194 09a3 0106     		.2byte	0x601
 4195 09a5 6B000000 		.4byte	0x6b
 4196 09a9 02       		.uleb128 0x2
 4197 09aa 91       		.byte	0x91
 4198 09ab 57       		.sleb128 -41
 4199 09ac 13       		.uleb128 0x13
 4200 09ad 29040000 		.4byte	.LASF98
 4201 09b1 01       		.byte	0x1
 4202 09b2 0106     		.2byte	0x601
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 125


 4203 09b4 6B000000 		.4byte	0x6b
 4204 09b8 02       		.uleb128 0x2
 4205 09b9 91       		.byte	0x91
 4206 09ba 56       		.sleb128 -42
 4207 09bb 13       		.uleb128 0x13
 4208 09bc C0020000 		.4byte	.LASF99
 4209 09c0 01       		.byte	0x1
 4210 09c1 0206     		.2byte	0x602
 4211 09c3 6B000000 		.4byte	0x6b
 4212 09c7 02       		.uleb128 0x2
 4213 09c8 91       		.byte	0x91
 4214 09c9 55       		.sleb128 -43
 4215 09ca 13       		.uleb128 0x13
 4216 09cb D1050000 		.4byte	.LASF104
 4217 09cf 01       		.byte	0x1
 4218 09d0 0206     		.2byte	0x602
 4219 09d2 77000000 		.4byte	0x77
 4220 09d6 02       		.uleb128 0x2
 4221 09d7 91       		.byte	0x91
 4222 09d8 52       		.sleb128 -46
 4223 09d9 13       		.uleb128 0x13
 4224 09da 18090000 		.4byte	.LASF61
 4225 09de 01       		.byte	0x1
 4226 09df 0206     		.2byte	0x602
 4227 09e1 6B000000 		.4byte	0x6b
 4228 09e5 02       		.uleb128 0x2
 4229 09e6 91       		.byte	0x91
 4230 09e7 00       		.sleb128 0
 4231 09e8 12       		.uleb128 0x12
 4232 09e9 0D080000 		.4byte	.LASF105
 4233 09ed 01       		.byte	0x1
 4234 09ee 0606     		.2byte	0x606
 4235 09f0 6B000000 		.4byte	0x6b
 4236 09f4 02       		.uleb128 0x2
 4237 09f5 91       		.byte	0x91
 4238 09f6 6F       		.sleb128 -17
 4239 09f7 12       		.uleb128 0x12
 4240 09f8 32010000 		.4byte	.LASF106
 4241 09fc 01       		.byte	0x1
 4242 09fd 0706     		.2byte	0x607
 4243 09ff 6B000000 		.4byte	0x6b
 4244 0a03 02       		.uleb128 0x2
 4245 0a04 91       		.byte	0x91
 4246 0a05 67       		.sleb128 -25
 4247 0a06 12       		.uleb128 0x12
 4248 0a07 E5050000 		.4byte	.LASF107
 4249 0a0b 01       		.byte	0x1
 4250 0a0c 0C06     		.2byte	0x60c
 4251 0a0e 550A0000 		.4byte	0xa55
 4252 0a12 05       		.uleb128 0x5
 4253 0a13 03       		.byte	0x3
 4254 0a14 24000000 		.4byte	CapSense_centroid.5442
 4255 0a18 12       		.uleb128 0x12
 4256 0a19 6B0B0000 		.4byte	.LASF108
 4257 0a1d 01       		.byte	0x1
 4258 0a1e 1306     		.2byte	0x613
 4259 0a20 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 126


 4260 0a24 02       		.uleb128 0x2
 4261 0a25 91       		.byte	0x91
 4262 0a26 5B       		.sleb128 -37
 4263 0a27 12       		.uleb128 0x12
 4264 0a28 EA070000 		.4byte	.LASF109
 4265 0a2c 01       		.byte	0x1
 4266 0a2d 1406     		.2byte	0x614
 4267 0a2f 83000000 		.4byte	0x83
 4268 0a33 02       		.uleb128 0x2
 4269 0a34 91       		.byte	0x91
 4270 0a35 60       		.sleb128 -32
 4271 0a36 12       		.uleb128 0x12
 4272 0a37 BE080000 		.4byte	.LASF110
 4273 0a3b 01       		.byte	0x1
 4274 0a3c 1506     		.2byte	0x615
 4275 0a3e 9B000000 		.4byte	0x9b
 4276 0a42 02       		.uleb128 0x2
 4277 0a43 91       		.byte	0x91
 4278 0a44 5C       		.sleb128 -36
 4279 0a45 12       		.uleb128 0x12
 4280 0a46 A3070000 		.4byte	.LASF102
 4281 0a4a 01       		.byte	0x1
 4282 0a4b 1706     		.2byte	0x617
 4283 0a4d E0010000 		.4byte	0x1e0
 4284 0a51 02       		.uleb128 0x2
 4285 0a52 91       		.byte	0x91
 4286 0a53 68       		.sleb128 -24
 4287 0a54 00       		.byte	0
 4288 0a55 17       		.uleb128 0x17
 4289 0a56 6B000000 		.4byte	0x6b
 4290 0a5a 650A0000 		.4byte	0xa65
 4291 0a5e 18       		.uleb128 0x18
 4292 0a5f BC000000 		.4byte	0xbc
 4293 0a63 02       		.byte	0x2
 4294 0a64 00       		.byte	0
 4295 0a65 16       		.uleb128 0x16
 4296 0a66 15080000 		.4byte	.LASF111
 4297 0a6a 01       		.byte	0x1
 4298 0a6b D406     		.2byte	0x6d4
 4299 0a6d 77000000 		.4byte	0x77
 4300 0a71 00000000 		.4byte	.LFB65
 4301 0a75 B8010000 		.4byte	.LFE65-.LFB65
 4302 0a79 01       		.uleb128 0x1
 4303 0a7a 9C       		.byte	0x9c
 4304 0a7b 070B0000 		.4byte	0xb07
 4305 0a7f 13       		.uleb128 0x13
 4306 0a80 45030000 		.4byte	.LASF60
 4307 0a84 01       		.byte	0x1
 4308 0a85 D406     		.2byte	0x6d4
 4309 0a87 83000000 		.4byte	0x83
 4310 0a8b 02       		.uleb128 0x2
 4311 0a8c 91       		.byte	0x91
 4312 0a8d 5C       		.sleb128 -36
 4313 0a8e 12       		.uleb128 0x12
 4314 0a8f DF000000 		.4byte	.LASF112
 4315 0a93 01       		.byte	0x1
 4316 0a94 DB06     		.2byte	0x6db
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 127


 4317 0a96 6B000000 		.4byte	0x6b
 4318 0a9a 02       		.uleb128 0x2
 4319 0a9b 91       		.byte	0x91
 4320 0a9c 68       		.sleb128 -24
 4321 0a9d 12       		.uleb128 0x12
 4322 0a9e 94070000 		.4byte	.LASF113
 4323 0aa2 01       		.byte	0x1
 4324 0aa3 DC06     		.2byte	0x6dc
 4325 0aa5 6B000000 		.4byte	0x6b
 4326 0aa9 02       		.uleb128 0x2
 4327 0aaa 91       		.byte	0x91
 4328 0aab 6D       		.sleb128 -19
 4329 0aac 12       		.uleb128 0x12
 4330 0aad D5020000 		.4byte	.LASF114
 4331 0ab1 01       		.byte	0x1
 4332 0ab2 DD06     		.2byte	0x6dd
 4333 0ab4 6B000000 		.4byte	0x6b
 4334 0ab8 02       		.uleb128 0x2
 4335 0ab9 91       		.byte	0x91
 4336 0aba 6C       		.sleb128 -20
 4337 0abb 12       		.uleb128 0x12
 4338 0abc B7000000 		.4byte	.LASF115
 4339 0ac0 01       		.byte	0x1
 4340 0ac1 E206     		.2byte	0x6e2
 4341 0ac3 6B000000 		.4byte	0x6b
 4342 0ac7 02       		.uleb128 0x2
 4343 0ac8 91       		.byte	0x91
 4344 0ac9 67       		.sleb128 -25
 4345 0aca 12       		.uleb128 0x12
 4346 0acb EC080000 		.4byte	.LASF100
 4347 0acf 01       		.byte	0x1
 4348 0ad0 E706     		.2byte	0x6e7
 4349 0ad2 6B000000 		.4byte	0x6b
 4350 0ad6 02       		.uleb128 0x2
 4351 0ad7 91       		.byte	0x91
 4352 0ad8 69       		.sleb128 -23
 4353 0ad9 12       		.uleb128 0x12
 4354 0ada 6B0B0000 		.4byte	.LASF108
 4355 0ade 01       		.byte	0x1
 4356 0adf E806     		.2byte	0x6e8
 4357 0ae1 77000000 		.4byte	0x77
 4358 0ae5 02       		.uleb128 0x2
 4359 0ae6 91       		.byte	0x91
 4360 0ae7 6E       		.sleb128 -18
 4361 0ae8 12       		.uleb128 0x12
 4362 0ae9 29040000 		.4byte	.LASF98
 4363 0aed 01       		.byte	0x1
 4364 0aee E906     		.2byte	0x6e9
 4365 0af0 6B000000 		.4byte	0x6b
 4366 0af4 02       		.uleb128 0x2
 4367 0af5 91       		.byte	0x91
 4368 0af6 6B       		.sleb128 -21
 4369 0af7 12       		.uleb128 0x12
 4370 0af8 C0020000 		.4byte	.LASF99
 4371 0afc 01       		.byte	0x1
 4372 0afd EA06     		.2byte	0x6ea
 4373 0aff 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 128


 4374 0b03 02       		.uleb128 0x2
 4375 0b04 91       		.byte	0x91
 4376 0b05 6A       		.sleb128 -22
 4377 0b06 00       		.byte	0
 4378 0b07 16       		.uleb128 0x16
 4379 0b08 8A0A0000 		.4byte	.LASF116
 4380 0b0c 01       		.byte	0x1
 4381 0b0d 9F07     		.2byte	0x79f
 4382 0b0f 77000000 		.4byte	0x77
 4383 0b13 00000000 		.4byte	.LFB66
 4384 0b17 98000000 		.4byte	.LFE66-.LFB66
 4385 0b1b 01       		.uleb128 0x1
 4386 0b1c 9C       		.byte	0x9c
 4387 0b1d 6D0B0000 		.4byte	0xb6d
 4388 0b21 13       		.uleb128 0x13
 4389 0b22 45030000 		.4byte	.LASF60
 4390 0b26 01       		.byte	0x1
 4391 0b27 9F07     		.2byte	0x79f
 4392 0b29 83000000 		.4byte	0x83
 4393 0b2d 02       		.uleb128 0x2
 4394 0b2e 91       		.byte	0x91
 4395 0b2f 64       		.sleb128 -28
 4396 0b30 12       		.uleb128 0x12
 4397 0b31 EC080000 		.4byte	.LASF100
 4398 0b35 01       		.byte	0x1
 4399 0b36 AE07     		.2byte	0x7ae
 4400 0b38 6B000000 		.4byte	0x6b
 4401 0b3c 02       		.uleb128 0x2
 4402 0b3d 91       		.byte	0x91
 4403 0b3e 6B       		.sleb128 -21
 4404 0b3f 12       		.uleb128 0x12
 4405 0b40 6B0B0000 		.4byte	.LASF108
 4406 0b44 01       		.byte	0x1
 4407 0b45 AF07     		.2byte	0x7af
 4408 0b47 77000000 		.4byte	0x77
 4409 0b4b 02       		.uleb128 0x2
 4410 0b4c 91       		.byte	0x91
 4411 0b4d 6E       		.sleb128 -18
 4412 0b4e 12       		.uleb128 0x12
 4413 0b4f 29040000 		.4byte	.LASF98
 4414 0b53 01       		.byte	0x1
 4415 0b54 B007     		.2byte	0x7b0
 4416 0b56 6B000000 		.4byte	0x6b
 4417 0b5a 02       		.uleb128 0x2
 4418 0b5b 91       		.byte	0x91
 4419 0b5c 6D       		.sleb128 -19
 4420 0b5d 12       		.uleb128 0x12
 4421 0b5e C0020000 		.4byte	.LASF99
 4422 0b62 01       		.byte	0x1
 4423 0b63 B107     		.2byte	0x7b1
 4424 0b65 6B000000 		.4byte	0x6b
 4425 0b69 02       		.uleb128 0x2
 4426 0b6a 91       		.byte	0x91
 4427 0b6b 6C       		.sleb128 -20
 4428 0b6c 00       		.byte	0
 4429 0b6d 14       		.uleb128 0x14
 4430 0b6e B70A0000 		.4byte	.LASF117
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 129


 4431 0b72 01       		.byte	0x1
 4432 0b73 4C09     		.2byte	0x94c
 4433 0b75 77000000 		.4byte	0x77
 4434 0b79 00000000 		.4byte	.LFB67
 4435 0b7d 76000000 		.4byte	.LFE67-.LFB67
 4436 0b81 01       		.uleb128 0x1
 4437 0b82 9C       		.byte	0x9c
 4438 0b83 C10B0000 		.4byte	0xbc1
 4439 0b87 19       		.uleb128 0x19
 4440 0b88 783100   		.ascii	"x1\000"
 4441 0b8b 01       		.byte	0x1
 4442 0b8c 4C09     		.2byte	0x94c
 4443 0b8e 77000000 		.4byte	0x77
 4444 0b92 02       		.uleb128 0x2
 4445 0b93 91       		.byte	0x91
 4446 0b94 66       		.sleb128 -26
 4447 0b95 19       		.uleb128 0x19
 4448 0b96 783200   		.ascii	"x2\000"
 4449 0b99 01       		.byte	0x1
 4450 0b9a 4C09     		.2byte	0x94c
 4451 0b9c 77000000 		.4byte	0x77
 4452 0ba0 02       		.uleb128 0x2
 4453 0ba1 91       		.byte	0x91
 4454 0ba2 64       		.sleb128 -28
 4455 0ba3 19       		.uleb128 0x19
 4456 0ba4 783300   		.ascii	"x3\000"
 4457 0ba7 01       		.byte	0x1
 4458 0ba8 4C09     		.2byte	0x94c
 4459 0baa 77000000 		.4byte	0x77
 4460 0bae 02       		.uleb128 0x2
 4461 0baf 91       		.byte	0x91
 4462 0bb0 62       		.sleb128 -30
 4463 0bb1 10       		.uleb128 0x10
 4464 0bb2 746D7000 		.ascii	"tmp\000"
 4465 0bb6 01       		.byte	0x1
 4466 0bb7 4E09     		.2byte	0x94e
 4467 0bb9 77000000 		.4byte	0x77
 4468 0bbd 02       		.uleb128 0x2
 4469 0bbe 91       		.byte	0x91
 4470 0bbf 6E       		.sleb128 -18
 4471 0bc0 00       		.byte	0
 4472 0bc1 16       		.uleb128 0x16
 4473 0bc2 7D030000 		.4byte	.LASF118
 4474 0bc6 01       		.byte	0x1
 4475 0bc7 7D09     		.2byte	0x97d
 4476 0bc9 77000000 		.4byte	0x77
 4477 0bcd 00000000 		.4byte	.LFB68
 4478 0bd1 46000000 		.4byte	.LFE68-.LFB68
 4479 0bd5 01       		.uleb128 0x1
 4480 0bd6 9C       		.byte	0x9c
 4481 0bd7 150C0000 		.4byte	0xc15
 4482 0bdb 19       		.uleb128 0x19
 4483 0bdc 783100   		.ascii	"x1\000"
 4484 0bdf 01       		.byte	0x1
 4485 0be0 7D09     		.2byte	0x97d
 4486 0be2 77000000 		.4byte	0x77
 4487 0be6 02       		.uleb128 0x2
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 130


 4488 0be7 91       		.byte	0x91
 4489 0be8 66       		.sleb128 -26
 4490 0be9 19       		.uleb128 0x19
 4491 0bea 783200   		.ascii	"x2\000"
 4492 0bed 01       		.byte	0x1
 4493 0bee 7D09     		.2byte	0x97d
 4494 0bf0 77000000 		.4byte	0x77
 4495 0bf4 02       		.uleb128 0x2
 4496 0bf5 91       		.byte	0x91
 4497 0bf6 64       		.sleb128 -28
 4498 0bf7 19       		.uleb128 0x19
 4499 0bf8 783300   		.ascii	"x3\000"
 4500 0bfb 01       		.byte	0x1
 4501 0bfc 7D09     		.2byte	0x97d
 4502 0bfe 77000000 		.4byte	0x77
 4503 0c02 02       		.uleb128 0x2
 4504 0c03 91       		.byte	0x91
 4505 0c04 62       		.sleb128 -30
 4506 0c05 10       		.uleb128 0x10
 4507 0c06 746D7000 		.ascii	"tmp\000"
 4508 0c0a 01       		.byte	0x1
 4509 0c0b 7F09     		.2byte	0x97f
 4510 0c0d 83000000 		.4byte	0x83
 4511 0c11 02       		.uleb128 0x2
 4512 0c12 91       		.byte	0x91
 4513 0c13 6C       		.sleb128 -20
 4514 0c14 00       		.byte	0
 4515 0c15 14       		.uleb128 0x14
 4516 0c16 05060000 		.4byte	.LASF119
 4517 0c1a 01       		.byte	0x1
 4518 0c1b AD0A     		.2byte	0xaad
 4519 0c1d 83000000 		.4byte	0x83
 4520 0c21 00000000 		.4byte	.LFB69
 4521 0c25 1C000000 		.4byte	.LFE69-.LFB69
 4522 0c29 01       		.uleb128 0x1
 4523 0c2a 9C       		.byte	0x9c
 4524 0c2b 3F0C0000 		.4byte	0xc3f
 4525 0c2f 13       		.uleb128 0x13
 4526 0c30 52050000 		.4byte	.LASF51
 4527 0c34 01       		.byte	0x1
 4528 0c35 AD0A     		.2byte	0xaad
 4529 0c37 83000000 		.4byte	0x83
 4530 0c3b 02       		.uleb128 0x2
 4531 0c3c 91       		.byte	0x91
 4532 0c3d 74       		.sleb128 -12
 4533 0c3e 00       		.byte	0
 4534 0c3f 14       		.uleb128 0x14
 4535 0c40 4D070000 		.4byte	.LASF120
 4536 0c44 01       		.byte	0x1
 4537 0c45 C70A     		.2byte	0xac7
 4538 0c47 6B000000 		.4byte	0x6b
 4539 0c4b 00000000 		.4byte	.LFB70
 4540 0c4f 1C000000 		.4byte	.LFE70-.LFB70
 4541 0c53 01       		.uleb128 0x1
 4542 0c54 9C       		.byte	0x9c
 4543 0c55 690C0000 		.4byte	0xc69
 4544 0c59 13       		.uleb128 0x13
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 131


 4545 0c5a 52050000 		.4byte	.LASF51
 4546 0c5e 01       		.byte	0x1
 4547 0c5f C70A     		.2byte	0xac7
 4548 0c61 83000000 		.4byte	0x83
 4549 0c65 02       		.uleb128 0x2
 4550 0c66 91       		.byte	0x91
 4551 0c67 74       		.sleb128 -12
 4552 0c68 00       		.byte	0
 4553 0c69 14       		.uleb128 0x14
 4554 0c6a D50A0000 		.4byte	.LASF121
 4555 0c6e 01       		.byte	0x1
 4556 0c6f E10A     		.2byte	0xae1
 4557 0c71 6B000000 		.4byte	0x6b
 4558 0c75 00000000 		.4byte	.LFB71
 4559 0c79 1C000000 		.4byte	.LFE71-.LFB71
 4560 0c7d 01       		.uleb128 0x1
 4561 0c7e 9C       		.byte	0x9c
 4562 0c7f 930C0000 		.4byte	0xc93
 4563 0c83 13       		.uleb128 0x13
 4564 0c84 45030000 		.4byte	.LASF60
 4565 0c88 01       		.byte	0x1
 4566 0c89 E10A     		.2byte	0xae1
 4567 0c8b 83000000 		.4byte	0x83
 4568 0c8f 02       		.uleb128 0x2
 4569 0c90 91       		.byte	0x91
 4570 0c91 74       		.sleb128 -12
 4571 0c92 00       		.byte	0
 4572 0c93 1A       		.uleb128 0x1a
 4573 0c94 86080000 		.4byte	.LASF122
 4574 0c98 01       		.byte	0x1
 4575 0c99 FB0A     		.2byte	0xafb
 4576 0c9b 00000000 		.4byte	.LFB72
 4577 0c9f 14000000 		.4byte	.LFE72-.LFB72
 4578 0ca3 01       		.uleb128 0x1
 4579 0ca4 9C       		.byte	0x9c
 4580 0ca5 1A       		.uleb128 0x1a
 4581 0ca6 C8030000 		.4byte	.LASF123
 4582 0caa 01       		.byte	0x1
 4583 0cab 140B     		.2byte	0xb14
 4584 0cad 00000000 		.4byte	.LFB73
 4585 0cb1 14000000 		.4byte	.LFE73-.LFB73
 4586 0cb5 01       		.uleb128 0x1
 4587 0cb6 9C       		.byte	0x9c
 4588 0cb7 17       		.uleb128 0x17
 4589 0cb8 77000000 		.4byte	0x77
 4590 0cbc C70C0000 		.4byte	0xcc7
 4591 0cc0 18       		.uleb128 0x18
 4592 0cc1 BC000000 		.4byte	0xbc
 4593 0cc5 00       		.byte	0
 4594 0cc6 00       		.byte	0
 4595 0cc7 1B       		.uleb128 0x1b
 4596 0cc8 040A0000 		.4byte	.LASF124
 4597 0ccc 01       		.byte	0x1
 4598 0ccd 5D       		.byte	0x5d
 4599 0cce D80C0000 		.4byte	0xcd8
 4600 0cd2 05       		.uleb128 0x5
 4601 0cd3 03       		.byte	0x3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 132


 4602 0cd4 08000000 		.4byte	CapSense_centroidMult
 4603 0cd8 08       		.uleb128 0x8
 4604 0cd9 B70C0000 		.4byte	0xcb7
 4605 0cdd 1B       		.uleb128 0x1b
 4606 0cde 4C030000 		.4byte	.LASF125
 4607 0ce2 01       		.byte	0x1
 4608 0ce3 61       		.byte	0x61
 4609 0ce4 DB070000 		.4byte	0x7db
 4610 0ce8 05       		.uleb128 0x5
 4611 0ce9 03       		.byte	0x3
 4612 0cea 0C000000 		.4byte	CapSense_posFiltersMask
 4613 0cee 17       		.uleb128 0x17
 4614 0cef 6B000000 		.4byte	0x6b
 4615 0cf3 FE0C0000 		.4byte	0xcfe
 4616 0cf7 18       		.uleb128 0x18
 4617 0cf8 BC000000 		.4byte	0xbc
 4618 0cfc 03       		.byte	0x3
 4619 0cfd 00       		.byte	0
 4620 0cfe 1B       		.uleb128 0x1b
 4621 0cff 71010000 		.4byte	.LASF126
 4622 0d03 01       		.byte	0x1
 4623 0d04 65       		.byte	0x65
 4624 0d05 EE0C0000 		.4byte	0xcee
 4625 0d09 05       		.uleb128 0x5
 4626 0d0a 03       		.byte	0x3
 4627 0d0b 10000000 		.4byte	CapSense_posFiltersData
 4628 0d0f 17       		.uleb128 0x17
 4629 0d10 77000000 		.4byte	0x77
 4630 0d14 1F0D0000 		.4byte	0xd1f
 4631 0d18 18       		.uleb128 0x18
 4632 0d19 BC000000 		.4byte	0xbc
 4633 0d1d 04       		.byte	0x4
 4634 0d1e 00       		.byte	0
 4635 0d1f 1C       		.uleb128 0x1c
 4636 0d20 3A070000 		.4byte	.LASF127
 4637 0d24 01       		.byte	0x1
 4638 0d25 2C       		.byte	0x2c
 4639 0d26 0F0D0000 		.4byte	0xd0f
 4640 0d2a 1C       		.uleb128 0x1c
 4641 0d2b 2B030000 		.4byte	.LASF128
 4642 0d2f 01       		.byte	0x1
 4643 0d30 2D       		.byte	0x2d
 4644 0d31 DB070000 		.4byte	0x7db
 4645 0d35 17       		.uleb128 0x17
 4646 0d36 6B000000 		.4byte	0x6b
 4647 0d3a 450D0000 		.4byte	0xd45
 4648 0d3e 18       		.uleb128 0x18
 4649 0d3f BC000000 		.4byte	0xbc
 4650 0d43 04       		.byte	0x4
 4651 0d44 00       		.byte	0
 4652 0d45 1C       		.uleb128 0x1c
 4653 0d46 96030000 		.4byte	.LASF129
 4654 0d4a 01       		.byte	0x1
 4655 0d4b 2E       		.byte	0x2e
 4656 0d4c 500D0000 		.4byte	0xd50
 4657 0d50 08       		.uleb128 0x8
 4658 0d51 350D0000 		.4byte	0xd35
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 133


 4659 0d55 1D       		.uleb128 0x1d
 4660 0d56 D4080000 		.4byte	.LASF130
 4661 0d5a 01       		.byte	0x1
 4662 0d5b 34       		.byte	0x34
 4663 0d5c 0F0D0000 		.4byte	0xd0f
 4664 0d60 05       		.uleb128 0x5
 4665 0d61 03       		.byte	0x3
 4666 0d62 00000000 		.4byte	CapSense_sensorBaseline
 4667 0d66 1D       		.uleb128 0x1d
 4668 0d67 00000000 		.4byte	.LASF131
 4669 0d6b 01       		.byte	0x1
 4670 0d6c 35       		.byte	0x35
 4671 0d6d 350D0000 		.4byte	0xd35
 4672 0d71 05       		.uleb128 0x5
 4673 0d72 03       		.byte	0x3
 4674 0d73 00000000 		.4byte	CapSense_sensorBaselineLow
 4675 0d77 1D       		.uleb128 0x1d
 4676 0d78 3B020000 		.4byte	.LASF132
 4677 0d7c 01       		.byte	0x1
 4678 0d7d 36       		.byte	0x36
 4679 0d7e 350D0000 		.4byte	0xd35
 4680 0d82 05       		.uleb128 0x5
 4681 0d83 03       		.byte	0x3
 4682 0d84 00000000 		.4byte	CapSense_sensorSignal
 4683 0d88 1D       		.uleb128 0x1d
 4684 0d89 740B0000 		.4byte	.LASF133
 4685 0d8d 01       		.byte	0x1
 4686 0d8e 37       		.byte	0x37
 4687 0d8f DB070000 		.4byte	0x7db
 4688 0d93 05       		.uleb128 0x5
 4689 0d94 03       		.byte	0x3
 4690 0d95 00000000 		.4byte	CapSense_sensorOnMask
 4691 0d99 1D       		.uleb128 0x1d
 4692 0d9a 41000000 		.4byte	.LASF134
 4693 0d9e 01       		.byte	0x1
 4694 0d9f 39       		.byte	0x39
 4695 0da0 350D0000 		.4byte	0xd35
 4696 0da4 05       		.uleb128 0x5
 4697 0da5 03       		.byte	0x3
 4698 0da6 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4699 0daa 1D       		.uleb128 0x1d
 4700 0dab A4080000 		.4byte	.LASF135
 4701 0daf 01       		.byte	0x1
 4702 0db0 3A       		.byte	0x3a
 4703 0db1 350D0000 		.4byte	0xd35
 4704 0db5 05       		.uleb128 0x5
 4705 0db6 03       		.byte	0x3
 4706 0db7 00000000 		.4byte	CapSense_lowBaselineReset
 4707 0dbb 1D       		.uleb128 0x1d
 4708 0dbc 64030000 		.4byte	.LASF136
 4709 0dc0 01       		.byte	0x1
 4710 0dc1 49       		.byte	0x49
 4711 0dc2 DB070000 		.4byte	0x7db
 4712 0dc6 05       		.uleb128 0x5
 4713 0dc7 03       		.byte	0x3
 4714 0dc8 00000000 		.4byte	CapSense_fingerThreshold
 4715 0dcc 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 134


 4716 0dcd 79090000 		.4byte	.LASF137
 4717 0dd1 01       		.byte	0x1
 4718 0dd2 4B       		.byte	0x4b
 4719 0dd3 DB070000 		.4byte	0x7db
 4720 0dd7 05       		.uleb128 0x5
 4721 0dd8 03       		.byte	0x3
 4722 0dd9 00000000 		.4byte	CapSense_noiseThreshold
 4723 0ddd 1D       		.uleb128 0x1d
 4724 0dde 20050000 		.4byte	.LASF138
 4725 0de2 01       		.byte	0x1
 4726 0de3 4D       		.byte	0x4d
 4727 0de4 DB070000 		.4byte	0x7db
 4728 0de8 05       		.uleb128 0x5
 4729 0de9 03       		.byte	0x3
 4730 0dea 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4731 0dee 1D       		.uleb128 0x1d
 4732 0def A0020000 		.4byte	.LASF139
 4733 0df3 01       		.byte	0x1
 4734 0df4 4F       		.byte	0x4f
 4735 0df5 DB070000 		.4byte	0x7db
 4736 0df9 05       		.uleb128 0x5
 4737 0dfa 03       		.byte	0x3
 4738 0dfb 00000000 		.4byte	CapSense_hysteresis
 4739 0dff 1D       		.uleb128 0x1d
 4740 0e00 99010000 		.4byte	.LASF140
 4741 0e04 01       		.byte	0x1
 4742 0e05 51       		.byte	0x51
 4743 0e06 DB070000 		.4byte	0x7db
 4744 0e0a 05       		.uleb128 0x5
 4745 0e0b 03       		.byte	0x3
 4746 0e0c 00000000 		.4byte	CapSense_debounce
 4747 0e10 1D       		.uleb128 0x1d
 4748 0e11 51020000 		.4byte	.LASF141
 4749 0e15 01       		.byte	0x1
 4750 0e16 55       		.byte	0x55
 4751 0e17 210E0000 		.4byte	0xe21
 4752 0e1b 05       		.uleb128 0x5
 4753 0e1c 03       		.byte	0x3
 4754 0e1d 00000000 		.4byte	CapSense_rawDataIndex
 4755 0e21 08       		.uleb128 0x8
 4756 0e22 DB070000 		.4byte	0x7db
 4757 0e26 1D       		.uleb128 0x1d
 4758 0e27 07050000 		.4byte	.LASF142
 4759 0e2b 01       		.byte	0x1
 4760 0e2c 59       		.byte	0x59
 4761 0e2d 370E0000 		.4byte	0xe37
 4762 0e31 05       		.uleb128 0x5
 4763 0e32 03       		.byte	0x3
 4764 0e33 00000000 		.4byte	CapSense_numberOfSensors
 4765 0e37 08       		.uleb128 0x8
 4766 0e38 DB070000 		.4byte	0x7db
 4767 0e3c 1D       		.uleb128 0x1d
 4768 0e3d 3B0B0000 		.4byte	.LASF143
 4769 0e41 01       		.byte	0x1
 4770 0e42 1E       		.byte	0x1e
 4771 0e43 0F0D0000 		.4byte	0xd0f
 4772 0e47 05       		.uleb128 0x5
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 135


 4773 0e48 03       		.byte	0x3
 4774 0e49 00000000 		.4byte	CapSense_rawFilterData1
 4775 0e4d 1D       		.uleb128 0x1d
 4776 0e4e 530B0000 		.4byte	.LASF144
 4777 0e52 01       		.byte	0x1
 4778 0e53 1F       		.byte	0x1f
 4779 0e54 0F0D0000 		.4byte	0xd0f
 4780 0e58 05       		.uleb128 0x5
 4781 0e59 03       		.byte	0x3
 4782 0e5a 00000000 		.4byte	CapSense_rawFilterData2
 4783 0e5e 1C       		.uleb128 0x1c
 4784 0e5f E8000000 		.4byte	.LASF145
 4785 0e63 01       		.byte	0x1
 4786 0e64 41       		.byte	0x41
 4787 0e65 BF020000 		.4byte	0x2bf
 4788 0e69 1D       		.uleb128 0x1d
 4789 0e6a 470A0000 		.4byte	.LASF146
 4790 0e6e 01       		.byte	0x1
 4791 0e6f 45       		.byte	0x45
 4792 0e70 6B000000 		.4byte	0x6b
 4793 0e74 05       		.uleb128 0x5
 4794 0e75 03       		.byte	0x3
 4795 0e76 00000000 		.4byte	CapSense_enableRawFilters
 4796 0e7a 00       		.byte	0
 4797              		.section	.debug_abbrev,"",%progbits
 4798              	.Ldebug_abbrev0:
 4799 0000 01       		.uleb128 0x1
 4800 0001 11       		.uleb128 0x11
 4801 0002 01       		.byte	0x1
 4802 0003 25       		.uleb128 0x25
 4803 0004 0E       		.uleb128 0xe
 4804 0005 13       		.uleb128 0x13
 4805 0006 0B       		.uleb128 0xb
 4806 0007 03       		.uleb128 0x3
 4807 0008 0E       		.uleb128 0xe
 4808 0009 1B       		.uleb128 0x1b
 4809 000a 0E       		.uleb128 0xe
 4810 000b 55       		.uleb128 0x55
 4811 000c 17       		.uleb128 0x17
 4812 000d 11       		.uleb128 0x11
 4813 000e 01       		.uleb128 0x1
 4814 000f 10       		.uleb128 0x10
 4815 0010 17       		.uleb128 0x17
 4816 0011 00       		.byte	0
 4817 0012 00       		.byte	0
 4818 0013 02       		.uleb128 0x2
 4819 0014 24       		.uleb128 0x24
 4820 0015 00       		.byte	0
 4821 0016 0B       		.uleb128 0xb
 4822 0017 0B       		.uleb128 0xb
 4823 0018 3E       		.uleb128 0x3e
 4824 0019 0B       		.uleb128 0xb
 4825 001a 03       		.uleb128 0x3
 4826 001b 0E       		.uleb128 0xe
 4827 001c 00       		.byte	0
 4828 001d 00       		.byte	0
 4829 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 136


 4830 001f 24       		.uleb128 0x24
 4831 0020 00       		.byte	0
 4832 0021 0B       		.uleb128 0xb
 4833 0022 0B       		.uleb128 0xb
 4834 0023 3E       		.uleb128 0x3e
 4835 0024 0B       		.uleb128 0xb
 4836 0025 03       		.uleb128 0x3
 4837 0026 08       		.uleb128 0x8
 4838 0027 00       		.byte	0
 4839 0028 00       		.byte	0
 4840 0029 04       		.uleb128 0x4
 4841 002a 16       		.uleb128 0x16
 4842 002b 00       		.byte	0
 4843 002c 03       		.uleb128 0x3
 4844 002d 0E       		.uleb128 0xe
 4845 002e 3A       		.uleb128 0x3a
 4846 002f 0B       		.uleb128 0xb
 4847 0030 3B       		.uleb128 0x3b
 4848 0031 05       		.uleb128 0x5
 4849 0032 49       		.uleb128 0x49
 4850 0033 13       		.uleb128 0x13
 4851 0034 00       		.byte	0
 4852 0035 00       		.byte	0
 4853 0036 05       		.uleb128 0x5
 4854 0037 13       		.uleb128 0x13
 4855 0038 01       		.byte	0x1
 4856 0039 0B       		.uleb128 0xb
 4857 003a 0B       		.uleb128 0xb
 4858 003b 3A       		.uleb128 0x3a
 4859 003c 0B       		.uleb128 0xb
 4860 003d 3B       		.uleb128 0x3b
 4861 003e 0B       		.uleb128 0xb
 4862 003f 01       		.uleb128 0x1
 4863 0040 13       		.uleb128 0x13
 4864 0041 00       		.byte	0
 4865 0042 00       		.byte	0
 4866 0043 06       		.uleb128 0x6
 4867 0044 0D       		.uleb128 0xd
 4868 0045 00       		.byte	0
 4869 0046 03       		.uleb128 0x3
 4870 0047 0E       		.uleb128 0xe
 4871 0048 3A       		.uleb128 0x3a
 4872 0049 0B       		.uleb128 0xb
 4873 004a 3B       		.uleb128 0x3b
 4874 004b 0B       		.uleb128 0xb
 4875 004c 49       		.uleb128 0x49
 4876 004d 13       		.uleb128 0x13
 4877 004e 38       		.uleb128 0x38
 4878 004f 0B       		.uleb128 0xb
 4879 0050 00       		.byte	0
 4880 0051 00       		.byte	0
 4881 0052 07       		.uleb128 0x7
 4882 0053 0F       		.uleb128 0xf
 4883 0054 00       		.byte	0
 4884 0055 0B       		.uleb128 0xb
 4885 0056 0B       		.uleb128 0xb
 4886 0057 49       		.uleb128 0x49
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 137


 4887 0058 13       		.uleb128 0x13
 4888 0059 00       		.byte	0
 4889 005a 00       		.byte	0
 4890 005b 08       		.uleb128 0x8
 4891 005c 26       		.uleb128 0x26
 4892 005d 00       		.byte	0
 4893 005e 49       		.uleb128 0x49
 4894 005f 13       		.uleb128 0x13
 4895 0060 00       		.byte	0
 4896 0061 00       		.byte	0
 4897 0062 09       		.uleb128 0x9
 4898 0063 15       		.uleb128 0x15
 4899 0064 01       		.byte	0x1
 4900 0065 27       		.uleb128 0x27
 4901 0066 19       		.uleb128 0x19
 4902 0067 49       		.uleb128 0x49
 4903 0068 13       		.uleb128 0x13
 4904 0069 01       		.uleb128 0x1
 4905 006a 13       		.uleb128 0x13
 4906 006b 00       		.byte	0
 4907 006c 00       		.byte	0
 4908 006d 0A       		.uleb128 0xa
 4909 006e 05       		.uleb128 0x5
 4910 006f 00       		.byte	0
 4911 0070 49       		.uleb128 0x49
 4912 0071 13       		.uleb128 0x13
 4913 0072 00       		.byte	0
 4914 0073 00       		.byte	0
 4915 0074 0B       		.uleb128 0xb
 4916 0075 15       		.uleb128 0x15
 4917 0076 01       		.byte	0x1
 4918 0077 27       		.uleb128 0x27
 4919 0078 19       		.uleb128 0x19
 4920 0079 01       		.uleb128 0x1
 4921 007a 13       		.uleb128 0x13
 4922 007b 00       		.byte	0
 4923 007c 00       		.byte	0
 4924 007d 0C       		.uleb128 0xc
 4925 007e 16       		.uleb128 0x16
 4926 007f 00       		.byte	0
 4927 0080 03       		.uleb128 0x3
 4928 0081 0E       		.uleb128 0xe
 4929 0082 3A       		.uleb128 0x3a
 4930 0083 0B       		.uleb128 0xb
 4931 0084 3B       		.uleb128 0x3b
 4932 0085 0B       		.uleb128 0xb
 4933 0086 49       		.uleb128 0x49
 4934 0087 13       		.uleb128 0x13
 4935 0088 00       		.byte	0
 4936 0089 00       		.byte	0
 4937 008a 0D       		.uleb128 0xd
 4938 008b 2E       		.uleb128 0x2e
 4939 008c 01       		.byte	0x1
 4940 008d 3F       		.uleb128 0x3f
 4941 008e 19       		.uleb128 0x19
 4942 008f 03       		.uleb128 0x3
 4943 0090 0E       		.uleb128 0xe
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 138


 4944 0091 3A       		.uleb128 0x3a
 4945 0092 0B       		.uleb128 0xb
 4946 0093 3B       		.uleb128 0x3b
 4947 0094 0B       		.uleb128 0xb
 4948 0095 27       		.uleb128 0x27
 4949 0096 19       		.uleb128 0x19
 4950 0097 11       		.uleb128 0x11
 4951 0098 01       		.uleb128 0x1
 4952 0099 12       		.uleb128 0x12
 4953 009a 06       		.uleb128 0x6
 4954 009b 40       		.uleb128 0x40
 4955 009c 18       		.uleb128 0x18
 4956 009d 9742     		.uleb128 0x2117
 4957 009f 19       		.uleb128 0x19
 4958 00a0 01       		.uleb128 0x1
 4959 00a1 13       		.uleb128 0x13
 4960 00a2 00       		.byte	0
 4961 00a3 00       		.byte	0
 4962 00a4 0E       		.uleb128 0xe
 4963 00a5 05       		.uleb128 0x5
 4964 00a6 00       		.byte	0
 4965 00a7 03       		.uleb128 0x3
 4966 00a8 0E       		.uleb128 0xe
 4967 00a9 3A       		.uleb128 0x3a
 4968 00aa 0B       		.uleb128 0xb
 4969 00ab 3B       		.uleb128 0x3b
 4970 00ac 0B       		.uleb128 0xb
 4971 00ad 49       		.uleb128 0x49
 4972 00ae 13       		.uleb128 0x13
 4973 00af 02       		.uleb128 0x2
 4974 00b0 18       		.uleb128 0x18
 4975 00b1 00       		.byte	0
 4976 00b2 00       		.byte	0
 4977 00b3 0F       		.uleb128 0xf
 4978 00b4 2E       		.uleb128 0x2e
 4979 00b5 01       		.byte	0x1
 4980 00b6 3F       		.uleb128 0x3f
 4981 00b7 19       		.uleb128 0x19
 4982 00b8 03       		.uleb128 0x3
 4983 00b9 0E       		.uleb128 0xe
 4984 00ba 3A       		.uleb128 0x3a
 4985 00bb 0B       		.uleb128 0xb
 4986 00bc 3B       		.uleb128 0x3b
 4987 00bd 0B       		.uleb128 0xb
 4988 00be 27       		.uleb128 0x27
 4989 00bf 19       		.uleb128 0x19
 4990 00c0 11       		.uleb128 0x11
 4991 00c1 01       		.uleb128 0x1
 4992 00c2 12       		.uleb128 0x12
 4993 00c3 06       		.uleb128 0x6
 4994 00c4 40       		.uleb128 0x40
 4995 00c5 18       		.uleb128 0x18
 4996 00c6 9642     		.uleb128 0x2116
 4997 00c8 19       		.uleb128 0x19
 4998 00c9 01       		.uleb128 0x1
 4999 00ca 13       		.uleb128 0x13
 5000 00cb 00       		.byte	0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 139


 5001 00cc 00       		.byte	0
 5002 00cd 10       		.uleb128 0x10
 5003 00ce 34       		.uleb128 0x34
 5004 00cf 00       		.byte	0
 5005 00d0 03       		.uleb128 0x3
 5006 00d1 08       		.uleb128 0x8
 5007 00d2 3A       		.uleb128 0x3a
 5008 00d3 0B       		.uleb128 0xb
 5009 00d4 3B       		.uleb128 0x3b
 5010 00d5 05       		.uleb128 0x5
 5011 00d6 49       		.uleb128 0x49
 5012 00d7 13       		.uleb128 0x13
 5013 00d8 02       		.uleb128 0x2
 5014 00d9 18       		.uleb128 0x18
 5015 00da 00       		.byte	0
 5016 00db 00       		.byte	0
 5017 00dc 11       		.uleb128 0x11
 5018 00dd 2E       		.uleb128 0x2e
 5019 00de 01       		.byte	0x1
 5020 00df 3F       		.uleb128 0x3f
 5021 00e0 19       		.uleb128 0x19
 5022 00e1 03       		.uleb128 0x3
 5023 00e2 0E       		.uleb128 0xe
 5024 00e3 3A       		.uleb128 0x3a
 5025 00e4 0B       		.uleb128 0xb
 5026 00e5 3B       		.uleb128 0x3b
 5027 00e6 05       		.uleb128 0x5
 5028 00e7 27       		.uleb128 0x27
 5029 00e8 19       		.uleb128 0x19
 5030 00e9 11       		.uleb128 0x11
 5031 00ea 01       		.uleb128 0x1
 5032 00eb 12       		.uleb128 0x12
 5033 00ec 06       		.uleb128 0x6
 5034 00ed 40       		.uleb128 0x40
 5035 00ee 18       		.uleb128 0x18
 5036 00ef 9642     		.uleb128 0x2116
 5037 00f1 19       		.uleb128 0x19
 5038 00f2 01       		.uleb128 0x1
 5039 00f3 13       		.uleb128 0x13
 5040 00f4 00       		.byte	0
 5041 00f5 00       		.byte	0
 5042 00f6 12       		.uleb128 0x12
 5043 00f7 34       		.uleb128 0x34
 5044 00f8 00       		.byte	0
 5045 00f9 03       		.uleb128 0x3
 5046 00fa 0E       		.uleb128 0xe
 5047 00fb 3A       		.uleb128 0x3a
 5048 00fc 0B       		.uleb128 0xb
 5049 00fd 3B       		.uleb128 0x3b
 5050 00fe 05       		.uleb128 0x5
 5051 00ff 49       		.uleb128 0x49
 5052 0100 13       		.uleb128 0x13
 5053 0101 02       		.uleb128 0x2
 5054 0102 18       		.uleb128 0x18
 5055 0103 00       		.byte	0
 5056 0104 00       		.byte	0
 5057 0105 13       		.uleb128 0x13
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 140


 5058 0106 05       		.uleb128 0x5
 5059 0107 00       		.byte	0
 5060 0108 03       		.uleb128 0x3
 5061 0109 0E       		.uleb128 0xe
 5062 010a 3A       		.uleb128 0x3a
 5063 010b 0B       		.uleb128 0xb
 5064 010c 3B       		.uleb128 0x3b
 5065 010d 05       		.uleb128 0x5
 5066 010e 49       		.uleb128 0x49
 5067 010f 13       		.uleb128 0x13
 5068 0110 02       		.uleb128 0x2
 5069 0111 18       		.uleb128 0x18
 5070 0112 00       		.byte	0
 5071 0113 00       		.byte	0
 5072 0114 14       		.uleb128 0x14
 5073 0115 2E       		.uleb128 0x2e
 5074 0116 01       		.byte	0x1
 5075 0117 3F       		.uleb128 0x3f
 5076 0118 19       		.uleb128 0x19
 5077 0119 03       		.uleb128 0x3
 5078 011a 0E       		.uleb128 0xe
 5079 011b 3A       		.uleb128 0x3a
 5080 011c 0B       		.uleb128 0xb
 5081 011d 3B       		.uleb128 0x3b
 5082 011e 05       		.uleb128 0x5
 5083 011f 27       		.uleb128 0x27
 5084 0120 19       		.uleb128 0x19
 5085 0121 49       		.uleb128 0x49
 5086 0122 13       		.uleb128 0x13
 5087 0123 11       		.uleb128 0x11
 5088 0124 01       		.uleb128 0x1
 5089 0125 12       		.uleb128 0x12
 5090 0126 06       		.uleb128 0x6
 5091 0127 40       		.uleb128 0x40
 5092 0128 18       		.uleb128 0x18
 5093 0129 9742     		.uleb128 0x2117
 5094 012b 19       		.uleb128 0x19
 5095 012c 01       		.uleb128 0x1
 5096 012d 13       		.uleb128 0x13
 5097 012e 00       		.byte	0
 5098 012f 00       		.byte	0
 5099 0130 15       		.uleb128 0x15
 5100 0131 2E       		.uleb128 0x2e
 5101 0132 01       		.byte	0x1
 5102 0133 3F       		.uleb128 0x3f
 5103 0134 19       		.uleb128 0x19
 5104 0135 03       		.uleb128 0x3
 5105 0136 0E       		.uleb128 0xe
 5106 0137 3A       		.uleb128 0x3a
 5107 0138 0B       		.uleb128 0xb
 5108 0139 3B       		.uleb128 0x3b
 5109 013a 05       		.uleb128 0x5
 5110 013b 27       		.uleb128 0x27
 5111 013c 19       		.uleb128 0x19
 5112 013d 11       		.uleb128 0x11
 5113 013e 01       		.uleb128 0x1
 5114 013f 12       		.uleb128 0x12
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 141


 5115 0140 06       		.uleb128 0x6
 5116 0141 40       		.uleb128 0x40
 5117 0142 18       		.uleb128 0x18
 5118 0143 9742     		.uleb128 0x2117
 5119 0145 19       		.uleb128 0x19
 5120 0146 01       		.uleb128 0x1
 5121 0147 13       		.uleb128 0x13
 5122 0148 00       		.byte	0
 5123 0149 00       		.byte	0
 5124 014a 16       		.uleb128 0x16
 5125 014b 2E       		.uleb128 0x2e
 5126 014c 01       		.byte	0x1
 5127 014d 3F       		.uleb128 0x3f
 5128 014e 19       		.uleb128 0x19
 5129 014f 03       		.uleb128 0x3
 5130 0150 0E       		.uleb128 0xe
 5131 0151 3A       		.uleb128 0x3a
 5132 0152 0B       		.uleb128 0xb
 5133 0153 3B       		.uleb128 0x3b
 5134 0154 05       		.uleb128 0x5
 5135 0155 27       		.uleb128 0x27
 5136 0156 19       		.uleb128 0x19
 5137 0157 49       		.uleb128 0x49
 5138 0158 13       		.uleb128 0x13
 5139 0159 11       		.uleb128 0x11
 5140 015a 01       		.uleb128 0x1
 5141 015b 12       		.uleb128 0x12
 5142 015c 06       		.uleb128 0x6
 5143 015d 40       		.uleb128 0x40
 5144 015e 18       		.uleb128 0x18
 5145 015f 9642     		.uleb128 0x2116
 5146 0161 19       		.uleb128 0x19
 5147 0162 01       		.uleb128 0x1
 5148 0163 13       		.uleb128 0x13
 5149 0164 00       		.byte	0
 5150 0165 00       		.byte	0
 5151 0166 17       		.uleb128 0x17
 5152 0167 01       		.uleb128 0x1
 5153 0168 01       		.byte	0x1
 5154 0169 49       		.uleb128 0x49
 5155 016a 13       		.uleb128 0x13
 5156 016b 01       		.uleb128 0x1
 5157 016c 13       		.uleb128 0x13
 5158 016d 00       		.byte	0
 5159 016e 00       		.byte	0
 5160 016f 18       		.uleb128 0x18
 5161 0170 21       		.uleb128 0x21
 5162 0171 00       		.byte	0
 5163 0172 49       		.uleb128 0x49
 5164 0173 13       		.uleb128 0x13
 5165 0174 2F       		.uleb128 0x2f
 5166 0175 0B       		.uleb128 0xb
 5167 0176 00       		.byte	0
 5168 0177 00       		.byte	0
 5169 0178 19       		.uleb128 0x19
 5170 0179 05       		.uleb128 0x5
 5171 017a 00       		.byte	0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 142


 5172 017b 03       		.uleb128 0x3
 5173 017c 08       		.uleb128 0x8
 5174 017d 3A       		.uleb128 0x3a
 5175 017e 0B       		.uleb128 0xb
 5176 017f 3B       		.uleb128 0x3b
 5177 0180 05       		.uleb128 0x5
 5178 0181 49       		.uleb128 0x49
 5179 0182 13       		.uleb128 0x13
 5180 0183 02       		.uleb128 0x2
 5181 0184 18       		.uleb128 0x18
 5182 0185 00       		.byte	0
 5183 0186 00       		.byte	0
 5184 0187 1A       		.uleb128 0x1a
 5185 0188 2E       		.uleb128 0x2e
 5186 0189 00       		.byte	0
 5187 018a 3F       		.uleb128 0x3f
 5188 018b 19       		.uleb128 0x19
 5189 018c 03       		.uleb128 0x3
 5190 018d 0E       		.uleb128 0xe
 5191 018e 3A       		.uleb128 0x3a
 5192 018f 0B       		.uleb128 0xb
 5193 0190 3B       		.uleb128 0x3b
 5194 0191 05       		.uleb128 0x5
 5195 0192 27       		.uleb128 0x27
 5196 0193 19       		.uleb128 0x19
 5197 0194 11       		.uleb128 0x11
 5198 0195 01       		.uleb128 0x1
 5199 0196 12       		.uleb128 0x12
 5200 0197 06       		.uleb128 0x6
 5201 0198 40       		.uleb128 0x40
 5202 0199 18       		.uleb128 0x18
 5203 019a 9742     		.uleb128 0x2117
 5204 019c 19       		.uleb128 0x19
 5205 019d 00       		.byte	0
 5206 019e 00       		.byte	0
 5207 019f 1B       		.uleb128 0x1b
 5208 01a0 34       		.uleb128 0x34
 5209 01a1 00       		.byte	0
 5210 01a2 03       		.uleb128 0x3
 5211 01a3 0E       		.uleb128 0xe
 5212 01a4 3A       		.uleb128 0x3a
 5213 01a5 0B       		.uleb128 0xb
 5214 01a6 3B       		.uleb128 0x3b
 5215 01a7 0B       		.uleb128 0xb
 5216 01a8 49       		.uleb128 0x49
 5217 01a9 13       		.uleb128 0x13
 5218 01aa 02       		.uleb128 0x2
 5219 01ab 18       		.uleb128 0x18
 5220 01ac 00       		.byte	0
 5221 01ad 00       		.byte	0
 5222 01ae 1C       		.uleb128 0x1c
 5223 01af 34       		.uleb128 0x34
 5224 01b0 00       		.byte	0
 5225 01b1 03       		.uleb128 0x3
 5226 01b2 0E       		.uleb128 0xe
 5227 01b3 3A       		.uleb128 0x3a
 5228 01b4 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 143


 5229 01b5 3B       		.uleb128 0x3b
 5230 01b6 0B       		.uleb128 0xb
 5231 01b7 49       		.uleb128 0x49
 5232 01b8 13       		.uleb128 0x13
 5233 01b9 3F       		.uleb128 0x3f
 5234 01ba 19       		.uleb128 0x19
 5235 01bb 3C       		.uleb128 0x3c
 5236 01bc 19       		.uleb128 0x19
 5237 01bd 00       		.byte	0
 5238 01be 00       		.byte	0
 5239 01bf 1D       		.uleb128 0x1d
 5240 01c0 34       		.uleb128 0x34
 5241 01c1 00       		.byte	0
 5242 01c2 03       		.uleb128 0x3
 5243 01c3 0E       		.uleb128 0xe
 5244 01c4 3A       		.uleb128 0x3a
 5245 01c5 0B       		.uleb128 0xb
 5246 01c6 3B       		.uleb128 0x3b
 5247 01c7 0B       		.uleb128 0xb
 5248 01c8 49       		.uleb128 0x49
 5249 01c9 13       		.uleb128 0x13
 5250 01ca 3F       		.uleb128 0x3f
 5251 01cb 19       		.uleb128 0x19
 5252 01cc 02       		.uleb128 0x2
 5253 01cd 18       		.uleb128 0x18
 5254 01ce 00       		.byte	0
 5255 01cf 00       		.byte	0
 5256 01d0 00       		.byte	0
 5257              		.section	.debug_aranges,"",%progbits
 5258 0000 44010000 		.4byte	0x144
 5259 0004 0200     		.2byte	0x2
 5260 0006 00000000 		.4byte	.Ldebug_info0
 5261 000a 04       		.byte	0x4
 5262 000b 00       		.byte	0
 5263 000c 0000     		.2byte	0
 5264 000e 0000     		.2byte	0
 5265 0010 00000000 		.4byte	.LFB36
 5266 0014 6C000000 		.4byte	.LFE36-.LFB36
 5267 0018 00000000 		.4byte	.LFB37
 5268 001c 28000000 		.4byte	.LFE37-.LFB37
 5269 0020 00000000 		.4byte	.LFB38
 5270 0024 26000000 		.4byte	.LFE38-.LFB38
 5271 0028 00000000 		.4byte	.LFB39
 5272 002c 50000000 		.4byte	.LFE39-.LFB39
 5273 0030 00000000 		.4byte	.LFB40
 5274 0034 5C020000 		.4byte	.LFE40-.LFB40
 5275 0038 00000000 		.4byte	.LFB41
 5276 003c 1E000000 		.4byte	.LFE41-.LFB41
 5277 0040 00000000 		.4byte	.LFB42
 5278 0044 40000000 		.4byte	.LFE42-.LFB42
 5279 0048 00000000 		.4byte	.LFB43
 5280 004c 58000000 		.4byte	.LFE43-.LFB43
 5281 0050 00000000 		.4byte	.LFB44
 5282 0054 1C000000 		.4byte	.LFE44-.LFB44
 5283 0058 00000000 		.4byte	.LFB45
 5284 005c 24000000 		.4byte	.LFE45-.LFB45
 5285 0060 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 144


 5286 0064 1C000000 		.4byte	.LFE46-.LFB46
 5287 0068 00000000 		.4byte	.LFB47
 5288 006c 24000000 		.4byte	.LFE47-.LFB47
 5289 0070 00000000 		.4byte	.LFB48
 5290 0074 1C000000 		.4byte	.LFE48-.LFB48
 5291 0078 00000000 		.4byte	.LFB49
 5292 007c 1C000000 		.4byte	.LFE49-.LFB49
 5293 0080 00000000 		.4byte	.LFB50
 5294 0084 1C000000 		.4byte	.LFE50-.LFB50
 5295 0088 00000000 		.4byte	.LFB51
 5296 008c 1C000000 		.4byte	.LFE51-.LFB51
 5297 0090 00000000 		.4byte	.LFB52
 5298 0094 24000000 		.4byte	.LFE52-.LFB52
 5299 0098 00000000 		.4byte	.LFB53
 5300 009c 24000000 		.4byte	.LFE53-.LFB53
 5301 00a0 00000000 		.4byte	.LFB54
 5302 00a4 24000000 		.4byte	.LFE54-.LFB54
 5303 00a8 00000000 		.4byte	.LFB55
 5304 00ac 24000000 		.4byte	.LFE55-.LFB55
 5305 00b0 00000000 		.4byte	.LFB56
 5306 00b4 24000000 		.4byte	.LFE56-.LFB56
 5307 00b8 00000000 		.4byte	.LFB57
 5308 00bc 24000000 		.4byte	.LFE57-.LFB57
 5309 00c0 00000000 		.4byte	.LFB58
 5310 00c4 3C010000 		.4byte	.LFE58-.LFB58
 5311 00c8 00000000 		.4byte	.LFB59
 5312 00cc 42000000 		.4byte	.LFE59-.LFB59
 5313 00d0 00000000 		.4byte	.LFB60
 5314 00d4 36000000 		.4byte	.LFE60-.LFB60
 5315 00d8 00000000 		.4byte	.LFB61
 5316 00dc 5C000000 		.4byte	.LFE61-.LFB61
 5317 00e0 00000000 		.4byte	.LFB62
 5318 00e4 5C000000 		.4byte	.LFE62-.LFB62
 5319 00e8 00000000 		.4byte	.LFB63
 5320 00ec B8000000 		.4byte	.LFE63-.LFB63
 5321 00f0 00000000 		.4byte	.LFB64
 5322 00f4 A0010000 		.4byte	.LFE64-.LFB64
 5323 00f8 00000000 		.4byte	.LFB65
 5324 00fc B8010000 		.4byte	.LFE65-.LFB65
 5325 0100 00000000 		.4byte	.LFB66
 5326 0104 98000000 		.4byte	.LFE66-.LFB66
 5327 0108 00000000 		.4byte	.LFB67
 5328 010c 76000000 		.4byte	.LFE67-.LFB67
 5329 0110 00000000 		.4byte	.LFB68
 5330 0114 46000000 		.4byte	.LFE68-.LFB68
 5331 0118 00000000 		.4byte	.LFB69
 5332 011c 1C000000 		.4byte	.LFE69-.LFB69
 5333 0120 00000000 		.4byte	.LFB70
 5334 0124 1C000000 		.4byte	.LFE70-.LFB70
 5335 0128 00000000 		.4byte	.LFB71
 5336 012c 1C000000 		.4byte	.LFE71-.LFB71
 5337 0130 00000000 		.4byte	.LFB72
 5338 0134 14000000 		.4byte	.LFE72-.LFB72
 5339 0138 00000000 		.4byte	.LFB73
 5340 013c 14000000 		.4byte	.LFE73-.LFB73
 5341 0140 00000000 		.4byte	0
 5342 0144 00000000 		.4byte	0
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 145


 5343              		.section	.debug_ranges,"",%progbits
 5344              	.Ldebug_ranges0:
 5345 0000 00000000 		.4byte	.LFB36
 5346 0004 6C000000 		.4byte	.LFE36
 5347 0008 00000000 		.4byte	.LFB37
 5348 000c 28000000 		.4byte	.LFE37
 5349 0010 00000000 		.4byte	.LFB38
 5350 0014 26000000 		.4byte	.LFE38
 5351 0018 00000000 		.4byte	.LFB39
 5352 001c 50000000 		.4byte	.LFE39
 5353 0020 00000000 		.4byte	.LFB40
 5354 0024 5C020000 		.4byte	.LFE40
 5355 0028 00000000 		.4byte	.LFB41
 5356 002c 1E000000 		.4byte	.LFE41
 5357 0030 00000000 		.4byte	.LFB42
 5358 0034 40000000 		.4byte	.LFE42
 5359 0038 00000000 		.4byte	.LFB43
 5360 003c 58000000 		.4byte	.LFE43
 5361 0040 00000000 		.4byte	.LFB44
 5362 0044 1C000000 		.4byte	.LFE44
 5363 0048 00000000 		.4byte	.LFB45
 5364 004c 24000000 		.4byte	.LFE45
 5365 0050 00000000 		.4byte	.LFB46
 5366 0054 1C000000 		.4byte	.LFE46
 5367 0058 00000000 		.4byte	.LFB47
 5368 005c 24000000 		.4byte	.LFE47
 5369 0060 00000000 		.4byte	.LFB48
 5370 0064 1C000000 		.4byte	.LFE48
 5371 0068 00000000 		.4byte	.LFB49
 5372 006c 1C000000 		.4byte	.LFE49
 5373 0070 00000000 		.4byte	.LFB50
 5374 0074 1C000000 		.4byte	.LFE50
 5375 0078 00000000 		.4byte	.LFB51
 5376 007c 1C000000 		.4byte	.LFE51
 5377 0080 00000000 		.4byte	.LFB52
 5378 0084 24000000 		.4byte	.LFE52
 5379 0088 00000000 		.4byte	.LFB53
 5380 008c 24000000 		.4byte	.LFE53
 5381 0090 00000000 		.4byte	.LFB54
 5382 0094 24000000 		.4byte	.LFE54
 5383 0098 00000000 		.4byte	.LFB55
 5384 009c 24000000 		.4byte	.LFE55
 5385 00a0 00000000 		.4byte	.LFB56
 5386 00a4 24000000 		.4byte	.LFE56
 5387 00a8 00000000 		.4byte	.LFB57
 5388 00ac 24000000 		.4byte	.LFE57
 5389 00b0 00000000 		.4byte	.LFB58
 5390 00b4 3C010000 		.4byte	.LFE58
 5391 00b8 00000000 		.4byte	.LFB59
 5392 00bc 42000000 		.4byte	.LFE59
 5393 00c0 00000000 		.4byte	.LFB60
 5394 00c4 36000000 		.4byte	.LFE60
 5395 00c8 00000000 		.4byte	.LFB61
 5396 00cc 5C000000 		.4byte	.LFE61
 5397 00d0 00000000 		.4byte	.LFB62
 5398 00d4 5C000000 		.4byte	.LFE62
 5399 00d8 00000000 		.4byte	.LFB63
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 146


 5400 00dc B8000000 		.4byte	.LFE63
 5401 00e0 00000000 		.4byte	.LFB64
 5402 00e4 A0010000 		.4byte	.LFE64
 5403 00e8 00000000 		.4byte	.LFB65
 5404 00ec B8010000 		.4byte	.LFE65
 5405 00f0 00000000 		.4byte	.LFB66
 5406 00f4 98000000 		.4byte	.LFE66
 5407 00f8 00000000 		.4byte	.LFB67
 5408 00fc 76000000 		.4byte	.LFE67
 5409 0100 00000000 		.4byte	.LFB68
 5410 0104 46000000 		.4byte	.LFE68
 5411 0108 00000000 		.4byte	.LFB69
 5412 010c 1C000000 		.4byte	.LFE69
 5413 0110 00000000 		.4byte	.LFB70
 5414 0114 1C000000 		.4byte	.LFE70
 5415 0118 00000000 		.4byte	.LFB71
 5416 011c 1C000000 		.4byte	.LFE71
 5417 0120 00000000 		.4byte	.LFB72
 5418 0124 14000000 		.4byte	.LFE72
 5419 0128 00000000 		.4byte	.LFB73
 5420 012c 14000000 		.4byte	.LFE73
 5421 0130 00000000 		.4byte	0
 5422 0134 00000000 		.4byte	0
 5423              		.section	.debug_line,"",%progbits
 5424              	.Ldebug_line0:
 5425 0000 A9040000 		.section	.debug_str,"MS",%progbits,1
 5425      02005C00 
 5425      00000201 
 5425      FB0E0D00 
 5425      01010101 
 5426              	.LASF131:
 5427 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 5427      656E7365 
 5427      5F73656E 
 5427      736F7242 
 5427      6173656C 
 5428              	.LASF89:
 5429 001b 43617053 		.ascii	"CapSense_debounceCounter\000"
 5429      656E7365 
 5429      5F646562 
 5429      6F756E63 
 5429      65436F75 
 5430              	.LASF32:
 5431 0034 7363616E 		.ascii	"scanSpeedTbl\000"
 5431      53706565 
 5431      6454626C 
 5431      00
 5432              	.LASF134:
 5433 0041 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 5433      656E7365 
 5433      5F6C6F77 
 5433      42617365 
 5433      6C696E65 
 5434              	.LASF55:
 5435 005e 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 5435      656E7365 
 5435      5F557064 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 147


 5435      61746542 
 5435      6173656C 
 5436              	.LASF35:
 5437 0081 6E756D62 		.ascii	"numberOfSensors\000"
 5437      65724F66 
 5437      53656E73 
 5437      6F727300 
 5438              	.LASF39:
 5439 0091 70747247 		.ascii	"ptrGetBitValue\000"
 5439      65744269 
 5439      7456616C 
 5439      756500
 5440              	.LASF96:
 5441 00a0 43617053 		.ascii	"CapSense_DisableWidget\000"
 5441      656E7365 
 5441      5F446973 
 5441      61626C65 
 5441      57696467 
 5442              	.LASF115:
 5443 00b7 74656D70 		.ascii	"tempPos\000"
 5443      506F7300 
 5444              	.LASF63:
 5445 00bf 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 5445      656E7365 
 5445      5F557064 
 5445      61746545 
 5445      6E61626C 
 5446              	.LASF112:
 5447 00df 706F7349 		.ascii	"posIndex\000"
 5447      6E646578 
 5447      00
 5448              	.LASF145:
 5449 00e8 43617053 		.ascii	"CapSense_config\000"
 5449      656E7365 
 5449      5F636F6E 
 5449      66696700 
 5450              	.LASF54:
 5451 00f8 69735365 		.ascii	"isSensorEnabled\000"
 5451      6E736F72 
 5451      456E6162 
 5451      6C656400 
 5452              	.LASF92:
 5453 0108 6E756D4F 		.ascii	"numOfSensors\000"
 5453      6653656E 
 5453      736F7273 
 5453      00
 5454              	.LASF8:
 5455 0115 756E7369 		.ascii	"unsigned int\000"
 5455      676E6564 
 5455      20696E74 
 5455      00
 5456              	.LASF44:
 5457 0122 746F7461 		.ascii	"totalSensorsNum\000"
 5457      6C53656E 
 5457      736F7273 
 5457      4E756D00 
 5458              	.LASF106:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 148


 5459 0132 706F734E 		.ascii	"posNext\000"
 5459      65787400 
 5460              	.LASF12:
 5461 013a 696E7431 		.ascii	"int16\000"
 5461      3600
 5462              	.LASF29:
 5463 0140 73616D70 		.ascii	"sampleMaxTbl\000"
 5463      6C654D61 
 5463      7854626C 
 5463      00
 5464              	.LASF53:
 5465 014d 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 5465      656E7365 
 5465      5F496E69 
 5465      7469616C 
 5465      697A6545 
 5466              	.LASF126:
 5467 0171 43617053 		.ascii	"CapSense_posFiltersData\000"
 5467      656E7365 
 5467      5F706F73 
 5467      46696C74 
 5467      65727344 
 5468              	.LASF27:
 5469 0189 7369676E 		.ascii	"signRegisterTbl\000"
 5469      52656769 
 5469      73746572 
 5469      54626C00 
 5470              	.LASF140:
 5471 0199 43617053 		.ascii	"CapSense_debounce\000"
 5471      656E7365 
 5471      5F646562 
 5471      6F756E63 
 5471      6500
 5472              	.LASF50:
 5473 01ab 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 5473      656E7365 
 5473      5F496E69 
 5473      7469616C 
 5473      697A6553 
 5474              	.LASF48:
 5475 01cd 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_40\000"
 5475      656E7365 
 5475      5F434F4E 
 5475      4649475F 
 5475      54595045 
 5476              	.LASF68:
 5477 01eb 43617053 		.ascii	"CapSense_SetBaselineData\000"
 5477      656E7365 
 5477      5F536574 
 5477      42617365 
 5477      6C696E65 
 5478              	.LASF34:
 5479 0204 72617744 		.ascii	"rawDataIndex\000"
 5479      61746149 
 5479      6E646578 
 5479      00
 5480              	.LASF43:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 149


 5481 0211 746F7461 		.ascii	"totalWidgetsNum\000"
 5481      6C576964 
 5481      67657473 
 5481      4E756D00 
 5482              	.LASF72:
 5483 0221 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 5483      656E7365 
 5483      5F536574 
 5483      44696666 
 5483      436F756E 
 5484              	.LASF132:
 5485 023b 43617053 		.ascii	"CapSense_sensorSignal\000"
 5485      656E7365 
 5485      5F73656E 
 5485      736F7253 
 5485      69676E61 
 5486              	.LASF141:
 5487 0251 43617053 		.ascii	"CapSense_rawDataIndex\000"
 5487      656E7365 
 5487      5F726177 
 5487      44617461 
 5487      496E6465 
 5488              	.LASF79:
 5489 0267 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 5489      656E7365 
 5489      5F536574 
 5489      4E6F6973 
 5489      65546872 
 5490              	.LASF64:
 5491 0282 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 5491      656E7365 
 5491      5F557064 
 5491      61746557 
 5491      69646765 
 5492              	.LASF139:
 5493 02a0 43617053 		.ascii	"CapSense_hysteresis\000"
 5493      656E7365 
 5493      5F687973 
 5493      74657265 
 5493      73697300 
 5494              	.LASF14:
 5495 02b4 666C6F61 		.ascii	"float\000"
 5495      7400
 5496              	.LASF13:
 5497 02ba 696E7433 		.ascii	"int32\000"
 5497      3200
 5498              	.LASF99:
 5499 02c0 636F756E 		.ascii	"count\000"
 5499      7400
 5500              	.LASF24:
 5501 02c6 7265736F 		.ascii	"resolutionsTbl\000"
 5501      6C757469 
 5501      6F6E7354 
 5501      626C00
 5502              	.LASF114:
 5503 02d5 706F7346 		.ascii	"posFiltersMask\000"
 5503      696C7465 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 150


 5503      72734D61 
 5503      736B00
 5504              	.LASF75:
 5505 02e4 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 5505      656E7365 
 5505      5F476574 
 5505      4E6F6973 
 5505      65546872 
 5506              	.LASF26:
 5507 02ff 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5507      696E6744 
 5507      69666665 
 5507      72656E63 
 5507      6554626C 
 5508              	.LASF7:
 5509 0314 6C6F6E67 		.ascii	"long long unsigned int\000"
 5509      206C6F6E 
 5509      6720756E 
 5509      7369676E 
 5509      65642069 
 5510              	.LASF128:
 5511 032b 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 5511      656E7365 
 5511      5F73656E 
 5511      736F7245 
 5511      6E61626C 
 5512              	.LASF60:
 5513 0345 77696467 		.ascii	"widget\000"
 5513      657400
 5514              	.LASF125:
 5515 034c 43617053 		.ascii	"CapSense_posFiltersMask\000"
 5515      656E7365 
 5515      5F706F73 
 5515      46696C74 
 5515      6572734D 
 5516              	.LASF136:
 5517 0364 43617053 		.ascii	"CapSense_fingerThreshold\000"
 5517      656E7365 
 5517      5F66696E 
 5517      67657254 
 5517      68726573 
 5518              	.LASF118:
 5519 037d 43617053 		.ascii	"CapSense_AveragingFilter\000"
 5519      656E7365 
 5519      5F417665 
 5519      72616769 
 5519      6E674669 
 5520              	.LASF129:
 5521 0396 43617053 		.ascii	"CapSense_widgetNumber\000"
 5521      656E7365 
 5521      5F776964 
 5521      6765744E 
 5521      756D6265 
 5522              	.LASF78:
 5523 03ac 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 5523      656E7365 
 5523      5F536574 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 151


 5523      46696E67 
 5523      65725468 
 5524              	.LASF123:
 5525 03c8 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 5525      656E7365 
 5525      5F446973 
 5525      61626C65 
 5525      52617744 
 5526              	.LASF73:
 5527 03e7 76616C75 		.ascii	"value\000"
 5527      6500
 5528              	.LASF76:
 5529 03ed 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 5529      656E7365 
 5529      5F476574 
 5529      46696E67 
 5529      65724879 
 5530              	.LASF71:
 5531 040a 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 5531      656E7365 
 5531      5F476574 
 5531      44696666 
 5531      436F756E 
 5532              	.LASF57:
 5533 0424 7369676E 		.ascii	"sign\000"
 5533      00
 5534              	.LASF98:
 5535 0429 6F666673 		.ascii	"offset\000"
 5535      657400
 5536              	.LASF25:
 5537 0430 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5537      65456E76 
 5537      656C6F70 
 5537      6554626C 
 5537      00
 5538              	.LASF56:
 5539 0441 63616C63 		.ascii	"calc\000"
 5539      00
 5540              	.LASF38:
 5541 0446 70747252 		.ascii	"ptrReadSensorRaw\000"
 5541      65616453 
 5541      656E736F 
 5541      72526177 
 5541      00
 5542              	.LASF88:
 5543 0457 68797374 		.ascii	"hysteresis\000"
 5543      65726573 
 5543      697300
 5544              	.LASF59:
 5545 0462 66696C74 		.ascii	"filteredRawData\000"
 5545      65726564 
 5545      52617744 
 5545      61746100 
 5546              	.LASF65:
 5547 0472 73656E73 		.ascii	"sensorsPerWidget\000"
 5547      6F727350 
 5547      65725769 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 152


 5547      64676574 
 5547      00
 5548              	.LASF149:
 5549 0483 443A5C50 		.ascii	"D:\\Programmation\\JS\\AnyBoardJS\\firmware\\CyPawn"
 5549      726F6772 
 5549      616D6D61 
 5549      74696F6E 
 5549      5C4A535C 
 5550 04b1 5C506177 		.ascii	"\\Pawn_PSoC4200\\PSoC_4_BLE_CapSense_Slider_LED02.c"
 5550      6E5F5053 
 5550      6F433432 
 5550      30305C50 
 5550      536F435F 
 5551 04e2 7964736E 		.ascii	"ydsn\000"
 5551      00
 5552              	.LASF94:
 5553 04e7 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 5553      656E7365 
 5553      5F436865 
 5553      636B4973 
 5553      416E7957 
 5554              	.LASF142:
 5555 0507 43617053 		.ascii	"CapSense_numberOfSensors\000"
 5555      656E7365 
 5555      5F6E756D 
 5555      6265724F 
 5555      6653656E 
 5556              	.LASF138:
 5557 0520 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 5557      656E7365 
 5557      5F6E6567 
 5557      61746976 
 5557      654E6F69 
 5558              	.LASF42:
 5559 0540 746F7461 		.ascii	"totalScanslotsNum\000"
 5559      6C536361 
 5559      6E736C6F 
 5559      74734E75 
 5559      6D00
 5560              	.LASF51:
 5561 0552 73656E73 		.ascii	"sensor\000"
 5561      6F7200
 5562              	.LASF45:
 5563 0559 73656E73 		.ascii	"sensetivitySeed\000"
 5563      65746976 
 5563      69747953 
 5563      65656400 
 5564              	.LASF95:
 5565 0569 43617053 		.ascii	"CapSense_EnableWidget\000"
 5565      656E7365 
 5565      5F456E61 
 5565      626C6557 
 5565      69646765 
 5566              	.LASF16:
 5567 057f 63686172 		.ascii	"char\000"
 5567      00
 5568              	.LASF77:
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 153


 5569 0584 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 5569      656E7365 
 5569      5F476574 
 5569      4E656761 
 5569      74697665 
 5570              	.LASF33:
 5571 05a7 70726573 		.ascii	"prescalerTable\000"
 5571      63616C65 
 5571      72546162 
 5571      6C6500
 5572              	.LASF10:
 5573 05b6 75696E74 		.ascii	"uint16\000"
 5573      313600
 5574              	.LASF69:
 5575 05bd 64617461 		.ascii	"data\000"
 5575      00
 5576              	.LASF18:
 5577 05c2 69646163 		.ascii	"idac1LevelsTbl\000"
 5577      314C6576 
 5577      656C7354 
 5577      626C00
 5578              	.LASF104:
 5579 05d1 7265736F 		.ascii	"resolution\000"
 5579      6C757469 
 5579      6F6E00
 5580              	.LASF91:
 5581 05dc 72617749 		.ascii	"rawIndex\000"
 5581      6E646578 
 5581      00
 5582              	.LASF107:
 5583 05e5 43617053 		.ascii	"CapSense_centroid\000"
 5583      656E7365 
 5583      5F63656E 
 5583      74726F69 
 5583      6400
 5584              	.LASF6:
 5585 05f7 6C6F6E67 		.ascii	"long long int\000"
 5585      206C6F6E 
 5585      6720696E 
 5585      7400
 5586              	.LASF119:
 5587 0605 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 5587      656E7365 
 5587      5F476574 
 5587      57696467 
 5587      65744E75 
 5588              	.LASF85:
 5589 061e 6465626F 		.ascii	"debounce\000"
 5589      756E6365 
 5589      00
 5590              	.LASF37:
 5591 0627 70747250 		.ascii	"ptrPreScan\000"
 5591      72655363 
 5591      616E00
 5592              	.LASF84:
 5593 0632 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 5593      656E7365 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 154


 5593      5F436865 
 5593      636B4973 
 5593      53656E73 
 5594              	.LASF36:
 5595 064f 70747247 		.ascii	"ptrGetRaw\000"
 5595      65745261 
 5595      7700
 5596              	.LASF62:
 5597 0659 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 5597      656E7365 
 5597      5F557064 
 5597      61746553 
 5597      656E736F 
 5598              	.LASF147:
 5599 0677 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5599      4320342E 
 5599      392E3320 
 5599      32303135 
 5599      30333033 
 5600 06aa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5600      20726576 
 5600      6973696F 
 5600      6E203232 
 5600      31323230 
 5601 06dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5601      66756E63 
 5601      74696F6E 
 5601      2D736563 
 5601      74696F6E 
 5602              	.LASF49:
 5603 0705 43617053 		.ascii	"CapSense_BaseInit\000"
 5603      656E7365 
 5603      5F426173 
 5603      65496E69 
 5603      7400
 5604              	.LASF103:
 5605 0717 43617053 		.ascii	"CapSense_CalcCentroid\000"
 5605      656E7365 
 5605      5F43616C 
 5605      6343656E 
 5605      74726F69 
 5606              	.LASF28:
 5607 072d 73616D70 		.ascii	"sampleMinTbl\000"
 5607      6C654D69 
 5607      6E54626C 
 5607      00
 5608              	.LASF127:
 5609 073a 43617053 		.ascii	"CapSense_sensorRaw\000"
 5609      656E7365 
 5609      5F73656E 
 5609      736F7252 
 5609      617700
 5610              	.LASF120:
 5611 074d 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 5611      656E7365 
 5611      5F476574 
 5611      4C6F7742 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 155


 5611      6173656C 
 5612              	.LASF81:
 5613 076a 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 5613      656E7365 
 5613      5F536574 
 5613      4E656761 
 5613      74697665 
 5614              	.LASF11:
 5615 078d 75696E74 		.ascii	"uint32\000"
 5615      333200
 5616              	.LASF113:
 5617 0794 66697273 		.ascii	"firstTimeIndex\000"
 5617      7454696D 
 5617      65496E64 
 5617      657800
 5618              	.LASF102:
 5619 07a3 73746172 		.ascii	"startOfSlider\000"
 5619      744F6653 
 5619      6C696465 
 5619      7200
 5620              	.LASF80:
 5621 07b1 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 5621      656E7365 
 5621      5F536574 
 5621      46696E67 
 5621      65724879 
 5622              	.LASF74:
 5623 07ce 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 5623      656E7365 
 5623      5F476574 
 5623      46696E67 
 5623      65725468 
 5624              	.LASF109:
 5625 07ea 6E756D65 		.ascii	"numerator\000"
 5625      7261746F 
 5625      7200
 5626              	.LASF67:
 5627 07f4 6C617374 		.ascii	"lastSensor\000"
 5627      53656E73 
 5627      6F7200
 5628              	.LASF46:
 5629 07ff 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5629      6B467265 
 5629      715F4D48 
 5629      7A00
 5630              	.LASF105:
 5631 080d 706F7350 		.ascii	"posPrev\000"
 5631      72657600 
 5632              	.LASF111:
 5633 0815 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 5633      656E7365 
 5633      5F476574 
 5633      43656E74 
 5633      726F6964 
 5634              	.LASF19:
 5635 082d 69646163 		.ascii	"idac2LevelsTbl\000"
 5635      324C6576 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 156


 5635      656C7354 
 5635      626C00
 5636              	.LASF2:
 5637 083c 73686F72 		.ascii	"short int\000"
 5637      7420696E 
 5637      7400
 5638              	.LASF4:
 5639 0846 6C6F6E67 		.ascii	"long int\000"
 5639      20696E74 
 5639      00
 5640              	.LASF66:
 5641 084f 66697273 		.ascii	"firstSensor\000"
 5641      7453656E 
 5641      736F7200 
 5642              	.LASF101:
 5643 085b 74656D70 		.ascii	"temp\000"
 5643      00
 5644              	.LASF97:
 5645 0860 43617053 		.ascii	"CapSense_FindMaximum\000"
 5645      656E7365 
 5645      5F46696E 
 5645      644D6178 
 5645      696D756D 
 5646              	.LASF23:
 5647 0875 77696467 		.ascii	"widgetNubmersTbl\000"
 5647      65744E75 
 5647      626D6572 
 5647      7354626C 
 5647      00
 5648              	.LASF122:
 5649 0886 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 5649      656E7365 
 5649      5F456E61 
 5649      626C6552 
 5649      61774461 
 5650              	.LASF135:
 5651 08a4 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 5651      656E7365 
 5651      5F6C6F77 
 5651      42617365 
 5651      6C696E65 
 5652              	.LASF110:
 5653 08be 64656E6F 		.ascii	"denominator\000"
 5653      6D696E61 
 5653      746F7200 
 5654              	.LASF31:
 5655 08ca 6B56616C 		.ascii	"kValueTbl\000"
 5655      75655462 
 5655      6C00
 5656              	.LASF130:
 5657 08d4 43617053 		.ascii	"CapSense_sensorBaseline\000"
 5657      656E7365 
 5657      5F73656E 
 5657      736F7242 
 5657      6173656C 
 5658              	.LASF100:
 5659 08ec 6D617869 		.ascii	"maximum\000"
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 157


 5659      6D756D00 
 5660              	.LASF17:
 5661 08f4 73697A65 		.ascii	"sizetype\000"
 5661      74797065 
 5661      00
 5662              	.LASF5:
 5663 08fd 6C6F6E67 		.ascii	"long unsigned int\000"
 5663      20756E73 
 5663      69676E65 
 5663      6420696E 
 5663      7400
 5664              	.LASF47:
 5665 090f 706F696E 		.ascii	"pointers\000"
 5665      74657273 
 5665      00
 5666              	.LASF61:
 5667 0918 6E6F6973 		.ascii	"noiseThreshold\000"
 5667      65546872 
 5667      6573686F 
 5667      6C6400
 5668              	.LASF30:
 5669 0927 70726576 		.ascii	"previousSampleTbl\000"
 5669      696F7573 
 5669      53616D70 
 5669      6C655462 
 5669      6C00
 5670              	.LASF82:
 5671 0939 43617053 		.ascii	"CapSense_SetDebounce\000"
 5671      656E7365 
 5671      5F536574 
 5671      4465626F 
 5671      756E6365 
 5672              	.LASF87:
 5673 094e 66696E67 		.ascii	"fingerThreshold\000"
 5673      65725468 
 5673      72657368 
 5673      6F6C6400 
 5674              	.LASF21:
 5675 095e 63686172 		.ascii	"chargeDivTbl\000"
 5675      67654469 
 5675      7654626C 
 5675      00
 5676              	.LASF1:
 5677 096b 756E7369 		.ascii	"unsigned char\000"
 5677      676E6564 
 5677      20636861 
 5677      7200
 5678              	.LASF137:
 5679 0979 43617053 		.ascii	"CapSense_noiseThreshold\000"
 5679      656E7365 
 5679      5F6E6F69 
 5679      73655468 
 5679      72657368 
 5680              	.LASF86:
 5681 0991 6465626F 		.ascii	"debounceIndex\000"
 5681      756E6365 
 5681      496E6465 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 158


 5681      7800
 5682              	.LASF52:
 5683 099f 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 5683      656E7365 
 5683      5F496E69 
 5683      7469616C 
 5683      697A6541 
 5684              	.LASF70:
 5685 09bf 43617053 		.ascii	"CapSense_GetBaselineData\000"
 5685      656E7365 
 5685      5F476574 
 5685      42617365 
 5685      6C696E65 
 5686              	.LASF83:
 5687 09d8 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 5687      656E7365 
 5687      5F536574 
 5687      4C6F7742 
 5687      6173656C 
 5688              	.LASF20:
 5689 09f5 73656E73 		.ascii	"sensetivityTbl\000"
 5689      65746976 
 5689      69747954 
 5689      626C00
 5690              	.LASF124:
 5691 0a04 43617053 		.ascii	"CapSense_centroidMult\000"
 5691      656E7365 
 5691      5F63656E 
 5691      74726F69 
 5691      644D756C 
 5692              	.LASF148:
 5693 0a1a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 5693      72617465 
 5693      645F536F 
 5693      75726365 
 5693      5C50536F 
 5694              	.LASF93:
 5695 0a41 73746174 		.ascii	"state\000"
 5695      6500
 5696              	.LASF146:
 5697 0a47 43617053 		.ascii	"CapSense_enableRawFilters\000"
 5697      656E7365 
 5697      5F656E61 
 5697      626C6552 
 5697      61774669 
 5698              	.LASF22:
 5699 0a61 6D6F6444 		.ascii	"modDivTbl\000"
 5699      69765462 
 5699      6C00
 5700              	.LASF0:
 5701 0a6b 7369676E 		.ascii	"signed char\000"
 5701      65642063 
 5701      68617200 
 5702              	.LASF3:
 5703 0a77 73686F72 		.ascii	"short unsigned int\000"
 5703      7420756E 
 5703      7369676E 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 159


 5703      65642069 
 5703      6E7400
 5704              	.LASF116:
 5705 0a8a 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 5705      656E7365 
 5705      5F476574 
 5705      52616469 
 5705      616C4365 
 5706              	.LASF40:
 5707 0aa8 70747253 		.ascii	"ptrSetBitValue\000"
 5707      65744269 
 5707      7456616C 
 5707      756500
 5708              	.LASF117:
 5709 0ab7 43617053 		.ascii	"CapSense_MedianFilter\000"
 5709      656E7365 
 5709      5F4D6564 
 5709      69616E46 
 5709      696C7465 
 5710              	.LASF58:
 5711 0acd 74656D70 		.ascii	"tempRaw\000"
 5711      52617700 
 5712              	.LASF121:
 5713 0ad5 43617053 		.ascii	"CapSense_GetDebounce\000"
 5713      656E7365 
 5713      5F476574 
 5713      4465626F 
 5713      756E6365 
 5714              	.LASF90:
 5715 0aea 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 5715      656E7365 
 5715      5F436865 
 5715      636B4973 
 5715      57696467 
 5716              	.LASF9:
 5717 0b07 75696E74 		.ascii	"uint8\000"
 5717      3800
 5718              	.LASF15:
 5719 0b0d 646F7562 		.ascii	"double\000"
 5719      6C6500
 5720              	.LASF41:
 5721 0b14 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5721      656E7365 
 5721      5F434F4E 
 5721      4649475F 
 5721      54595045 
 5722              	.LASF143:
 5723 0b3b 43617053 		.ascii	"CapSense_rawFilterData1\000"
 5723      656E7365 
 5723      5F726177 
 5723      46696C74 
 5723      65724461 
 5724              	.LASF144:
 5725 0b53 43617053 		.ascii	"CapSense_rawFilterData2\000"
 5725      656E7365 
 5725      5F726177 
 5725      46696C74 
ARM GAS  C:\Users\Nakio\AppData\Local\Temp\cc7ItF7c.s 			page 160


 5725      65724461 
 5726              	.LASF108:
 5727 0b6b 706F7369 		.ascii	"position\000"
 5727      74696F6E 
 5727      00
 5728              	.LASF133:
 5729 0b74 43617053 		.ascii	"CapSense_sensorOnMask\000"
 5729      656E7365 
 5729      5F73656E 
 5729      736F724F 
 5729      6E4D6173 
 5730              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
